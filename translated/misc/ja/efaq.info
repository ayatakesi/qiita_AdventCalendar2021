This is efaq.info, produced by makeinfo version 6.8 from efaq.texi.

Copyright © 2001–2021 Free Software Foundation, Inc.
Copyright © 1994, 1995, 1996, 1997, 1998, 1999, 2000 Reuven M. Lerner
Copyright © 1992, 1993 Steven Byrnes
Copyright © 1990, 1991, 1992 Joseph Brian Wells

     This list of frequently asked questions about GNU Emacs with
     answers (“FAQ”) may be translated into other languages, transformed
     into other formats (e.g., Texinfo, Info, HTML, PDF), and updated
     with new information.

     The same conditions apply to any derivative of the FAQ as apply to
     the FAQ itself.  Every copy of the FAQ must include this notice or
     an approved translation, information on who is currently
     maintaining the FAQ and how to contact them (including their e-mail
     address), and information on where the latest version of the FAQ is
     archived (including FTP information).

     The FAQ may be copied and redistributed under these conditions,
     except that the FAQ may not be embedded in a larger literary work
     unless that work itself allows free copying and redistribution.

     [This version has been heavily edited since it was included in the
     Emacs distribution in 1999.]
INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacs FAQ: (efaq).         Frequently Asked Questions about Emacs.
END-INFO-DIR-ENTRY


File: efaq.info,  Node: Top,  Next: FAQ notation,  Prev: (dir),  Up: (dir)

The GNU Emacs FAQ
*****************

これはGNU EmacsのFAQ(Frequently Asked Questions: よくある質問)です。

   このFAQはGNU Emacsの一部として保守されています。何か間違いを見つけた
り提案がある場合には、それらを報告するために‘M-x report-emacs-bug’を使う
ようお願いします。

   これはEmacs 27.2とともに配布されているバージョンのFAQであり、主にその
バージョンについて記述しています。それより古いバージョンについての情報が
あったとしても、(今となっては歴史的な関心のためだけとなった)非常に古いリ
リースに関する詳細は削除されています。これらに興味がある場合には古いバー
ジョンのEmacsに同梱されているバージョンのFAQ、あるいはこのドキュメントの
Emacsソースレポジトリのヒストリーを参照してください。

   Emacsのリリースバージョンはとても安定しているので、常に最新リリースの
実行をお勧めします。

   このFAQは非常に頻繁に更新されている訳ではありません。Emacsについての
疑問がある場合には、Emacsマニュアルが最良の出発点であることが多々ありま
す。

   Copyright © 2001–2021 Free Software Foundation, Inc.
Copyright © 1994, 1995, 1996, 1997, 1998, 1999, 2000 Reuven M. Lerner
Copyright © 1992, 1993 Steven Byrnes
Copyright © 1990, 1991, 1992 Joseph Brian Wells

     This list of frequently asked questions about GNU Emacs with
     answers (“FAQ”) may be translated into other languages, transformed
     into other formats (e.g., Texinfo, Info, HTML, PDF), and updated
     with new information.

     The same conditions apply to any derivative of the FAQ as apply to
     the FAQ itself.  Every copy of the FAQ must include this notice or
     an approved translation, information on who is currently
     maintaining the FAQ and how to contact them (including their e-mail
     address), and information on where the latest version of the FAQ is
     archived (including FTP information).

     The FAQ may be copied and redistributed under these conditions,
     except that the FAQ may not be embedded in a larger literary work
     unless that work itself allows free copying and redistribution.

     [This version has been heavily edited since it was included in the
     Emacs distribution in 1999.]

* Menu:

* FAQ notation::
* General questions::
* Getting help::
* Status of Emacs::
* Common requests::
* Bugs and problems::
* Compiling and installing Emacs::
* Finding Emacs and related packages::
* Key bindings::
* Alternate character sets::
* Mail and news::
* Concept index::


File: efaq.info,  Node: FAQ notation,  Next: General questions,  Up: Top

1 FAQの表記について
*******************

このチャプターではGNU Emacs FAQ、並びにEmacsドキュメントで使用する表記に
ついて説明します。これがFAQを読む最初の機会の場合、あるいはFAQで使用され
ている表記や用語について混乱したらこのセクションを参照してください。

* Menu:

* Basic keys::
* Extended commands::
* Emacs manual::
* File-name conventions::
* Common acronyms::


File: efaq.info,  Node: Basic keys,  Next: Extended commands,  Up: FAQ notation

1.1 ‘C-h’、‘C-M-a’、<RET>、‘<ESC> a’等は何を意味するのか?
=========================================================

   • ‘C-x’:<Control>キーを押したまま‘x’キーを押下する

   • ‘M-x’: <Meta>キー(コンピューターに<Meta>キーがなければ*note No Meta
     key::を参照)を押したまま‘x’キーを押下する

   • ‘M-C-x’: <Control>と<Meta>の両方を押したまま‘x’キーを押下する

   • ‘C-M-x’: 上記と同義

   • <LFD>: ラインフィードまたは改行; ‘C-j’と同じ

   • <RET>: <Return>のこと、<Enter>と記される場合もあり; ‘C-m’と同じ

   • <DEL>: <Delete>のこと、通常は<Backspace>と*同じではない*; ‘C-?’と同
     じ (deleteでEmacsのヘルプが呼び出される場合には*note Backspace
     invokes help::を参照)

   • <ESC>: Escapeのこと; ‘C-[’と同じ

   • <TAB>: Tabのこと; ‘C-i’と同じ

   • <SPC>: Spaceバー

   1つのキー(およびいくつかの単一キーシーケンス)より長いキーシーケンスは
以下のようにクォート内部や行にその文字自体を記述します:

       ‘M-x frobnicate-while-foo <RET>’

このようなキーシーケンス内にある実際のスペースはすべて無視する必要があり
ます; 実際にスペースキーの押下を意味するのは<SPC>だけです。

   ‘C-x’ (‘C-?’は例外)により送信されるASCIIコードは単に‘x’を押下時に送信
される値から96(大文字の‘X’では64)を減じた値であり、これは0から31になるで
しょう。UnixおよびGNU/Linuxの端末においては、‘M-x’が送信するASCIIコード
は単に‘x’を押下時に送信される値に128を加えた値になります。基本的には
<Control>はビット5とビット6をオフにして、<Meta>はビット7をオンにします
(1)。

   ‘C-?’ (別名<DEL>)はASCIIコードの127です。127はビットの5と6がどちらも
オンなので、‘C-?’を“control”キーと呼ぶのは誤った呼び方です。更にほとんど
ありませんが‘C-?’がASCIIコードの127を生成するキーボードも存在します。

   *note (emacs)Keys::を参照してください。

   ---------- Footnotes ----------

   (1) DOSおよびWindowsの端末では<Meta>キー押下時にビット7をセットしませ
ん。


File: efaq.info,  Node: Extended commands,  Next: Emacs manual,  Prev: Basic keys,  Up: FAQ notation

1.2 ‘M-x COMMAND’の意味は?
==========================

‘M-x COMMAND’は‘M-x’をタイプしてからコマンドの名前、その後に<RET>をタイ
プする(‘M-x’や<RET>の意味があやふやなら*Note Basic keys::を参照)。

   (デフォルトでは)‘M-x’はコマンド‘execute-extended-command’を呼び出しま
す。このコマンドによってコマンド名を覚えていれば任意のEmacsコマンドを実
行できます。コマンド名を覚えることができなければ補完には<TAB>や<SPC>、利
用可能なコマンドの一覧は‘?’、以前に入力したコマンドの確認には‘M-p’と
‘M-n’(または上下の矢印)をタイプできます。Emacsの“コマンド(command)”とは
“インタラクティブ(interactive: 対話的)”なEmacs関数のことです。

   システム管理者によって‘execute-extended-command’呼び出しが別のキーに
バインドされているかもしれません。‘Do’とラベル付けされたキーをもつような
キーボードなら、これを行うための良い候補になります。

   非インタラクティブなEmacs関数の実行が必要なら*note Evaluating Emacs
Lisp code::を参照してください。


File: efaq.info,  Node: Emacs manual,  Next: File-name conventions,  Prev: Extended commands,  Up: FAQ notation

1.3 EmacsマニュアルでトピックXXXを読むには?
===========================================

わたしたちがEmacsマニュアル内のあるTOPICを参照する際には、‘C-h i m emacs
<RET> m TOPIC <RET>’とタイプすれば(壊れていなければ)そのマニュアルノード
の中を読むことができます。

   これはInfo、つまりGNUハイパーテキストドキュメントブラウザを呼び出しま
す。Infoの使用方法をまだご存知なければ、Info内で‘?’をタイプしてください
。

   わたしたちがTOPIC:SUBTOPICで参照する場合には‘C-h i m emacs <RET> m
TOPIC <RET> m SUBTOPIC <RET>’とタイプしてください。

   これらのコマンドが期待した通りに機能しなければ、システム管理者が
Infoファイルをインストールしていないか、正しくインストールされていないか
もしれません。この場合には苦情を申し立てるべきでしょう。

   Info内でこのFAQを読んでいるなら、リファレンス上で単に<RET>を押下すれ
ばフォローできます。

   Emacsマニュアルのハードコードをご所望なら*Note Getting a printed
manual::を参照してください。


File: efaq.info,  Node: File-name conventions,  Next: Common acronyms,  Prev: Emacs manual,  Up: FAQ notation

1.4 ‘src/config.h’、‘site-lisp/default.el’等は何なのか?
=======================================================

これらはEmacsとともに配布されるファイルです。Emacsディストリビューション
は‘etc’、‘lisp’、‘src’等のサブディレクトリーに分かれています。これらの内
のいくつか(‘etc’や‘lisp’など)はインストール済みEmacsとソースの両方に存在
しますが、ソース内でのみ見いだせるものもあります(‘src’など)。

   ineEmacsを使っているもののシステム上のどこにあるか判らない場合には、
Emacsを起動して‘C-h v data-directory <RET>’とタイプしてください。表示さ
れるディレクトリー名は、‘etc’ディレクトリーがインストールされたフルパス
になるでしょう(このフルパスはEmacs変数‘data-directory’に記録されており、
‘C-h v’でこの値と変数のドキュメントが表示される)。

   Infoディレクトリーはの場所(Infoドキュメントが格納されている場所)変数
‘Info-default-directory-list’に保持されています。この変数の値(ディレクト
リー名のリスト)を確認するには‘C-h v Info-default-directory-list <RET>’を
使用してください。このリスト内にある最後のディレクトリーに、恐らくもっと
も多くのInfoファイルが格納されているでしょう。デフォルトではEmacsの
Infoドキュメントは‘/usr/local/share/info’にあります。

   ‘etc’ディレクトリー内にあるいくつかのファイルに関する情報については
*note Informational files for Emacs::を参照してください。


File: efaq.info,  Node: Common acronyms,  Prev: File-name conventions,  Up: FAQ notation

1.5 FSF、GNU、RMS、GPLとは何なのか?
===================================

FSF
     フリーソフトウェア財団(Free Software Foundation)

GNU
     GNU’s Not Unix(GNUはUnixではない)

RMS
     Richard Matthew Stallman

GPL
     GNU 一般公衆利用許諾書(GNU GENERAL PUBLIC LICENSE)

   フリーソフトウェア財団(Free Software Foundation)のタイトルにある“フリ
ー(free)”とは、“ゼロコスト(zero cost)”ではなく“自由(freedom)”を意図した
単語です。GPLの対象となるソフトウェアにたいして、もし望むなら誰でも対価
を請求できます。とはいえ実際にはGPLが課した自由により、誰でもGPLソフトウ
ェアの再販や譲渡を行う権利を有するので、常に誰か他の人からより少ない金額
でソフトウェアを入手できることから低価格へとつながります。


File: efaq.info,  Node: General questions,  Next: Getting help,  Prev: FAQ notation,  Up: Top

2 一般的な質問
**************

このチャプターではEmacs、フリーソフトウェア財団や関連する組織にたいする
一般的な問いが含まれています。

* Menu:

* Real meaning of copyleft::
* Guidelines for newsgroup postings::
* Newsgroup archives::
* Reporting bugs::
* Unsubscribing from Emacs lists::
* Contacting the FSF::


File: efaq.info,  Node: Real meaning of copyleft,  Next: Guidelines for newsgroup postings,  Up: General questions

2.1 GNUのcopyleftとは法的に実際には何を意味するのか?
====================================================

GNU 一般公衆利用許諾書、いわゆるGPL(コピーレフト)の真の法的な意味合いは
、裁判官がその有効性と範囲を裁定した場合にのみ明らかになります。判例とし
て定められるようなGPLが関与する著作権侵害の訴訟はこれまでに一度もありま
せんでした。GPL条件への違反によって企業への訴訟が起こされましたが、これ
までのところすべてが法廷外で(原告に有利に)和解されています。この問題に関
しての議論は、どうかこの問題について大々的に罵り合うために作成されたニュ
ースグループ<news:gnu.misc.discuss>で行ってください。

   RMSは記しています:

     GNUコピーレフトの法的な意味は、Emacsがフリーソフトウェアプロジェク
     トであり、Emacsに関連する作業もフリーソフトウェアであるべくだという
     精神ほど重要ではありません。“フリー(free)”とはすべてのユーザーが
     Emacsを学び、共有して、変更や改善を行う自由(freedom)をもっていると
     いう意味です。すべての人がこの自由を有することを保証するために、あ
     なたがEmacsのあるバージョンや関連プログラムを配布する際には、それを
     受け取る人にソースコードも渡すことによって、あなたが楽しんだのと同
     じ自由を分け与えてください。


File: efaq.info,  Node: Guidelines for newsgroup postings,  Next: Newsgroup archives,  Prev: Real meaning of copyleft,  Up: General questions

2.2 What are appropriate messages for the various Emacs newsgroups?
===================================================================

Emacsメーリングリストのはthe Emacs Savannah page
(https://savannah.gnu.org/mail/?group=emacs)に記述があります。それらのう
ちのいくつかはニュースグループへゲートウェイされています。

   Emacsプログラム全般に関する議論はニュースグループ<news:comp.emacs>、
<news:gnu.emacs.help>はGNU Emacsに特化したニュースグループです。したがっ
てある問いにたいして適切なニュースグループは1つだけなので、両方のグルー
プへのクロスポストには意味がありません。

   問題について大いに罵り合うために作成された<news:gnu.misc.discuss>を除
いて、“非フリー(non-free)”なソフトウェアを推奨するようなメッセージは
‘gnu.*’ニュースグループのすべてにおいて受け入れ難いものとみなされます。
“非フリー”なソフトウェアにはエンドユーザーが自由にソースコードを改変した
り拡張機能の取り替えができないすべてのソフトウェアが含まれます。そのよう
なソフトウェアを推奨するフォローアップを投稿する際には、‘Newsgroups:’行
から‘gnu.*’グループを削除するよう注意してください。

   <news:gnu.emacs.bug>はバグレポートを目にする場所ですが、このニュース
グループに直接バグレポートを投稿することは避けてください(*note Reporting
bugs::を参照)。

   最後にGNUのメーリングリストやニュースグループに投稿する前にGNU Kind
Communications Guidelines
(https://www.gnu.org/philosophy/kind-communication.html)を一読することを
お勧めします。


File: efaq.info,  Node: Newsgroup archives,  Next: Reporting bugs,  Prev: Guidelines for newsgroup postings,  Up: General questions

2.3 <news:gnu.emacs.help>や他のGNUグループへの古い投稿はどこで入手できる?
=========================================================================

網羅する範囲において意図していない齟齬があるかもしれませんが、FSFはGNUメ
ーリングリストすべてのアーカイブを長年保守してきました。このアーカイブが
the GNU mail archive (https://lists.gnu.org/r/)でウェブ上で閲覧できます
。

   Google (http://groups.google.com/groups/dir?q=gnu&)のようなウェブベー
スのUsenet検索サービスでも‘gnu.*’はアーカイブされています。


File: efaq.info,  Node: Reporting bugs,  Next: Unsubscribing from Emacs lists,  Prev: Newsgroup archives,  Up: General questions

2.4 Emacsのバグやその他の問題はどこにレポートすれば?
====================================================

コマンド‘M-x report-emacs-bug’を使用するのがEmacsのバグを報告する正しい
方法です。このコマンドは必要な情報と正しいEメールアドレス
<bug-gnu-emacs@gnu.org>でメールバッファーをセットアップします。ここに送
信したものはニュースグループ<news:gnu.emacs.bug>でも目にすることができま
すが、バグレポートの提出にはどうかニュースではなくEメールを使用してくだ
さい。これによって信頼できる返信アドレスが保証されるので、詳細についてあ
なたに連絡をとることができるようになります。

   バグを報告する前に必ずEmacsマニュアルの“Bugs”セクションを読んでくださ
い。マニュアルには有用なバグレポートを投稿する方法(*note Reporting Bugs:
(emacs)Bugs.を参照)が詳細に渡って記述されています(マニュアルの読み方が判
らなければ*note Emacs manual::を参照)。

   RMSは述べています:

     バグレポートをthe help-gnu-emacs mailing list
     (https://lists.gnu.org/mailman/listinfo/help-gnu-emacs)
     (<news:gnu.emacs.help>に投稿される効果をもつ)に送信するのは、ほとん
     どは問題を解決するアイデアをもたない単なるユーザーである多数の人た
     ちに不必要に費やさせるので望ましくありません。The bug-gnu-emacs
     list (https://lists.gnu.org/mailman/listinfo/bug-gnu-emacs)なら何を
     するべきか恐らくもっと知識があり、他のものよりもEmacsのメッセージを
     受け取りたいと表明している、より少ない人たちにメッセージを届けられ
     ます。

   RMSは<news:gnu.emacs.help>へ投稿しても問題がない場合について述べてい
ます:

     バグをレポートして利用可能な修整について収穫が得られなかったら適切
     な遅延(1週間とか)を経た後で、あなたを助けられる誰かに助けを求めるた
     めに‘gnu.emacs.help’へ投稿することに問題はありません。

   バグを発見したのか確信がもてない場合には、RMSの好意による以下のそれほ
ど徹底はされていないリストを検討してみてください:

     Emacsがクラッシュしたら、それはバグです。Emacsのビルド時にコンパイ
     ルがエラーとなるなら、それはバグです。ビルド時にEmacsがクラッシュし
     たら、それはバグです。ドキュメントに記述された通りにLispコードが処
     理を行わなければ、それはバグです。


File: efaq.info,  Node: Unsubscribing from Emacs lists,  Next: Contacting the FSF,  Prev: Reporting bugs,  Up: General questions

2.5 How do I unsubscribe from a mailing list?
=============================================

あなたがLISTという名前のGNUメーリングリストからメールを受信しているなら
、アドレス<LIST-request@gnu.org>にリクエストを送信すれば登録解除できるは
ずです。メーリングリストのメールには通常ならメッセージヘッダー
(‘List-Unsubscribe:’)、あるいはフッターのいずれかに登録を解除する方法を
告げる情報が含まれています。


File: efaq.info,  Node: Contacting the FSF,  Prev: Unsubscribing from Emacs lists,  Up: General questions

2.6 How do I contact the FSF?
=============================

最新の情報はthe FSF contact web-page
(https://www.fsf.org/about/contact.html)を参照してください。一般的な対応
なら<info@fsf.org>に送信できます。

   FSFに直接アイテムを注文する方法の詳細はFSF on-line store
(https://shop.fsf.org/)を参照してください。


File: efaq.info,  Node: Getting help,  Next: Status of Emacs,  Prev: General questions,  Up: Top

3 助けを得るには
****************

このチャプターではEmacsでヘルプを得る方法について説明します。

* Menu:

* Basic editing::
* Learning how to do something::
* Getting a printed manual::
* Emacs Lisp documentation::
* Installing Texinfo documentation::
* Printing a Texinfo file::
* Viewing Info files outside of Emacs::
* Informational files for Emacs::
* Help installing Emacs::
* Obtaining the FAQ::


File: efaq.info,  Node: Basic editing,  Next: Learning how to do something,  Up: Getting help

3.1 Emacsは初めて; 基本的な編集を行うには?
==========================================

マイペースで学べるチュートリアルを呼び出すには‘C-h t’とタイプします。単
に‘C-h’とタイプすることでヘルプシステムにエンターします。このチュートリ
アルはEmacs 22以降はフランス語、ドイツ語、日本語、ロシア語等、英語以外の
多くの言語で利用できるようになりました。言語を選んでチュートリアルを開始
するには‘M-x help-with-tutorial-spec-language <RET>’とタイプしてください
。

   ローカルのキーボードを処理するために、‘C-h’が<DEL>のように振る舞うよ
うにシステム管理者が変更しているかもしれません。ヘルプの呼び出しにはかわ
りに‘M-x help-for-help’を使用できます。システム上でヘルプを呼び出すキー
(もしあれば)を見つけるには‘M-x where-is <RET> help-for-help <RET>’とタイ
プします。これはエコーエリア内にカンマで区切られたキーシーケンスのリスト
をプリントします。リストされた各キーシーケンスの最後の文字は無視してくだ
さい。結果として得られたキーシーケンス(<F1>が一般的)のそれぞれがヘルプを
呼び出します。

   Emacsのヘルプが単一のキーで呼び出せればもっとも良く機能します。この値
は変数‘help-char’に格納されているはずです。

   <http://web.psung.name/emacs/>ではEmacsのスライドやチュートリアルをい
くつか見つけることができます。


File: efaq.info,  Node: Learning how to do something,  Next: Getting a printed manual,  Prev: Basic editing,  Up: Getting help

3.2 Emacsで何かを行う方法を見つけるには?
========================================

Emacsで物事を行う方法を見つけるには複数の手法があります。

   • Infoハイパーテキストリーダーを通じてEmacsマニュアルの完全なテキスト
     が利用できます。Infoモードでマニュアルを表示するには‘C-h r’とタイプ
     してください。Infoにエンター直後に‘h’とタイプすれば、その使用方法に
     関する短いチュートリアルが提供されるでしょう。

   • 特定の問題やコマンド、変数について述べているマニュアルのセクション
     を素早く見つけるには‘C-h i m emacs <RET> i TOPIC <RET>’とタイプしま
     す。これで正しいマニュアル箇所に辿り着けないようなら、必要なものが
     見つかるまで‘,’ (カンマ)を繰り返し押下してください(‘i’と‘,’は
     Emacsマニュアルの全インデックスからタイプされたTOPICを探すインデッ
     クス検索関数を呼び出すキー)。

   • ‘C-h a’ (‘M-x command-apropos’)を使用すれば、特定の単語を含んだすべ
     てのコマンド(実際には正規表現にマッチしたコマンド)を一覧できます。

   • コマンド‘C-h F’ (‘Info-goto-emacs-command-node’)はコマンド名の入力
     を求めて、そのコマンドの記述があるEmacsマニュアルのセクションの検索
     を試みます。

   • ‘M-x apropos’を使用すれば名前に特定の単語を含んだ関数およびコマンド
     をすべて一覧できます。

   • ‘M-x apropos-documentation’を使用すればドキュメントが正規表現または
     文字列ににマッチする関数およびコマンドをすべて一覧できます。

   • FSFからマニュアルのハードコードを注文できます。*note Getting a
     printed manual::を参照してください。

   • コマンドとそれらを呼び出すキーを一覧する印刷されたリファレンスカー
     ドを入手できます。$2(または$10か$18)でFSFに注文するか、Emacsディス
     トリビューション内のファイル‘etc/refcards/refcard.tex’または
     ‘etc/refcards/refcard.pdf’を自分でプリントできます。バージョン
     21.1以降のEmacsディストリビューションには複数の言語に翻訳されたリフ
     ァレンスカードが同梱されています。‘etc/refcards/LANG-refcard.*’
     (LANGは言語のアルファベット2文字コード)という名前のファイルを探して
     みてください。たとえばドイツ語バージョンのリファレンスカードは
     ‘etc/refcards/de-refcard.tex’と‘etc/refcards/de-refcard.pdf’にあり
     ます。

   • Emacsには他にもヘルプや情報を得るためのコマンドが多数存在します。こ
     れらのコマンドの一覧を得るには‘C-h’の後に‘?’をタイプしてください。


File: efaq.info,  Node: Getting a printed manual,  Next: Emacs Lisp documentation,  Prev: Learning how to do something,  Up: Getting help

3.3 Emacsマニュアルの印刷版コピーを入手するには?
================================================

Emacsマニュアルの印刷されたコピーわFSFに注文できます。詳細はFSF on-line
store (https://shop.fsf.org/)を参照してください。

   この数百ページに及ぶマニュアルを自分でプリントする勇気があるなら、マ
ニュアルの完全なTexinfoソースもEmacsディストリビューションの
‘doc/emacs’ディレクトリーにあります(*note Printing a Texinfo file::を参
照)。

   どうしても自分でコピーをプリントする必要があるもののTeXがない場合には
、

   <https://www.gnu.org/software/emacs/manual/>からPostScriptやPDF(ある
いはHTML)のバージョンを入手できます。

   Emacsからマニュアルを閲覧する方法については*note Learning how to do
something::を参照してください。


File: efaq.info,  Node: Emacs Lisp documentation,  Next: Installing Texinfo documentation,  Prev: Getting a printed manual,  Up: Getting help

3.4 Emacs Lispではどこでドキュメントを入手すれば?
=================================================

Emacsでは関数なら‘C-h f’、変数なら‘C-h v’とタイプしてドキュメントを入手
できます。

   詳細についてはEmacs LispリファレンスマニュアルがInfo形式で利用可能で
す(*note Emacs Lisp: (elisp)Top.を参照)。

   FSFにマニュアルのハードコードを注文することもできます。詳細はFSF
on-line store (https://shop.fsf.org/)を参照してください(このマニュアルは
常にプリントされているる訳ではない)。

   Emacs LispリファレンスマニュアルのHTMLバージョンは

   <https://www.gnu.org/software/emacs/elisp-manual/elisp.html>から利用
できます。


File: efaq.info,  Node: Installing Texinfo documentation,  Next: Printing a Texinfo file,  Prev: Emacs Lisp documentation,  Up: Getting help

3.5 Texinfoドキュメントをインストールするには?
==============================================

Emacsのリリースにはビルド前のInfoファイルが同梱されており、通常のインス
トールプロセスによって正しい場所に配置されます。これはInfoファイルを提供
するほとんどのアプリケーションにも当てはまります。以降は手作業で追加の
Infoファイルをインストールしたいユーザーだけに関係のあるセクションです。

   まずはTexinfoソースファイルをInfoファイルにしなければなりません。

   <https://www.gnu.org/software/texinfo/>にあるTexinfoパッケージの一部
として利用可能なスタンドアロンプログラム‘makeinfo’を使用してこれを行うこ
とができます。

   TexinfoフォーマットについてはTexinfoパッケージに同梱されている
Texinfoマニュアルを読んでください。このマニュアルはInfoフォーマットでも
インストールされるので、Emacsから‘C-h i m texinfo <RET>’とタイプして読む
ことができます。

   かわりに変換したいマニュアルのTexinfoソースファイルをEmacsでvisitした
後にコマンド‘M-x texinfo-format-buffer’を使用することもできます。

   ‘texinfo-format-buffer’と‘makeinfo’はどちらも実行結果のInfoファイルを
EmacsのInfoツリーにインストールしません。Infoファイルをインストールする
には以下の手順を行ってください:

  1. インストール済みEmacsディストリビューションの‘info’ディレクトリーに
     ファイルを移動する。場所が判らなければ*note File-name
     conventions::を参照のこと。

  2. メインのInfoディレクトリーメニュー更新のために、以下のようにして
     Texinfoディストリビューションの一部である‘install-info’コマンドを実
     行する。:

           install-info --info-dir=DIR-PATH DIR-PATH/FILE

     ここでDIR-PATHは生成したInfoファイルをコピーしたディレクトリーへの
     フルパス、FILEは生成してインストールしたいInfoファイルの名前。

     インストール済みの‘install-info’コマンドがなければインストール済み
     Emacsディストリビューションのファイル‘info/dir’を編集してインストー
     ルされているInfoパッケージ内のトップレベルノードに行を追加できる。
     このファイル内にある例にしたがえばよい。フォーマットは:

          * Topic: (relative-pathname).  Short description of topic.

   Infoファイルをインストールしたいが必要な権限がない場合にはいくつかの
オプションがあります:

   • 使用する前に実際にInfoファイルがインストールされている必要はない。
     ‘info’コマンドにプレフィクス引数を使用して、ミニバッファーでInfoフ
     ァイルの名前を指定できる。これによりそのInfoファイル内の‘Top’という
     名前のノードに移動する。たとえばホームディレクトリーにある
     ‘INFO-FILE’という名前のInfoファイルを閲覧するには、以下のようにタイ
     プできる:

          C-u C-h i ~/INFO-FILE <RET>

     かわりにファイルの名前を以下のようにカッコ内にタイプして(Infoモード
     で‘g’押下により呼び出される)‘Info-goto-node’コマンドにファイル名を
     与えることができる。

          C-h i g (~/INFO-FILE) <RET>

   • 自分用のInfoディレクトリーを作成できる。変数
     ‘Info-default-directory-list’の値にパス名を追加することによって
     EmacsにInfoディレクトリーの場所を伝えることができる。たとえばホーム
     ディレクトリーにある‘Info’という名前のサブディレクトリーを個人用の
     Infoディレクトリーとして使用するには以下を‘.emacs’ファイルに追加す
     ればよい:

          (add-to-list 'Info-default-directory-list "~/Info")

     このディレクトリーには‘dir’という名前のトップレベルInfoファイルが必
     要になるだろう。これはそのディレクトリーにあるInfoファイルのエント
     リーだけをリストスル点を除き、システムの‘dir’がもつすべてをもつ。
     (偶然にも)このディレクトリー内のすべてのファイルが他の‘dir’ファイル
     から参照されていれば、これは必要ないかもしれない。
     ‘Info-default-directory-list’内のすべての‘dir’ファイルのノードリス
     トはInfoシステムによってマージされる。


File: efaq.info,  Node: Printing a Texinfo file,  Next: Viewing Info files outside of Emacs,  Prev: Installing Texinfo documentation,  Up: Getting help

3.6 Texinfoファイルをプリントするには?
======================================

Infoファイルから見栄えの良いプリント出力は得られません。マニュアルのプリ
ント用には、依然としてオリジナルのTexinfoソースファイルが不可欠です。

   システムにTeXがインストールされていれば以下のステップを行います:

  1. Texinfoファイルの先頭の行が以下のようになっていることを確認:

          \input texinfo

     ‘texinfo’を‘texinfo.tex’ファイルのフルパスに変更(またはカレントディ
     レクトリーにコピーまたはリンク)する必要があるかもしれない。これは
     Emacsに同梱されている‘doc/misc/texinfo.tex’である。

  2. ‘texi2dvi TEXINFO-SOURCE’とタイプする。ここでTEXINFO-SOURCEはプリン
     トしたコピーを生成したいTexinfoソースファイル名。‘texi2dvi’スクリプ
     トはGNU Texinfoディストリビューションの一部である。

     ‘texi2pdf’の場合には、かわりにPDFファイルを生成する。

  3. あなたのサイトでDVIファイルを通常プリントするのと同じ方法でDVIファ
     イル‘TEXINFO-SOURCE.dvi’をプリントする。たとえばPostScriptプリンタ
     ーをもっていれば、そのプリンターでDVIファイルをプリントするために
     ‘dvips’プログラムを実行する。

   より一般的な手順については最新のTexinfoパッケージを調べてください
(*note Installing Texinfo documentation::を参照)。


File: efaq.info,  Node: Viewing Info files outside of Emacs,  Next: Informational files for Emacs,  Prev: Printing a Texinfo file,  Up: Getting help

3.7 Emacsを使わずにInfoファイルを閲覧できる?
============================================

はい。以下はいくつかの候補プログラムです:

   • Texinfoパッケージに同梱されているInfoプログラムのスタンドアロンバー
     ジョンである‘info’。詳細は*Note Installing Texinfo documentation::を
     参照のこと。

   • X Window systemの下で実行され、Tcl/Tkを使用するInfoビューアーの
     Tkinfo。Tkinfoは<http://math-www.uni-paderborn.de/~axel/tkinfo/>で
     入手できる。


File: efaq.info,  Node: Informational files for Emacs,  Next: Help installing Emacs,  Prev: Viewing Info files outside of Emacs,  Up: Getting help

3.8 利用できるEmacs情報のファイルは?
====================================

これはよくある質問ではありませんが、そうあるべきなのです!  あなたに読ん
でもらうためｎ、Emacsおよび関連するGNUプロジェクトの様相に関する様々な情
報ファイルが利用可能です。

   以下のファイル(やその他のファイルも)はEmacsディストリビューション(ど
こにあるか判らなければ*note File-name conventions::を参照)の‘etc’ディレ
クトリー内にあります。これらのファイルの多くはEmacsの‘Help’メニュー、あ
るいは‘C-h ?’ (‘M-x help-for-help’)とタイプして利用することができます。

‘COPYING’
     GNU 一般公衆利用許諾書(GNU GENERAL PUBLIC LICENSE)

‘DISTRIB’
     Emacsの可用性に関する情報

‘MACHINES’
     様々なマシンおよびシステムにおけるEmacsの状況

‘NEWS’
     Emacsのニュース、ユーザーの目に見える最新の変更履歴

   ‘GNU’s Bulletin’の未解決問題を含むより詳細なGNU情報については

   <https://www.gnu.org/bulletins/bulletins.html>、および

   <http://www.cs.pdx.edu/~trent/gnu/gnu.html>を参照してください。


File: efaq.info,  Node: Help installing Emacs,  Next: Obtaining the FAQ,  Prev: Informational files for Emacs,  Up: Getting help

3.9 Emacsのインストールでどこに助けを求めれば?
==============================================

インストールにおける基本的なヒントについては*note Installing Emacs::、イ
ンストールに何か問題がある場合には*note Problems building Emacs::を参照
してください。

   The GNU Service directory (https://www.fsf.org/resources/service/)に
はEmacsやその他のGNUソフトウェアのインストールや使用において有償による手
助けを提案する企業や個人が一覧されています。


File: efaq.info,  Node: Obtaining the FAQ,  Prev: Help installing Emacs,  Up: Getting help

3.10 このFAQの最新版はどこで入手できる?
=======================================

Emacs FAQはInfo形式としてEmacsに同梱されています。任意のEmacsフレームト
ップにあるEmacsメニューバーの‘Help’メニューあら‘Emacs FAQ’オプションを選
択、あるいは‘C-h C-f’ (‘M-x view-emacs-FAQ’)とタイプしてくださいこれを読
むことができます。開発版の最新バージョンはEmacsの開発用レポジトリから利
用できます(*note Latest version of Emacs::を参照)。


File: efaq.info,  Node: Status of Emacs,  Next: Common requests,  Prev: Getting help,  Up: Top

4 Emacsの状況について
*********************

このチャプターでは最新バージョンの状況も含めたEmacsに関する基本情報を提
供します。

* Menu:

* Origin of the term Emacs::
* Latest version of Emacs::
* New in Emacs 27::
* New in Emacs 26::
* New in Emacs 25::
* New in Emacs 24::
* New in Emacs 23::
* New in Emacs 22::
* New in Emacs 21::
* New in Emacs 20::


File: efaq.info,  Node: Origin of the term Emacs,  Next: Latest version of Emacs,  Up: Status of Emacs

4.1 “Emacs”という名前の由良は?
==============================

Emacsは元々はEditor MACroSの略語でした。RMSは“その時点ではITS上の略語と
して‘E’は使用されていなかったのでEmacsという名前を採用した”と述べていま
す。最初のEmacsは1976年にMITにおいてRMSがPDP-10上のITS (the Incompatible
Timesharing System)のエディターTECO (Text Editor and COrrector,
originally Tape Editor and COrrector)のために記述したマクロのセットでし
た。RMSはすでにTECOを再プログラム可能な“リアルタイム”のフルスクリーンモ
ードに拡張済みでした。Emacsは多くの異なるTECOコマンドセットとキーバイン
ディングを統合するプロジェクトとして、MITにおいてGuy Steeleによって開始
されて、RMSによって完成されました。

   TECOのコードは行がノイズのように見えると多くの人が言っています。これ
は<news:alt.lang.teco>で読むことができます。誰かがTECO実装をEmacs Lispで
記述しました(これを見つけるには*note Packages that do not come with
Emacs::を参照)。Emacsの内部でオリジナルのTECOを実行するのは興味深いプロ
ジェクトになるでしょう。

   Emacsという名前をもつ理由としてそれほど深刻ではない候補についてはファ
イル‘etc/JOKES’を調べてください(*note File-name conventions::を参照)。


File: efaq.info,  Node: Latest version of Emacs,  Next: New in Emacs 27,  Prev: Origin of the term Emacs,  Up: Status of Emacs

4.2 Emacsの最新バージョンとは?
==============================

Emacs 27.2はこれが記述されたカレントのバージョンです。2つのコンポーネン
トからなるバージョンナンバーは、リリースバージョンであることを表します
(例: ‘24.5’)。3つのコンポーネントからなるバージョンナンバーは開発バージ
ョンを表します(たとえば‘28.0.50’、いずれ‘28.1’となる)。

   Emacsは活動的な開発の下にありSavannah
(https://savannah.gnu.org/projects/emacs/)でホスティングされています。そ
こで示された手順にしたがってプロジェクトレポジトリをクローンしてください
。

   リリース前にはEmacsにたいして多くの変更が施されるので、開発版のバージ
ョンナンバーに特別な意味はありません。開発レポジトリから取得した日付を参
考にするほうが良いでしょう。開発版は通常は日常的の使用にたいしてかなり堅
牢ですが、最新機能より安定性の方が重要ならリリース版に固執した方が良いか
もしれません。

   以降のセクションでは最近のEmacsのリリースにおける主要な新機能を一覧に
しました。Emacsのあるバージョンにおける変更の完全な詳細については‘C-h
C-n’とタイプしてください。Emacs 22以降では古いバージョンにおいて何が新機
能かうぃ読むために、このコマンドにプレフィクス引数を与えることができます
。


File: efaq.info,  Node: New in Emacs 27,  Next: New in Emacs 26,  Prev: Latest version of Emacs,  Up: Status of Emacs

4.3 Emacs 27は何が違う?
=======================

   • ネイティブでは大き過ぎるサイズの整数をサポートするためにGMPライブラ
     リー(GNU Multiple Precision libraryl: GNU多倍長整数ライブラリー)を
     使用するようになった。ネイティブでサポートされる整数は“fixnums”、そ
     れより大きい整数は“bignum”とされる。bignumで意味をもつすべての数学
     、比較、および論理(“ビット”とも呼ばれる)の演算操作はfixnumと
     bignumの両方をサポートするようになった。

   • デフォルトのシェーピングエンジン(shaping engine: 整形エンジン)とし
     てEmacsはHarfBuzzを使用するようになった。

   • ‘json.el’より高速なJSON解析のネイティブサポート。

   • Cairoによる描画が実験的機能ではなくなった。

   • Emacsがunexecではなく“portable dumper”を使用するようになった。これ
     は現代的なシステムのメモリー割り当てにたいする互換性を向上して、と
     りわけ現代的なオペレーティングシステムのほとんどが使用している
     ASLR(Address Space Layout Randomization: アドレス空間配置のランダム
     化)をよりサポートする。

   • initファイルにたいしてEmacsがXDG規約を使用可能になった。

   • 早期initファイル(early init file)を使用してEmacsを設定できるように
     なった。これの主要目的は正規initファイル(regular init file)のロード
     前に発生するパッケージシステムの初期化にたいして、その方法のカスタ
     マイズを可能にすることである。

   • タブ(タブバーとタブライン)にたいするビルトインサポート。

   • ImageMagickを必要としないイメージのリサイズおよびローテートのサポー
     ト。

   Emacs 27における変更の完全なリストは、Emacsの‘NEWS’ファイル (‘C-h
n’)を参照してください。


File: efaq.info,  Node: New in Emacs 26,  Next: New in Emacs 25,  Prev: New in Emacs 27,  Up: Status of Emacs

4.4 Emacs 26は何が違う?
=======================

   • EmacsがLispスレッドによる限定された並列処理を提供するようになった。

   • Emacsでの‘systemd’サポート。新たなコマンドラインオプション
     ‘--fg-daemon’はこのサポートの一部であり、forkせずにフォアグラウンド
     で‘--daemon’と同じように実行される。

   • 24ビットトゥルーカラーの機能を提供するテキスト端末上でのEmacsによる
     24ビットトゥルーカラーサポート。*note Colors on a TTY::を参照のこと
     。

   • X上のEmacsがほとんどの状況においてディスプレーのちらつきをなくすダ
     ブルバッファリングをサポートするようになった。

   • マウスやタッチパッドを使用してEmacsディスプレーを水平方向にスクロー
     ルできるようになった。

   • Emacsの表示において‘display-line-numbers-mode’コマンドを通じた行番
     号表示のためのオプション機能が含まれるようになった。この機能は
     ‘linum’のようなパッケージが提案するものと等価な表示をより高速に行い
     、更に相対的行番号など多くのオプション機能も提供する。

   • 行の切り詰め時にウィンドウディスプレーの自動的な水平スクロールが、
     Emacsがカーソルを表示するカレント行でのみオプションで有効にできるよ
     うになった。このモードでは他のすべてのウィンドウ行にたいして、表示
     領域外にある文字を表示するためのスクロールは行われない。

   • トルコ語とギリシャ語のスクリプトの特別ケースを大文字小文字変換が配
     慮するようになった。

   • EnchantサポートがEmacsのスペルチェックコマンドの一部となった。

   • TrampがGoogle Driveファイルシステムをサポートするようになった。

   • ビルドされたマシンの詳細を省いてEmacsをビルドできるようになり、これ
     により再現可能なビルドの生成が容易になった。

   • Enriched Textモードに関するセキュリティの脆弱性が削除された。以前の
     Enrichedモードではテキストの一部として‘display’プロパティの保存がで
     きた。これらのプロパティは任意のLispコードの評価をサポートしており
     、外部ソースからEnrichedテキストを受け取るEmacsユーザーを脆弱性に晒
     していた。Enriched Textモードがデコードした‘display’プロパティ内の
     任意のLispフォームの実行はデフォルトで無効になった。

   • Emacs 26.2には最新のUnicode標準バージョン11.0.0.からインポートされ
     たデータファイルが同梱される。

   Emacs 26における変更の完全なリストは、Emacsの‘NEWS’ファイル (‘C-h
n’)を参照してください。


File: efaq.info,  Node: New in Emacs 25,  Next: New in Emacs 24,  Prev: New in Emacs 26,  Up: Status of Emacs

4.5 Emacs 25は何が違う?
=======================

   • gtk3とwebkitgtk3がインストールされていればEmacsがバッファー内にネイ
     ティブウィジェットを埋め込めるようになった。たとえば埋め込みの
     webkitブラウザウィンドウにアクセスするには‘M-x
     xwidget-webkit-browse-url’とタイプすればよい。

   • 共有ライブラリーとしてコンパイルされた外部モジュールをEmacsが動的に
     ロード可能になった。

   • いくつかの一般的な文字にたいして略記が‘C-x 8’に新規で追加された。略
     記のリストは‘C-x 8 C-h’とタイプする。

   • 新しいマイナーモード‘global-eldoc-mode’がデフォルトで有効になり、ポ
     イント位置にあるEmacs Lispフォームの引数をエコーエリアまたはモード
     ラインに表示するようになった。

   • “bracketed paste mode”をサポートするテキスト端末では、Emacsがそのモ
     ードをデフォルトで使用するようになった。このモードではEmacsはペース
     トされたテキストとユーザーがタイプしたテキストを区別できる。

   • Emacs 25には最新のUnicode標準バージョン9.0.0.からインポートされたデ
     ータファイルが同梱される。

   • 双方向編集のサポートは、最新のUnicode標準バージョン9.0.0.が要請する
     すべての機能を含むように更新された。

   • 検索コマンドがマッチでの文字フォールディング(folding: 折り畳み)を行
     うようになった。これはcaseフォールディング(大文字小文字を無視)と似
     ているが、case(大文字小文字)の違いを無視するのではなく、ダイアクリ
     ティカルマークを無視して二重引用符の様々な変種をマッチする等、類似
     した文字間のより広範な区別を無視する。

   • EmacsウェブブラウザEWWが可変ピッチフォントをレンダリングするように
     拡張され、それ以外にも新たな機能が加わった。

   • libxml2とともにEmacsをビルドした場合、あるいはLynxブラウザがインス
     トールされていれば、RmailがHTMLメールメッセージをレンダリングするよ
     うになった。

   • VCがBzr、Git、Hg用に実装された‘push’コマンドを基本的にサポートする
     ようになった。

   • Hide-IfDefモードがマクロ、マクロ引数展開、対話的マクロ評価、
     ‘#define’されたシンボルのスキャンにおいてすべてのC/C++式をサポート
     するようになった。

   • 新パッケージXrefがEtagsのフロントエンドとUIを置き換えた。Xrefは関数
     、マクロ、データ構造等の定義の検索や移動、そして定義に移動する前の
     場所に戻るための汎用フレームワークおよび新たなコマンドを提供する。
     バックエンドの1つとしてTAGSテーブルを読み込むetags.elのコードは依然
     として使用しているものの、Etagsコマンドの多くは置き換えられるか廃止
     された。結果としてポピュラーなキーバインディング‘M-.’および‘M-,’は
     Xrefコマンドを呼び出すように変更された。

   • 新パッケージProjectはプロジェクトを取り扱うたねの汎用インフラストラ
     クチャを提供する。

   • Emacsはツールキットのツールバーを提供するいくつかのプラットフォーム
     、すなわちGtk+、Lucid、Motif、Windowsにおいて水平スクロールバーを描
     画できるようになった。

   Emacs 25における変更の完全なリストは、Emacsの‘NEWS’ファイル (‘C-h
n’)を参照してください。


File: efaq.info,  Node: New in Emacs 24,  Next: New in Emacs 23,  Prev: New in Emacs 25,  Up: Status of Emacs

4.6 Emacs 24は何が違う?
=======================

   • Emacsにパッケージマネージャーが含まれるようになった。これを開始する
     には‘M-x list-packages’とタイプする。これを使用すれば更に多くの
     Lispパッケージをダウンロードして自動でインストールできる。

   • Emacs Lispがファイル単位にもとづくレキシカルバインディングをサポー
     トするようになった。_レキシカルバインディング(lexical binding)_では
     変数参照はバインディング構文内にテキスト的に配置されていなければな
     らない。これはローカルなテキストスコープ外部で定義された変数をプロ
     グラムが参照可能な_ダイナミックバインディング(dynamic binding)_とは
     対照的である。Lispファイルはファイルコンテンツがレキシカルバインデ
     ィング和使用していると解釈するよう示すために、ローカル変数セッティ
     ング‘lexical-binding: t’を使用できる。詳細についてはEmacs Lispリフ
     ァレンスマニュアルを参照のこと。

   • 英語のような自然言語のいくつかは左から右へと記述される。それ以外の
     アラビア語などは右から左に記述される。Emacsはこれらの形式が混交した
     、いわゆる“双方向テキスト(bidirectional text)”をサポートするように
     なった。

   • テキスト選択の処理が改善されて、外部クリップボードとより統合された
     。

   • 新たなコマンド‘customize-themes’によってEmacsの外観の変更が容易にな
     った。

   • GTK+ 3ツールキットとともにEmacsをコンパイルできるようになった。

   • コンパイル時に新たに複数の外部ライブラリーを含めることをサポートす
     る。

        • SELinux(“Security-Enhanced Linux”)とは、従来の“Unixスタイル”よ
          り複雑なファイルアクセスコントロールを提供するLinuxカーネルの
          機能。

        • ImageMagickディスプレーライブラリー。これによりEmacsでより多く
          のイメージ形式を表示でき、ローテーションのような変換も行うこと
          ができるようになる。

        • 安全なネットワーク通信のためのGnuTLSライブラリー。メールサーバ
          ーがサポートしていれば、EmacsはEメールにたいしてこれを透過的に
          使用する。

        • XML構造解析のためのlibxml2ライブラリー。

   • ウィンドウおよびバッファー表示の処理における柔軟性の向上。

   いつも通り詳細については‘NEWS’ファイルを参照してください。


File: efaq.info,  Node: New in Emacs 23,  Next: New in Emacs 22,  Prev: New in Emacs 24,  Up: Status of Emacs

4.7 Emacs 23は何が違う?
=======================

   • Emacsにfreetype、fontconfigを含む複数のフォントバックエンドを使用可
     能なフォントコードが新たに追加された。Emacsはアンチエイリアスに
     Xftライブラリー、複雑なテキストレイアウトとテキストシェーピングに
     otfやm17nのライブラリーを使用できる。

   • Emacs文字セットがUnicodeのスーパーセットになった。新たに複数の言語
     環境が追加された。

   • Emacsが同一セッションでXディスプレーとttyの両方を使用できるようにな
     った(‘multi-tty’)。

   • Emacsをバックグラウンドでデーモンとして開始できるようになった。

   • 新たにEmacsのNeXTstepポートが登場した。これはGNUstepおよび(Cocoaラ
     イブラリーを介して)Mac OS Xをサポートする。Emacs 22においてMac OS
     XをサポートしていたEmacsのCarbonポートは削除された。

   • ファイルローカル変数と同様の方法でディレクトリーローカル変数を定義
     できるようになった。

   • Transient Markモードがデフォルトでオンになった。

他にもシリアルポートアクセスのサポート、D-Busバインディング、行移動にお
ける新たなVisual Lineモード、補完の改善、PDFやPostScript、DVIを閲覧する
ための新モード(‘DocView’)、(XMLドキュメント編集用の)nXMLモード、新しいバ
ージョンコントロールシステム用にVCを更新する等の変更が含まれます。


File: efaq.info,  Node: New in Emacs 22,  Next: New in Emacs 21,  Prev: New in Emacs 23,  Up: Status of Emacs

4.8 Emacs 22は何が違う?
=======================

   • GTK+ウィジェットとともにEmacsをビルドできるようになり、X上でのドラ
     ッグアンドドロップ操作がサポートされた。

   • Emacs 22ではS390およびx86-64マシン上のGNU/Linuxシステム、Mac OS Xお
     よびCygwinオペレーティングシステムにたいするサポートを提供する。

   • ネイティブのMS-WindowsおよびMac OS Xのビルドにイメージ、ツールバー
     、ツールチップの完全サポートが含められた。

   • Font Lockモード、Auto Compressionモード、File Name Shadowモードがデ
     フォルトで有効になった。

   • バッファーの最大サイズが増加した。32ビットマシンのEmacs 23.1では
     256MB、Emacs 23.2以降は512MB。

   • ‘mouse-2’に加えて‘mouse-1’でリンクをフォローできるようになった。

   • マウスホイールのサポートがデフォルトでオンになった。

   • ウィンドウフリンジがカスタマイズ可能になった。

   • 選択されたウィンドウのモードラインがハイライトされるようになった。

   • ミニバッファーのプロンプトは独自のフェイスで表示される。

   • abbrev定義を起動時に読み込む。

   • GrepモードがCompilationモードから切り離されて、新たにgrep特有のオプ
     ションおよびコマンドをもつようになった。

   • Emacsオリジナルのマクロシステムは、新たに多くのコマンドおよび機能、
     ファンクションキーF3とF4を使用するシンプルなインターフェイスを提供
     するKmacroパッケージに置き換えられた。マクロはマクロリングに格納さ
     れるとともに、対話的にデバッグと編集ができるようになった。

   • GDBにたいする完全にグラフィカルなユーザーインターフェイスとして
     GUD(Grand Unified Debugger)が使用できるようになった。これは伝統的な
     開発環境で見い出すことができる多くの機能を提供するとともに、ブレー
     クポイントの操作、ウォッチポイントの追加、コールスタック表示等を容
     易にする。ブレークポイントはソースバッファー内に視覚的に示される。

   • Calc、TRAMP、URL、IDO、CUA、ERC、rcirc、Table、Image-Dired、SES、
     Ruler、Org、PGG、Flymake、Password、Printing、Reveal、wdired、
     t-mouse、longlines、savehist、Confモード、Pythonモード、DNSモードな
     ど新たに多くのモードとパッケージがEmacsに含められた。

   • LeimはEmacsの一部となった。Unicodeサポートが更に改善されて
     belarusian、bulgarian-bds、bulgarian-phonetic、chinese-sisheng、
     croatian、dutch、georgian、latin-alt-postfix、latin-postfix、
     latin-prefix、latvian-keyboard、lithuanian-numeric、
     lithuanian-keyboard、malayalam-inscript、rfc1345、
     russian-computer、sgml、slovenian、tamil-inscript、ucs、
     ukrainian-computer、vietnamese-telex、welshの入力メソッドが追加され
     た。

     Belarusian、Bulgarian、Chinese-EUC-TW、Croatian、French、Georgian、
     Italian、Latin-6、Latin-7、Latvian、Lithuanian、Malayalam、
     Russian、Slovenian、Swedish、Tajik、Tamil、UTF-8、Ukrainian、
     Welsh、Windows-1255の言語環境が追加された。

   • これらに加えてEmacs 22にはEmacs Lispリファレンスマニュアル(*note
     Emacs Lisp documentation::を参照)およびEmacs Lisp Introが含められた
     。


File: efaq.info,  Node: New in Emacs 21,  Next: New in Emacs 20,  Prev: New in Emacs 22,  Up: Status of Emacs

4.9 Emacs 21は何が違う?
=======================

Emacs 21ではディスプレーエンジンの徹底的な書き換えが行われました。新たな
ディスプレーエンジンは可変長フォント、イメージをサポートするとともに、サ
ウンドをサポートするプラットフォームでのサウンド再生が可能になりました。
結果としてウィンドウ化されたディスプレーで実行した際のEmacsの視覚的外観
はより現代的なGUIプログラムを想起させるものとなり、3Dウィジェット(モード
ラインとスクロールバーで使用)、設定と拡張が可能なツールバー、ツールチッ
プ(別名バルーンヘルプ)、その他が含められました。

   これらに加えてEmacs 21はテキストオンリーの端末でのフェイスがサポート
されました。これはGNU/Linuxコンソールや‘xterm’上でEmacsを‘emacs -nw’で実
行した際にカラー表示されることを意味しています。


File: efaq.info,  Node: New in Emacs 20,  Prev: New in Emacs 21,  Up: Status of Emacs

4.10 Emacs 20は何が違う?
========================

Emacsのバージョン18と19の差はよりダイナミックなものでした。一般的なユー
ザーのほとんどにとってもウィンドウシステムにおけるフレーム、フェイス、カ
ラーの導入は明白な変更でした。

   Emacsのバージョン19と20の間にも同様に差はあるものの多くは軽微であるか
気付くのが難しいものでした。この変更の中には非ラテン文字を使用する言語用
のMULEと同一ドキュメント内での複数言語の混合、Lispを使用せずに変数を変更
する“Customize”機能、Macintosh、Microsoft、Unixプラットフォームにおける
ファイルの自動変換が含まれます。


File: efaq.info,  Node: Common requests,  Next: Bugs and problems,  Prev: Status of Emacs,  Up: Top

5 よくある要望
**************

* Menu:

* Setting up a customization file::
* Using Customize::
* Colors on a TTY::
* Debugging a customization file::
* Displaying the current line or column::
* Displaying the current file name in the titlebar::
* Turning on abbrevs by default::
* Associating modes with files::
* Replacing highlighted text::
* Controlling case sensitivity::
* Working with unprintable characters::
* Searching for/replacing newlines::
* Yanking text in isearch::
* Wrapping words automatically::
* Turning on auto-fill by default::
* Changing load-path::
* Using an already running Emacs process::
* Compiler error messages::
* Indenting switch statements::
* Customizing C and C++ indentation::
* Overwrite mode::
* Turning off beeping::
* Turning the volume down::
* Automatic indentation::
* Matching parentheses::
* Hiding #ifdef lines::
* Repeating commands::
* Valid X resources::
* Evaluating Emacs Lisp code::
* Changing the length of a Tab::
* Inserting text at the beginning of each line::
* Forcing the cursor to remain in the same column::
* Forcing Emacs to iconify itself::
* Using regular expressions::
* Replacing text across multiple files::
* Documentation for etags::
* Disabling backups::
* Disabling auto-save-mode::
* Going to a line by number::
* Modifying pull-down menus::
* Deleting menus and menu options::
* Turning on syntax highlighting::
* Scrolling only one line::
* Editing MS-DOS files::
* Filling paragraphs with a single space::
* Escape sequences in shell output::
* Fullscreen mode on MS-Windows::


File: efaq.info,  Node: Setting up a customization file,  Next: Using Customize,  Up: Common requests

5.1 ‘.emacs’ファイルを正しくセットアップするには?
=================================================

*note (emacs)Init File::を参照してください。

   一般的にEmacsの新規ユーザーは‘.emacs’ファイルを与えられるべきではあり
ません。なぜならこれによる非標準的から混乱を招くからです。その後に彼らは
なぜEmacsがドキュメント通りに振る舞わないか尋ねる質問をthe
help-gnu-emacs mailing list
(https://lists.gnu.org/mailman/listinfo/help-gnu-emacs)に送信するのです
。

   EmacsにはCustomize機能が含まれています(*note Using Customize::を参照
)。これによってEmacs Lispに親しみのないユーザーはLispコードよりもメニュ
ーを使い、比較的判りやすい方法で‘.emacs’ファイルを編集できます。

   Customizeは確かにEmacsの設定を容易にするかもしれませんが、Emacs Lispを
習得して‘.emacs’を直接編集するために少し時間を割くことを検討してみてくだ
さい。頻繁に要求される基本的なタスクを処理することに興味があるユーザーに
は、シンプルな設定オプションが*note (emacs)Init File::により完全に記述さ
れています。

   ユーザーがどこで自分の‘.emacs’ファイルを見つけられるか判らない場合が
あります。Emacsから‘~/.emacs’としてファイルをvisitすることのよって、正し
いファイルが見つかるでしょう。


File: efaq.info,  Node: Using Customize,  Next: Colors on a TTY,  Prev: Setting up a customization file,  Up: Common requests

5.2 Customizeを使い始めるには?
==============================

Customizeの主となるエントリーポイントは‘M-x customize <RET>’です。このコ
マンドにより利用可能なすべてのCustomizeグループを一覧するバッファーへと
導かれます。そこからカスタマイズ可能なすべてのオプションおよびフェイスに
アクセスして、それらの値の変更とinitファイルへの保存ができます。*note
(emacs)Easy Customization::を参照してください。

   (たとえば“shell”のように)あらかじめグループの名前が判っていれば‘M-x
customize-group <RET>’を使用してください。

   オプションを1つカスタマイズしたければ、‘M-x customize-option <RET>’を
使用します。このコマンドは補完付きでカスタマイズするオプション名の入力を
求めます。


File: efaq.info,  Node: Colors on a TTY,  Next: Debugging a customization file,  Prev: Using Customize,  Up: Common requests

5.3 TTYで色や構文ハイライトするには?
====================================

Emacs 21.1以降では非ウィンドウ化モード(UnixおよびGNU/Linuxテキストオンリ
ー端末やコンソール、またはXやMS-Windowsで‘emacs -nw’を呼び出した場合)で
カラーとフェイスがサポートされています(MS-DOSポートではEmacs 19.29以降で
カラーとフェイスがサポートされている)。Emacsは起動時に自動的にカラーサポ
ートを検出して、利用できるようならカラーを使用します。あなたの端末がカラ
ーをサポートしていると思えるのにEmacsがカラーを使用しない場合には、あな
たのディスプレータイプにたいするカラー関連能力について‘termcap’エントリ
ーをチェックしてください。

   コマンド‘M-x list-colors-display’はカレントディスプレーについて
Emacsが関知する全カラーを展覧するウィンドウをポップアップします。

   バージョン22.1以降ではシンタックスハイライトがデフォルトでオンです。

   Emacs 26.1以降はターミナル(訳注: 端末=terminalはtermcapのterm)でのダ
イレクトカラーモードをサポートしています。EmacsがTerminfoで‘setb24’およ
び‘setf24’のケイパビリティ(訳注: capabilityはtermcapのcap)を見つけたら
24ビットダイレクトカラーモードを使用します。ケイパビリティ文字列は、引数
として1つの24ビットピクセル値を取り、24ビットカラーを端末に送信するため
に使用できる文字列にピクセルを変換することが期待されます。

   標準のターミナル定義はこれらのケイパビリティをサポートせず、したがっ
てカスタム定義が必要になります。

     $ cat terminfo-custom.src

     xterm-emacs|xterm with 24-bit direct color mode for Emacs,
       use=xterm-256color,
       setb24=\E[48\:2\:\:%p1%{65536}%/%d\:%p1%{256}%/%{255}%&\
          %d\:%p1%{255}%&%dm,
       setf24=\E[38\:2\:\:%p1%{65536}%/%d\:%p1%{256}%/%{255}%&\
          %d\:%p1%{255}%&%dm,

     $ tic -x -o ~/.terminfo terminfo-custom.src

     $ TERM=xterm-emacs emacs -nw

   Emacs 27.1以降では24ビットダイレクトカラーモードの検出にたいして
Terminfoの‘RGB’ケイパビリティをサポートしています。複数の標準的なターミ
ナル定義がこのケイパビリティをサポートしています。

     $ TERM=xterm-direct infocmp | grep seta[bf]

       setab=\E[%?%p1%{8}%<%t4%p1%d%e48\:2\:\:%p1%{65536}%/\
          %d\:%p1%{256}%/%{255}%&%d\:%p1%{255}%&%d%;m,
       setaf=\E[%?%p1%{8}%<%t3%p1%d%e38\:2\:\:%p1%{65536}%/\
          %d\:%p1%{256}%/%{255}%&%d\:%p1%{255}%&%d%;m,

     $ TERM=xterm-direct emacs -nw

   あなたのターミナルにXTermとの互換性がなければ、別の‘TERM’定義を使う必
要があるかもしれません。名前に‘direct’が含まれるすべてのターミナルが候補
になり得ます。それらのうちどれがシステムにインストールされているか調べる
ために‘toe’コマンドを使用できます:

     $ toe | grep '\-direct'

     konsole-direct  konsole with direct-color indexing
     vte-direct      vte with direct-color indexing
     st-direct       st with direct-color indexing
     xterm-direct2   xterm with direct-color indexing (old)
     xterm-direct    xterm with direct-color indexing

   ‘RGB’ケイパビリティをもつターミナルは、ダイレクト。モードを認識しない
アプリケーションにたいする後方互換性を保守するために、ピクセル#000001か
ら#000007をインデックス付けされたカラーとして扱います。したがってもっと
も暗い青い濃淡は利用できないかもしれません。これが問題となるようなら、
‘setb24’と‘setf24’のカスタムターミナル定義を常に使用するこれができます。


File: efaq.info,  Node: Debugging a customization file,  Next: Displaying the current line or column,  Prev: Colors on a TTY,  Up: Common requests

5.4 ‘.emacs’ファイルをデバッグするには?
=======================================

コマンドラインオプション‘-debug-init’でEmacsを開始してください。これは
‘.emacs’ファイルを評価する前にEmacs Lispデバッガを有効して、何かうまく行
かなければあなたをデバッガ内へと導きます。‘trace-back’バッファーの上端行
はエラーメッセージ、2行目か3行目には問題を引き起こした‘.emacs’ファイルの
Lispコードが表示されるでしょう。

   ‘.emacs’ファイル内の関数や引数の終端にカーソルを移動して‘C-x C-e’
(‘M-x eval-last-sexp’)をタイプすれば、関数や関数の引数を個別に評価するこ
ともできます。

   セットまたは使用を試みている変数の値をチェックするには‘C-h v’ (‘M-x
describe-variable’)を使用できます。


File: efaq.info,  Node: Displaying the current line or column,  Next: Displaying the current file name in the titlebar,  Prev: Debugging a customization file,  Up: Common requests

5.5 Emacsに現在の行(や列)の番号を表示させるには?
================================================

デフォルトではEmacsはポイント位置のカレント行番号をモードラインに表示し
ます。コマンド‘M-x line-number-mode’、または変数‘line-number-mode’でこの
機能のオンとオフを切り替えることができます。バッファーのバイトサイズが変
数‘line-number-display-limit’の値より大きければ、Emacsは行番号を表示しな
いことに注意してください。

   ‘M-x column-number-mode’、または以下のフォームを

     (setq column-number-mode t)

‘.emacs’ファイルに記述することにより、同じようにカレント列番号を表示でき
ます。この機能はデフォルトではオフです。

   変数‘mode-line-format’内のフォーマット指定子‘"%c"’は、モードラインに
カレント列の値っっ挿入します。この変数のセットや使用する方法についての詳
細は‘mode-line-format’のドキュメントを参照してください(‘C-h v
mode-line-format <RET>’を使用する)。

   ‘display-line-numbers’パッケージ(Emacsのバージョン26.1で追加)は‘vi’の
“set number”機能のように、各行の前のテキストエリアに行番号を表示します。
このオプション表示をアクティブにするにはバッファーローカル変数
‘display-line-numbers’をカスタマイズします。かわりにマイナーモード
‘display-line-numbers-mode’やグローバル版の
‘global-display-line-numbers-mode’を使うこともできます。これらのモード使
用時には‘display-line-numbers’を使用するときと同じ値で
‘display-line-numbers-type’をカスタマイズしてください。

   ‘linum’パッケージ(バージョン23.1以降のEmacsに同梱)もありますが今後配
送されます。ユーザーおよび開発者にはかわりに‘display-line-numbers’の使用
をお勧めします。(Emacsには同梱されていないパッケージ)‘setnu’と
‘wb-line-number’もこの機能を実装しています。


File: efaq.info,  Node: Displaying the current file name in the titlebar,  Next: Turning on abbrevs by default,  Prev: Displaying the current line or column,  Up: Common requests

5.6 現在のファイル名をタイトルバーに含めるには?
===============================================

Emacsフレームのタイトルバーのコンテンツは、変数‘mode-line-format’と同じ
構造をもつ変数‘frame-title-format’によって制御されます(これらの変数につ
いて情報を得るには‘C-h v’または‘M-x describe-variable’を使用する)。

   デフォルトではフレームのタイトルバーには、1つのフレームしか存在しない
場合を除き、がカレントでvisitされているバッファーの名前が表示されます。
フレームが1つの場合には、タイトルバーにはEmacsを呼び出したときの名前、お
よびEmacsを呼び出したマシン名が含まれます。これは‘frame-title-format’に
以下をデフォルト値としてセットすることにより行われます:

     (multiple-frames "%b" ("" invocation-name "@" (system-name)))

   存在するフレームの個数に関わらずフレームのタイトルバーにバッファー名
が含まれるように挙動を変更するには、以下を‘.emacs’に含めてください:

     (setq frame-title-format "%b")


File: efaq.info,  Node: Turning on abbrevs by default,  Next: Associating modes with files,  Prev: Displaying the current file name in the titlebar,  Up: Common requests

5.7 モードMYMODEでデフォルトでabbrevをオンにするには?
=====================================================

Abbrevモードは略語をタイプするとそれを展開します。特定のバッファーでこれ
をオンにするには‘M-x abbrev-mode’を使用します。デフォルトですべてのバッ
ファーでオンにするには、以下を‘.emacs’ファイルに記述してください:

     (setq-default abbrev-mode t)

To turn it on in a specific mode, use:

     (add-hook 'MYMODE-mode-hook
               (lambda ()
                (setq abbrev-mode t)))

If your Emacs version is older then 22.1, you will also need to use:

     (condition-case ()
        (quietly-read-abbrev-file)
       (file-error nil))


File: efaq.info,  Node: Associating modes with files,  Next: Replacing highlighted text,  Prev: Turning on abbrevs by default,  Up: Common requests

5.8 特定のファイルに特定のモードをEmacsに使用させるには?
========================================================

名前が拡張子‘.BAR’で終わるファイルすべてにたいして特定のモードFOOを使用
したければ、以下でこれを行うことができるでしょう:

     (add-to-list 'auto-mode-alist '("\\.BAR\\'" . FOO-mode))

   またはかわりにモードFOOで編集したい任意のファイルの1行目のどこか(1行
目の先頭が‘#!’なら2行目)に以下を記述します:

     -*- FOO -*-

   変数‘interpreter-mode-alist’はインタープリター(shellやpythonなど)に解
釈されるスクリプトをロードする際にどのモードを使用するかを指定します。
Emacsはスクリプトの1行目を調べて、使用されるインタープリターを判断します
。詳細については‘interpreter-mode-alist’上で‘C-h v’ (または‘M-x
describe-variable’)を使用して調べてください。


File: efaq.info,  Node: Replacing highlighted text,  Next: Controlling case sensitivity,  Prev: Associating modes with files,  Up: Common requests

5.9 ハイライトされたテキストをタイプしたテキストで置き換えるには?
=================================================================

以下のLispフォームを‘.emacs’ファイルに記述することにより自動的に開始でき
る‘delete-selection-mode’を使用します。

     (delete-selection-mode 1)

   ‘delete-selection-mode’のドキュメント文字列(‘M-x describe-function
<RET> delete-selection-mode <RET>’を使用して読むことができる)によると:

     Delete Selectionモードが有効な場合には選択がアクティブのときにテキ
     ストをタイプするとテキストで選択を置き換える。それ以外なら選択の有
     無に関わらずタイプしたテキストはポイント位置に挿入される。

   このモードにより<DEL>を押下してハイライトされているリージョンを削除
(killではない)することもできます。


File: efaq.info,  Node: Controlling case sensitivity,  Next: Working with unprintable characters,  Prev: Replacing highlighted text,  Up: Common requests

5.10 検索や置換の際にEmacsによる大文字小文字の区別を制御するには?
=================================================================

変数‘case-fold-search’の値は検索がcase(大文字小文字)を区別するかどうかを
決定します:

     (setq case-fold-search nil) ; caseを区別
     (setq case-fold-search t)   ; 検索はcaseを区別しない

   同じように置換では変数‘case-replace’が置換においてcaseを維持するかど
うかを決定します。

   isearchでは‘M-c’で自由にcaseの区別を切り替えることもできます。

   あるメジャーモードにたいしてのみcaseの区別を変更するにはメジャーモー
ドのフックを使用します。たとえば:

     (add-hook 'FOO-mode-hook
               (lambda ()
                (setq case-fold-search nil)))


File: efaq.info,  Node: Working with unprintable characters,  Next: Searching for/replacing newlines,  Prev: Controlling case sensitivity,  Up: Common requests

5.11 プリント不可文字(8ビット文字やコントロール文字)の検索、削除、置換を行うには?
=================================================================================

たとえばバッファーには‘\237’のように出現する単一文字は‘C-s C-q 2 3 7’と
タイプして検索できます。プリントできない*すべて*の文字を検索するには正規
表現(“regexp”)で行うのが最良です。プリント不可文字にたいするregexpは、プ
リント可能文字にたいする補集合を使用するのがもっとも簡単です。

   • プリント可能文字にたいするregexp: ‘[\t\n\r\f -~]’

   • プリント不可文字にたいするregexp: ‘[^\t\n\r\f -~]’

   ‘isearch-forward-regexp’や‘re-search-forward’にたいする対話的な引数と
してこれらのスペシャル文字をタイプするには‘C-q’を使う必要があります
(‘\t’、‘\n’、‘\r’、‘\f’はそれぞれ<TAB>、<LFD>、<RET>、‘C-l’を意味する)。
したがって‘re-search-forward’を使用してプリント不可文字を検索するには:

   ‘M-x re-search-forward <RET> [^ <TAB> C-q <LFD> C-q <RET> C-q C-l
<SPC> -~] <RET>’

   ‘isearch-forward-regexp’を使用する場合は:

   ‘C-M-s [^ <TAB> <LFD> C-q <RET> C-q C-l <SPC> -~]’

   すべてのプリント不可文字を削除するには単にreplace-regexpを使用します:

   ‘M-x replace-regexp <RET> [^ <TAB> C-q <LFD> C-q <RET> C-q C-l <SPC>
-~] <RET> <RET>’

   置換は上で述べたのと似ています。すべてのプリント不可文字をコロンで置
き換えるには以下を使用します:

   M-x replace-regexp <RET> [^ <TAB> C-q <LFD> C-q <RET> C-q C-l <SPC>
-~] <RET> : <RET>


File: efaq.info,  Node: Searching for/replacing newlines,  Next: Yanking text in isearch,  Prev: Working with unprintable characters,  Up: Common requests

5.12 isearchやquery-replaceで改行を入力するには?
================================================

‘C-q C-j’を使用してください。詳細については*note Special Input for
Incremental Search: (emacs)Special Isearch.を参照してください。


File: efaq.info,  Node: Yanking text in isearch,  Next: Wrapping words automatically,  Prev: Searching for/replacing newlines,  Up: Common requests

5.13 killリングから検索文字列にテキストをコピーするには?
========================================================

‘M-y’を使用してください。*note (emacs)Isearch Yank::を参照してください。


File: efaq.info,  Node: Wrapping words automatically,  Next: Turning on auto-fill by default,  Prev: Yanking text in isearch,  Up: Common requests

5.14 自分用にEmacsに単語を折り返させるには?
===========================================

‘M-x auto-fill-mode’とタイプして‘auto-fill-mode’を有効にして使用してくだ
さい。デフォルトの最大行幅は70で、これは変数‘fill-column’により決定され
ます。これを自動でオンに切り替える方法については*note Turning on
auto-fill by default::を参照してください。


File: efaq.info,  Node: Turning on auto-fill by default,  Next: Changing load-path,  Prev: Wrapping words automatically,  Up: Common requests

5.15 デフォルトで‘auto-fill-mode’をオンにするには?
==================================================

1つのバッファーだけで‘auto-fill-mode’をオンに切り替えるには‘M-x
auto-fill-mode’を使用します。

   特定のモードのすべてのバッファーでオンに切り替えるには、そのモードに
たいするフックを使用しなければなりません。たとえばテキストバッファーのす
べてで‘auto-fill’モードをオンに切り替えるには、以下を‘.emacs’ファイルサ
イ追加してください:

     (add-hook 'text-mode-hook 'turn-on-auto-fill)

   すべてのメジャーモードで‘auto-fill’モードをオンにするには以下を行いま
す:

     (setq-default auto-fill-function 'do-auto-fill)


File: efaq.info,  Node: Changing load-path,  Next: Using an already running Emacs process,  Prev: Turning on auto-fill by default,  Up: Common requests

5.16 ‘load-path’を変更するには?
===============================

一般的には‘load-path’へは追加のみにするべきです。以下のようにしてディレ
クトリー/DIR/SUBDIRをロードパスに追加できます:

     (add-to-list 'load-path "/dir/subdir/")

   ホームディレクトリーにたいして相対的にこれを行うには:

     (add-to-list 'load-path "~/mysubdir/")


File: efaq.info,  Node: Using an already running Emacs process,  Next: Compiler error messages,  Prev: Changing load-path,  Up: Common requests

5.17 別ウィンドウですでに実行中のEmacsを使用するには?
=====================================================

Emacsに同梱されている‘emacsclient’は新たなEmacsを開始せずに、すでに実行
中のEmacsを使用してファイルを編集するためのものです。これはすでに実行中
のEmacsにリクエストを送信することによって行われます。実行中のEmacsはリク
エストに応えなければなりません。

   • セットアップ:

     ‘emacsclient’が機能するにはEmacsが‘server-start’関数を実行済みでな
     ければならない。これはコマンドラインオプション:

          emacs -f server-start

     または‘.emacs’から‘server-start’を呼び出すことによって行うことがで
     きる:

          (if (SOME CONDITIONS ARE MET) (server-start))

     ニュースリーダーやメールリーダーなどが‘emacsclient’を呼び出すように
     するには、環境変数‘EDITOR’ (‘VISUAL’のときもある)に値
     ‘emacsclient’を設定してみればよい。‘emacsclient’プログラムのかわり
     にプログラムのフルパス名を指定する必要があるかもしれない。たとえば:

          # cshの場合:
          setenv EDITOR emacsclient

          # フルパス名を使用
          setenv EDITOR /usr/local/emacs/etc/emacsclient

          # shの場合:
          EDITOR=emacsclient ; export EDITOR

   • 通常の使い方:

     ‘emacsclient’を実行するとソケットに接続してコマンドラインオプション
     をEmacsに渡す。そしてEmacsは次の機会に指定されたファイルをvisitする
     (Emacsで行うように行番号を指定できる)。ユーザーは手動でEmacsに切り
     替える必要がある。ユーザーがファイルの編集を終えたら‘C-x #’ (または
     ‘M-x server-edit’)とタイプしてそれを示すことができる。
     ‘emacsclient’に要求されたバッファーが別にある場合にはEmacsはそのバ
     ッファーに切り替えるだろう。それ以外の場合には‘emacsclient’はexitし
     て呼び出し元が継続できるようにシグナルを送る。

   詳細については*note (emacs)Emacs Server::を参照してください。


File: efaq.info,  Node: Compiler error messages,  Next: Indenting switch statements,  Prev: Using an already running Emacs process,  Up: Common requests

5.18 わたしのコンパイラーの変なエラーメッセージをEmacsに認識させるには?
=======================================================================

‘compilation-error-regexp-alist’変数をカスタマイズしてください。


File: efaq.info,  Node: Indenting switch statements,  Next: Customizing C and C++ indentation,  Prev: Compiler error messages,  Up: Common requests

5.19 ‘switch’のインデントを変更するには?
========================================

以下のように‘switch’ステートメントをインデントしたいと思う人は大勢います
:

     f()
     {
       switch(x) {
         case A:
           x1;
           break;
         case B:
           x2;
           break;
         default:
           x3;
       }
     }

To achieve this, add the following line to your ‘.emacs’:

     (c-set-offset 'case-label '+)


File: efaq.info,  Node: Customizing C and C++ indentation,  Next: Overwrite mode,  Prev: Indenting switch statements,  Up: Common requests

5.20 C、C++、Javaのバッファーのインデントをカスタマイズするには?
================================================================

Emacsの‘cc-mode’はインデントスタイルのカスタマイズ用に対話的な手順を提供
しています。これはEmacsディストリビューションに同梱されている‘CC Mode’マ
ニュアルに完全な説明があります。*note Customization Indentation:
(ccmode)Customizing Indentation.を参照してください。以下はそれの短い要約
です:

  1. 気に召さないインデントの最初の行の先頭に移動して‘C-c C-o’とタイプす
     る。Emacsが構文シンボル(syntactic symbol)の入力を求めるので、デフォ
     ルトを受諾するために<RET>をタイプする。

  2. Emacsがその構文シンボルのオフセットの入力を求める。その際にはカッコ
     内にデフォルト(現在の定義)が表示される。ここで以下のいずれかを選択
     できる:

     ‘0’
          追加のインデントなし。
     ‘+’
          基本オフセット1つ分インデントを加える。
     ‘-’
          基本オフセット1つ分インデントを戻す。
     ‘++’
          基本オフセット2つ分インデントを加える。
     ‘--’
          基本オフセット2つ分インデントを戻す。
     ‘*’
          基本オフセットの半分インデントを加える。
     ‘/’
          基本オフセットの半分インデントを戻す。

  3. これらのシンボルのいずれかを選んだ後に‘C-c C-q’をタイプして、指定し
     たインデントに行またはブロックを再インデントする。

  4. 結果が気に召さなければステップ1に戻る。そうでなければ以下の行を
     ‘.emacs’に追加する:

          (c-set-offset 'SYNTACTIC-SYMBOL OFFSET)

     ここでSYNTACTIC-SYMBOLは行頭で‘C-c C-o’をタイプした際にEmacsが表示
     した名前、OFFSETは上記のインデントシンボル(‘+’、‘/’、‘0’等)のいずれ
     かのうち対話的手順の間に選択したシンボル。

  5. インデントが気に召さない次の行へ移動してこれらの手順を繰り返す。

   以下のように‘(c-set-offset ...)’によるカスタマイズ結果すべてをCモード
のフック内に記述することをお勧めします:

     (defun my-c-mode-hook ()
       (c-set-offset ...)
       (c-set-offset ...))
     (add-hook 'c-mode-hook 'my-c-mode-hook)

‘cc-mode’をロードしていなければ‘c-set-offset’は利用できないので
‘.emacs’には‘(require 'cc-mode)’を記述する必要がありますが、
‘c-mode-hook’を使用すればこれを避けることができます。

   ‘c-mode-hook’はCソースファイルの場合のみ実行されることに注意してくだ
さい。C++には‘c++-mode-hook’、Javaソースには‘java-mode-hook’を使う等して
ください。同一のカスタマイズが、‘cc-mode’によってサポートされる_すべて
_の言語にたいして効力をもつようにしたければ‘c-mode-common-hook’を使用し
てください。


File: efaq.info,  Node: Overwrite mode,  Next: Turning off beeping,  Prev: Customizing C and C++ indentation,  Up: Common requests

5.21 Emacsに挿入ではなく“上書き”させるには?
===========================================

‘M-x overwrite-mode’ (マイナーモード)です。これは‘overwrite-mode’のオン
オフを切り替えるのでもう一度‘M-x overwrite-mode’で簡単に
‘overwrite-mode’からexitできます。

   いくつかのシステムでは<Insert>で‘overwrite-mode’のオンオフが切り替わ
ります。


File: efaq.info,  Node: Turning off beeping,  Next: Turning the volume down,  Prev: Overwrite mode,  Up: Common requests

5.22 端末でEmacsのビープ音を止めるには?
=======================================

Martin R. Frank(訳注: Texinfoファイルには"martin@cc.gatech.edu"とコメン
トされてました)は記しています:

   可聴ベル(audible bell)のかわりに“視覚的なベル(visible bell)”を使うよ
うに伝えて、その視覚的ベルには何もセットしません。

   つまり(あなたがtermcapをもっていると仮定して)‘TERMCAP’環境変数に以下
を記述します:

     ... :vb=: ...

   そして以下のLispフォームを評価してください:

     (setq visible-bell t)


File: efaq.info,  Node: Turning the volume down,  Next: Automatic indentation,  Prev: Turning off beeping,  Up: Common requests

5.23 XでEmacsを実行中にベル音量を下げるには?
============================================

Xウィンドウシステムではシェルコマンド‘xset’のより、すべてのプログラムで
ベルの音量および間隔を調節できます。

   引数なしで‘xset’を呼び出すことによって、以下を含むいくつかの基本的な
情報が生成されます:

     usage:  xset [-display host:dpy] option ...
       To turn bell off:
           -b                b off               b 0
       To set bell volume, pitch and duration:
            b [vol [pitch [dur]]]          b on


File: efaq.info,  Node: Automatic indentation,  Next: Matching parentheses,  Prev: Turning the volume down,  Up: Common requests

5.24 新しい行を前の行に合わせて自動的にインデントするようEmacsに伝えるには?
===========================================================================

このような振る舞いはEmacs 20以降では(Textモードでは)自動で行われます。
Emacs 20.2の‘etc/NEWS’ファイルからの引用します:

     ** Textでパラグラフを分割するのは空行のみとなった。これによってAdaptive FillモードからTextモードやその他Textモードから派生した(Mailモードのような)モードが受ける恩恵を最大にすることが可能になる。Textモードでの<TAB>によってindent-relativeコマンドが実行されるようになった。これによって実際に違いが生じるのは、インデントされたパラグラフを使用している場合だけである。

     パラグラフ開始行の先頭にスペースが欲しければ、新しいモードのParagraph Indent Textモードを使用すること。

   ‘auto-fill-mode’ (*note Turning on auto-fill by default::を参照)をオ
ンに切り替えている場合には、“フィルプレフィクス(fill prefix)”として特定
の文字シーケンスをすべての行のプレフィクスとするようEmacsに指示すること
ができます。行頭でプレフィクスをタイプしてポイントをタイプしたプレフィク
スの後に移動、それから‘C-x .’ (‘set-fill-prefix’)とタイプしてフィルプレ
フィクスをセットします。それ以降はオートフィル新たな行の先頭に自動的にフ
ィルプレフィクスを配置するとともに、‘M-q’ (‘fill-paragraph’)でパラグラフ
を再フィルする際にはすべてのフィルプレフィクスを保守するようになります。

   異なるレベルのインデントをもつパラグラフがある場合には、新たなパラグ
ラフに移動するたびにフィルプレフィクスを正しい値にセットすることが必要に
なるでしょう。これを取り扱うためのパッケージが多数存在します(*note
Packages that do not come with Emacs::を参照)。手引きとして“fill”、およ
び“indent”のキーワードを調べてください。


File: efaq.info,  Node: Matching parentheses,  Next: Hiding #ifdef lines,  Prev: Automatic indentation,  Up: Common requests

5.25 自分が注目中のカッコに対応するカッコを表示するには?
========================================================

‘.emacs’ファイルで‘show-paren-mode’を呼び出します。

     (show-paren-mode 1)

   任意のEmacsフレーム上端にあるEmacsメニューバーの‘Options’メニューから
オプション‘Paren Match Highlighting’を選択してこのモードを有効にすること
もできます。

   このようなモードの代替案手段としては以下が含まれます:

   • 右カッコ(または大カッコや角カッコ)に着目していたら、それを削除して
     からしで挿入する。Emacsは瞬時の間、マッチするカッコにカーソル和移動
     するだろう。

   • ‘C-M-f’ (‘forward-sexp’)および‘C-M-b’ (‘backward-sexp’)はバランスの
     とれたカッコを1セット分スキップするので、どのカッコがマッチするか確
     認できる(構文テーブルを修整してバランスのとれた大カッコおよび角カッ
     コもスキップするよう洗練することも可能)。

   • 以下は‘vi’のように‘%’キーでマッチするカッコを表示させるEmacs Lispコ
     ード。更にカーソルがカッコ上になければ通常通り単に%を挿入する。

          ;; 名無しの貢献者より

          (global-set-key "%" 'match-paren)

          (defun match-paren (arg)
            "カッコ上ならマッチするカッコへ移動、それ以外は%を挿入"
            (interactive "p")
            (cond ((looking-at "\\s(") (forward-list 1) (backward-char 1))
                  ((looking-at "\\s)") (forward-char 1) (backward-list 1))
                  (t (self-insert-command (or arg 1)))))


File: efaq.info,  Node: Hiding #ifdef lines,  Next: Repeating commands,  Prev: Matching parentheses,  Up: Common requests

5.26 Cモードでコンパイラーが‘#ifdef’処理後に残る行だけを表示するには?
=====================================================================

‘M-x hide-ifdef-mode’ (マイナーモード)です。Emacsに同梱されている
‘cpp.el’も調査したいと思うかもしれません。


File: efaq.info,  Node: Repeating commands,  Next: Valid X resources,  Prev: Hiding #ifdef lines,  Up: Common requests

5.27 できるだけ沢山コマンドを繰り返すには?
==========================================

最後のコマンドを繰り返すには‘repeat’コマンド(‘C-x z’)を使用します。プレ
フィクス引数を前置すると、そのプレフィクスは繰り返すコマンドに適用されま
す。

   引数を取得するためにミニバッファーを使用するコマンドは、‘C-x <ESC>
<ESC>’ (‘repeat-complex-command’)とタイプしても再呼び出しができます。
‘repeat-complex-command’では‘M-p’と‘M-n’(キーボードにあれば上矢印と下矢
印も)をタイプすることにより、様々なcomplexコマンドすべてでタイプしたもの
を走査することができます。

   一連のコマンドを繰り返すにはキーボードマクロを使用します。コマンドを
呼び出すキーボードマクロの作成には‘C-x (’と‘C-x )’を使い、その後に‘C-x
e’とタイプします。*note (emacs)Keyboard Macros::を参照してください。

   最後の挿入/削除を再実行する‘vi’の‘.’コマンドが本当に欲しくて堪らなけ
れば、それをサポートしているよう思われる、VIPERというEmacsに同梱の‘vi’エ
ミュレーションモードを使ってください。


File: efaq.info,  Node: Valid X resources,  Next: Evaluating Emacs Lisp code,  Prev: Repeating commands,  Up: Common requests

5.28 有効なXリソース(.Xdefaults内の項目)は?
===========================================

*note (emacs)X Resources::を参照してください。

   EmacsがXツールキットとともにコンパイルされていると仮定して、メニュー
バーのリソース名を確認するためにeditres(X11R5以降)のようなリソースエディ
ターを使用することもできます。


File: efaq.info,  Node: Evaluating Emacs Lisp code,  Next: Changing the length of a Tab,  Prev: Valid X resources,  Up: Common requests

5.29 Emacs Lispのコード片を実行(“evaluate”)するには?
====================================================

Emacs Lispの“フォーム(form)”を実行(Lispスラングでは“evaluate: 評価”)する
には:

   • Emacsを実行する際に毎回評価させたければ、ホームディレクトリーにある
     ‘.emacs’という名前のファイルにそれを記述する。これは“あなたの
     ‘.emacs’ファイル”と呼ばれるものであり、あなたの個人的なカスタマイズ
     がすべて含まれている。

   • ‘*scratch*’バッファーでフォームをタイプしてから、それの後で<LFD> (ま
     たは‘C-j’)をタイプできる。フォームの評価結果はそのままバッファーに
     挿入される。

   • ‘emacs-lisp-mode’では‘C-M-x’とタイプすることでポイントの前、または
     周辺にあるトップレベルのフォームを評価する。

   • 任意のバッファーにおいて‘C-x C-e’とタイプするとポイント直前にある
     Lispフォームを評価して、その値をエコーエリアにプリントする。

   • ‘M-:’または‘M-x eval-expression’とタイプすることによりミニバッファ
     ーでLispフォームをタイプして、<RET>の押下することでそれが1回評価さ
     れる。

   • ファイル内のすべてのLispフォームをEmacsにすべて評価させるには‘M-x
     load-file’を使用できる(これをLispから行うにはかわりに関数‘load’を使
     う)。

     関数‘load-library’、‘eval-region’、‘eval-buffer’、‘require’、
     ‘autoload’も有用。これらについての詳細は*note Emacs Lisp
     documentation::を参照のこと。


File: efaq.info,  Node: Changing the length of a Tab,  Next: Inserting text at the beginning of each line,  Prev: Evaluating Emacs Lisp code,  Up: Common requests

5.30 <TAB>文字の長さにたいするEmacsの解釈を変更するには?
========================================================

変数‘tab-width’のデフォルト値をセットします。たとえば10文字ごとに<TAB>ス
トップをセットするには、‘.emacs’ファイルに以下を挿入してください:

     (setq-default tab-width 10)

   変数‘tab-width’と変数‘tab-stop-list’を混同しないでください。前者はリ
テラルの<TAB>文字の表示に使用されます。一方後者は特定のモードにおいて
<TAB>文字を押下した際にどの文字が挿入されるかを制御します。


File: efaq.info,  Node: Inserting text at the beginning of each line,  Next: Forcing the cursor to remain in the same column,  Prev: Changing the length of a Tab,  Up: Common requests

5.31 各行の先頭に<何らかのテキスト>を挿入するには?
==================================================

これをバッファー全体にたいして行う場合には‘M-< M-x replace-regexp <RET>
^ <RET> your text <RET>’とタイプします。

   リージョンにたいして行う場合には‘string-insert-rectangle’を使用します
。プレフィクスを付加したい1行目の先頭にマークをセット(‘C-<SPC>’)して、付
加したい最後の行へカーソルを移動、それから‘M-x string-insert-rectangle
<RET>’とタイプしてください。バッファー全体に行う場合には‘C-x h M-x
string-insert-rectangle <RET>’とタイプします。

   yankしたメールメッセージにプレフィクスとして‘>’の付加を試みているなら
、変数‘mail-yank-prefix’をセットしたいと思うかもしれません。Messageバッ
ファーではyankしたメッセージのメッセージの引用に‘M-;’ (こはリージョンの
コメントアウトという汎用目的のためのメカニズムである関数
‘comment-region’を実行する)を使うことさえできます(*note Changing the
included text prefix::を参照)。


File: efaq.info,  Node: Forcing the cursor to remain in the same column,  Next: Forcing Emacs to iconify itself,  Prev: Inserting text at the beginning of each line,  Up: Common requests

5.32 How do I make Emacs behave like this: when I go up or down, the cursor should stay in the same column even if the line is too short?
=========================================================================================================================================

‘M-x picture-mode’を使用します。

   変数‘track-eol’、および‘C-x C-n’にバインドされているコマンド
‘set-goal-column’ (*note (emacs)Moving Point::を参照)も確認してください
。


File: efaq.info,  Node: Forcing Emacs to iconify itself,  Next: Using regular expressions,  Prev: Forcing the cursor to remain in the same column,  Up: Common requests

5.33 How do I tell Emacs to iconify itself?
===========================================

‘C-z’はEmacsをXで実行中ならアイコン化、それ以外ならEmacsをサスペンドしま
す。*note (emacs)Frame Commands::を参照してください。


File: efaq.info,  Node: Using regular expressions,  Next: Replacing text across multiple files,  Prev: Forcing Emacs to iconify itself,  Up: Common requests

5.34 How do I use regexps (regular expressions) in Emacs?
=========================================================

*note (emacs)Regexp Backslash::を参照してください。

   演算子‘or’は‘|’ではなく‘\|’、グルーピング演算子は‘\(’と‘\)’です。更に
バックスラッシュの文字列構文は‘\\’です。Lisp文字列で‘xxx\(foo\|bar\)’の
ような正規表現を指定するには‘xxx\\(foo\\|bar\\)’を使用します。

   バックスラッシュを2回記述することに注意してください!

   • Unixの‘grep’、‘sed’などとは異なり文字の補集合(‘[^...]’)にはマッチし
     ない文字として改行文字(<LFD>または‘C-j’あるいは‘\n’)が記述されてい
     なければ改行文字はマッチする。

   • 文字構文のregexp(たとえば‘\sw’)は文字セットにたいするregexp(たとえ
     ば‘[aeiou]’)の内部では意味をもたない(これは実際にはregexp構文として
     典型的)。


File: efaq.info,  Node: Replacing text across multiple files,  Next: Documentation for etags,  Prev: Using regular expressions,  Up: Common requests

5.35 How do I perform a replace operation across more than one file?
====================================================================

Diredモード(‘M-x dired <RET>’または‘C-x d’)はコマンド
‘dired-do-find-regexp-and-replace’ (‘Q’)をサポートしています。これは複数
ファイルにおける正規表現の置換を可能にします。

   以下のステップにしたがうことにより、このコマンドで複数ファイルにたい
する検索/置換処理を行うことができます:

   • ‘find-dired’、‘find-name-dired’、‘find-grep-dired’のいずれかを使っ
     て、処理したいファイルのリストを用意する。

   • 結果として得られたDiredバッファーで‘t’を使用してすべてのファイルを
     マークする。

   • ‘Q’を使用して、マーク済みファイルにたいする‘query-replace-regexp’セ
     ッションを開始する。

   • それぞれのファイルにたいしてすべての置換を承諾するために‘!’を打鍵す
     る。

   Emacsの“tags”機能を使用して、別の方法で同じこと行うことができます。
tags機能に含まれているコマンド‘tags-query-replace’は‘TAGS’ファイルに記述
されたすべてのファイルを横断してquery-replace(問い合わせ付き置換)を行い
ます。*note (emacs)Identifier Search::を参照してください。


File: efaq.info,  Node: Documentation for etags,  Next: Disabling backups,  Prev: Replacing text across multiple files,  Up: Common requests

5.36 Where is the documentation for ‘etags’?
============================================

‘etags’のmanページは‘emacs’のmanページと同じ場所にあるはずです。

   たとえば‘etags -H’のように、コマンドラインスイッチで手早く読める説明
もあります。


File: efaq.info,  Node: Disabling backups,  Next: Disabling auto-save-mode,  Prev: Documentation for etags,  Up: Common requests

5.37 How do I disable backup files?
===================================

特に何か不幸な出来事が起こったとき等、バックアップ特は役に立つので多分こ
れを行いたいとは思わないでしょう。

   Diredでバックアップファイル(およびその他の“興味がない”ファイル)を目に
することを避けるには、‘.emacs’ファイルに以下を追加して‘dired-x’をロード
してください:

     (add-hook 'dired-load-hook
               (lambda ()
                (require 'dired-x)))

   ‘dired-x’のロードにより、‘M-o’でそれぞれのdiredバッファーでの(興味が
ないファイルの表示)の省略が切り替わります。以下を‘.emacs’に記述すれば、
新たなdiredバッファーで省略をデフォルトにできます:

     ; 訳注
     ; FAQ執筆時以降実装が更新されているので以下のように読み変えてください。
     ; (現時点最新開発版28.0.??にバグレポート投げときます)
     ;   dired-omit-toggle -> dired-omit-mode
     ;   M-o               -> C-x M-o
     (add-hook 'dired-mode-hook 'dired-omit-toggle)

   Unixシェルで‘ls’するたびにバックアップファイルが目につきうんざりして
いたら、‘-B’オプションでGNU ‘ls’を試してみてください。GNU ‘ls’はGNU
Fileutilsパッケージの一部であり、<https://ftp.gnu.org>およびそのミラーサ
イトで利用可能です(*note Current GNU distributions::を参照)。

   バックアップ作成を無効にしたり作成方法を変更する場合には、*note
(emacs)Backup Names::を参照してください。

   Emacs 21.1から変数‘backup-directory-alist’をカスタマイズして、Emacsが
バックアップファイルを置く場所を制御できるようになりました。この変数の値
は特定のパターンの名前をもつファイルにたいして、バックアップファイルを特
定のディレクトリーに置くように指定します。*すべて*のバックアップファイル
をディレクトリー‘dir’に置くことをEmacsに強制する要素‘("." . DIR)’を追加
する等が典型的な使い方です。


File: efaq.info,  Node: Disabling auto-save-mode,  Next: Going to a line by number,  Prev: Disabling backups,  Up: Common requests

5.38 How do I disable ‘auto-save-mode’?
=======================================

特にドキュメント編集中にEmacsやコンピューターがクラッシュしたとき等、オ
ートセーブは役に立つので多分これを行いたいとは思わないでしょう。

   そのかわりにEmacsがオートセーブを行う前に待機するキーストローク数を指
定する変数‘auto-save-interval’を変更したいと思うかもしれません。この値を
増加させることによって、その長さの間はEmacsにオートセーブの待機を強制し
ます。これによって煩わしさが減るかもしれません。

   Sebastian Kremerの‘auto-save’パッケージも調べたいと思うかもしれません
(*note Packages that do not come with Emacs::を参照)。このパッケージでは
すべてのauto-saveファイルを‘/tmp’のような1つのディレクトリーに置くことも
できます。

   ‘auto-save-mode’を無効にしたり動作を変更するには、*note (emacs)Auto
Save::を参照してください。


File: efaq.info,  Node: Going to a line by number,  Next: Modifying pull-down menus,  Prev: Disabling auto-save-mode,  Up: Common requests

5.39 How can I go to a certain line given its number?
=====================================================

行番号で行に移動する必要があるのは確かですか?  もしかしたらコンパイラー
がエラーメッセージをプリントしたソースファイル行を表示するのがあなたの望
んでいることではありませんか?  もしそうならEmacsからコマンド‘M-x
compile’および‘M-x recompile’を使用してコンパイルすることで、より効率的
にこれを行うことができます。Emacsはコンパイルエラーメッセージを自動的に
インターセプトして、‘*compilation*’と呼ばれる特別なバッファーに挿入ます
。あなたはソース内の、各メッセージに対応する場所をvisitできます。問題の
ある行を1つずつステップスルーするには‘C-x `’とタイプします(Emacs 22から
は前または次のマッチへ直接移動する‘M-g M-p’および‘M-g M-n’でも使用できる
。‘*compilation*’バッファーのメッセージテキスト上で‘mouse-2’をクリックす
るか<RET>を押下することによって、そのメッセージ中に記されている番号の行
へ移動します。

   しかし特定のテキスト行へ移動する必要が本当にあるなら‘M-g M-g’ (Emacs
22からは‘goto-line’関数のデフォルトバインディング)をタイプしてください。
Emacsは行番号の入力を求めてその行に移動するでしょう。

   行番号を数引数として‘goto-line’を呼び出せば、これをより高速に行うこと
ができます。たとえば‘C-u 286 M-g M-g’はカレントバッファーの行番号286へジ
ャンプします。


File: efaq.info,  Node: Modifying pull-down menus,  Next: Deleting menus and menu options,  Prev: Going to a line by number,  Up: Common requests

5.40 How can I create or modify new pull-down menu options?
===========================================================

メニュータイトル(‘File’、‘Edit’、‘Buffers’など)はそれぞれローカルキーマ
ップおよびグローバルキーマップを表しています。メニュータイトルをマウスで
選択することによって、メニューのフォーム内にそのキーマップの非‘nil’のコ
ンテンツが表示されます。

   したがって既存メニューにメニューオプションを追加するために行う必要が
あるのは、適切なキーマップへの新たな定義の追加だけです。つまり‘Edit’メニ
ューに‘Forward Word’アイテムを追加するためには、以下のLispコードが必要で
す:

     (define-key global-map
       [menu-bar edit forward]
       '("Forward word" . forward-word))

1行目ではグローバルメニューバーエントリーを含むグローバルキーマップにエ
ントリーを追加しています。‘global-map’への参照をローカルキーマップに置き
換えることにより、特定のモードだけにメニューオプションが追加されます。

   2行目ではメニューバーから新エントリーへのパスを記述しています。これは
このメニューエントリーを‘File’メニューの下に配置するには、2行目の
‘edit’という単語を‘file’に変更すればよいことを意味します。

   3行目は1つ目の要素が表示されるタイトル、2つ目の要素がメニューオプショ
ン呼び出し時に呼び出される関数であるようなコンスセルです。

   既存メニューへの新オプション追加デ新たなメニューを追加するためには新
たにキーマップ全体を定義しなければなりません。

     (define-key global-map [menu-bar words]
       (cons "Words" (make-sparse-keymap "Words")))

   上記のコードは新たに疎キーマップ(sparse keymap)を追加して名前
‘Words’を付与、それをグローバルメニューバーにアタッチします。したがって
この新メニューへの、‘Forward Word’アイテム追加には以下のようなコードが必
要になるでしょう:

     (define-key global-map
       [menu-bar words forward]
       '("Forward word" . forward-word))

キーマップが機能する方法により、メニューオプションはより新しく定義された
アイテムがトップになるように表示されることに注意してください。したがって
メニューオプション‘foo’、‘bar’、‘baz’を(この順番で)定義するとメニューオ
プションは‘baz’がトップ、‘foo’がボトムに表示されます。

   これを回避する1つの方法として関数‘define-key-after’の使用があります。
これは‘define-key’と同様ですが、アイテムが出現しる位置を変更することがで
きます。以下は‘Edit’メニューの‘Undo’アイテムの直後になるように‘Forward
Word’アイテムを挿入します。

     (define-key-after
       (lookup-key global-map [menu-bar edit])
       [forward]
       '("Forward word" . forward-word)
       'undo)

   ‘define-key-after’にたいする2つ目と3つ目の引数が‘define-key’の場合と
は異なること、そして追加した新しい(3つ目の)引数がこの関数によってどのよ
うに定義されるかに注意してください。

   ある場所から別の場所にメニューオプションを移動するには、最後の引数を
適切に指定して‘define-key-after’を評価するだけです。

   より詳細な情報、およびメニューオプションの作成と行うより多くの例につ
いては、‘Emacs Lisp Reference Manual’の“Menu Keymaps”にあります(このマニ
ュアル内の情報については*note Emacs Lisp documentation::を参照)。


File: efaq.info,  Node: Deleting menus and menu options,  Next: Turning on syntax highlighting,  Prev: Modifying pull-down menus,  Up: Common requests

5.41 How do I delete menus and menu options?
============================================

メニューを削除するもっともシンプルな方法は、そのキーマップに‘nil’をセッ
トします。たとえば‘Words’メニュー(*note Modifying pull-down menus::を参
照)を削除するには以下を使用します:

     (define-key global-map [menu-bar words] nil)

   同じように、メニューオプションを削除するには、キーマップエントリーを
‘nil’に再定義する必要があります。たとえば‘Edit’メニューから(*note
Modifying pull-down menus::で追加した)‘Forward word’メニューオプションを
削除するには以下を使用します:

     (define-key global-map [menu-bar edit forward] nil)


File: efaq.info,  Node: Turning on syntax highlighting,  Next: Scrolling only one line,  Prev: Deleting menus and menu options,  Up: Common requests

5.42 How do I turn on syntax highlighting?
==========================================

‘font-lock-mode’はEmacsがカレントバッファーでシンタックスハイライト和行
う標準的な方法です。これはEmacs 22.1以降ではデフォルトで有効になっていま
す。

   ‘font-lock-mode’をオンに切り替えると、異なるタイプのテキストは違うカ
ラーで表示されます。たとえばプログラミング用のモードでは変数はあるフェイ
スで、キーワードはそれとは異なるフェイス、コメントは更に違うフェイスで表
示されるでしょう。

   既存バッファーで‘font-lock-mode’をオフに切り替えるには‘M-x
font-lock-mode <RET>’を使用してください。

   Emacs 21以前では以下のコードを‘.emacs’ファイルに記述して、
‘font-lock-mode’をグローバルにオンに切り替えることができます。

     (global-font-lock-mode 1)

   ‘font-lock-mode’によるバッファーのハイライトにはかなり時間がかかり、
苛立たしい表示の遅延を引き起こすので、これに対処するための機能がいくつか
あります。

   Emacs 21では‘font-lock-mode’をオンに切り替えることによって、
‘jit-lock-mode’が提供する新たな“JITフォント表示(Just-In-Time
fontification)”が自動的にアクティブになります。‘jit-lock-mode’はバッファ
ーをユーザーに実際に見せる必要が生じるまで、そのバッファー範囲のフォント
表示を遅延させるとともに、EmacsがIdol中にもフォント表示を行えます。これ
によってバッファーの可視範囲はほとんど瞬時に表示されるようになります。
‘jit-lock-mode’のカスタマイズの詳細については‘C-h f jit-lock-mode
<RET>’とタイプしてください。

   21より前のバージョンのEmacsではささやかなものから派手なものまで、異な
るレベルの装飾が利用可能です。より多くの装飾にはバッファーがフォント表示
されるまで、より長い時間待機する必要があることを意味しています。バッファ
ーがどのように装飾されるべきかを制御するためには、‘.emacs’ファイルで
‘font-lock-maximum-decoration’に値をセットします。‘nil’値はデフォルトの
(通常は最低限の)装飾、‘t’は最大限の装飾をも意味します。できるだけ派手な
外観にするには、‘.emacs’ファイルに以下の行を含めてください。

     (setq font-lock-maximum-decoration t)

異なるモードでは違う方法でハイライトするようにこの変数をセットすることも
できます。詳細については‘C-h v’ (または‘M-x describe-variable <RET>’)で
‘font-lock-maximum-decoration’のドキュメントを確認してください。

   更に‘C-h f font-lock-mode’ (‘M-x describe-function <RET>
font-lock-mode <RET>’)で利用できる、関数‘font-lock-mode’のドキュメントも
参照してください。

   バッファーをフェイス(カラーとフォント)付きでそのままプリントするため
には、‘M-x ps-print-buffer-with-faces’または‘M-x
ps-print-region-with-faces’を使用します。あなたにはPostScriptプリンター
にテキストを送信する方法、あるいはGhostscriptのようなPostScriptインター
プリターが必要になるでしょう。詳細については変数‘ps-printer-name’、
‘ps-lpr-command’、‘ps-lpr-switches’のドキュメントを参照してください。


File: efaq.info,  Node: Scrolling only one line,  Next: Editing MS-DOS files,  Prev: Turning on syntax highlighting,  Up: Common requests

5.43 How can I force Emacs to scroll only one line when I move past the bottom of the screen?
=============================================================================================

‘M-x customize-variable <RET> scroll-conservatively <RET>’で
‘scroll-conservatively’をカスタマイズして大きな値、たとえば10000にセット
してください。これが何を意味するかについては、*note (emacs)Auto
Scrolling::の説明を参照してください。

   かわりに‘.emacs’で以下のLispフォームを使うこともできます:

     (setq scroll-conservatively most-positive-fixnum)


File: efaq.info,  Node: Editing MS-DOS files,  Next: Filling paragraphs with a single space,  Prev: Scrolling only one line,  Up: Common requests

5.44 How can I edit MS-DOS files using Emacs?
=============================================

MS-DOS (およびWindows)のファイルの検出と処理は透過的に行われます。Unixシ
ステム上でファイルフォーマットについて心配するなくMS-DOSファイルのオープ
ン、編集、保存を行うことができます。

   MS-DOS形式ファイルの編集時には、それがDOSファイルであることが示されま
す。UnixおよびGNU/Linuxシステム、およびMacintoshでもモードライン左端付近
に文字列‘(DOS)’が表示されるでしょう。DOSのEOLフォーマットをデフォルトと
して使用するDOSおよびWindowsでは、モードラインにバックスラッシュ(‘\’)が
表示されます。


File: efaq.info,  Node: Filling paragraphs with a single space,  Next: Escape sequences in shell output,  Prev: Editing MS-DOS files,  Up: Common requests

5.45 How can I tell Emacs to fill paragraphs with a single space after each period?
===================================================================================

以下の行を‘.emacs’ファイルに追加してください:

     (setq sentence-end-double-space nil)


File: efaq.info,  Node: Escape sequences in shell output,  Next: Fullscreen mode on MS-Windows,  Prev: Filling paragraphs with a single space,  Up: Common requests

5.46 Why these strange escape sequences from ‘ls’ from the Shell mode?
======================================================================

多くのシステムでは、‘ls’はANSIカラーエスケープシーケンスを使用してプリン
トを行う‘ls --color’にエイリアスされています。Emacsのバージョン21.1以降
には、これらのエスケープシーケンスをShellモードに認識させる
‘ansi-color’パッケージが含まれています。Emacs 23.2以降では、このパッケー
ジはデフォルトで有効になっています。これより前のバージョンではShellバッ
ファーで‘M-x ansi-color-for-comint-mode’とタイプするか、あるいはinitファ
イルに‘(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)’を追加
することで有効にできます。


File: efaq.info,  Node: Fullscreen mode on MS-Windows,  Prev: Escape sequences in shell output,  Up: Common requests

5.47 How can I start Emacs in fullscreen mode on MS-Windows?
============================================================

Emacs 24からはコマンドラインオプション‘--maximized’でEmacsを開始するか、
あるいは‘.emacs’ファイルに以下のフォームを記述します:

     (add-hook 'emacs-startup-hook 'toggle-frame-maximized)

   これより古いバージョンでは関数‘w32-send-sys-command’を使用してくださ
い。たとえば以下を‘.emacs’ファイルに記述できます:

     (add-hook 'emacs-startup-hook
               (lambda () (w32-send-sys-command ?\xF030)))

   Emacsの開始においてデフォルトのフレームサイズからフルスクリーンに拡が
る若干惑わされる視覚効果を回避するには、Windowsのレジストリ文字列に
‘Emacs.Geometry’エントリーを追加できます。*note (emacs)X Resources::を参
照してください。

   幅と高さの正しい値を計算するためには、まずEmacsフレームを最大化してか
ら‘M-:’で‘(frame-height)’および‘(frame-width)’を評価してください。


File: efaq.info,  Node: Bugs and problems,  Next: Compiling and installing Emacs,  Prev: Common requests,  Up: Top

6 Bugs and problems
*******************

Emacsマニュアルにはユーザーが陥りやすい類の一般的なトラブルのリストがあ
るので、このチャプターに記述されていない問題に遭遇したら、*note Dealing
with Emacs Trouble: (emacs)Lossage.を参照してください。バグを見つけたと
判断したら、それをどうすればよいかについては*note Reporting Bugs:
(emacs)Bugs.を参照してください。

   Emacsディストリビューションに同梱されているファイル‘etc/PROBLEMS’は特
定プラットフォームでのEmacsのビルド、使用にたいする既知の様々な問題のリ
ストがあります。これを読むには‘C-h C-p’とタイプしてください。

* Menu:

* Problems with very large files::
* ^M in the shell buffer::
* Problems with Shell Mode::
* Termcap/Terminfo entries for Emacs::
* Errors with init files::
* Emacs ignores X resources::
* Emacs ignores frame parameters::
* Editing files with $ in the name::
* Shell mode loses the current directory::
* Security risks with Emacs::
* Dired claims that no file is on this line::


File: efaq.info,  Node: Problems with very large files,  Next: ^M in the shell buffer,  Up: Bugs and problems

6.1 Does Emacs have problems with large files?
==============================================

Emacsのバッファーサイズには先天的に固定された制限があります。これは同一
プラットフォームで他のプログラムがサポートするオブジェクトの最大サイズと
比較すると厳しい制限です。

   バッファーの最大サイズはバージョン23.2からは32ビットマシンで512MBです
。‘--with-wide-int’フラグを使用してEmacsをビルドした場合には、バッファー
の最大サイズは32ビットマシンで2GBです。

   64ビットマシンでコンパイルしたEmacsはより大きい‘most-positive-fixnum’
(2.3EB)までのバッファーを扱うことができます(訳注: 1E=1exaは10の18乗)。

   マルチバイト文字のデコーディングのような事柄のために、visitできるのは
バッファーのサイズ制限の概ね半分のサイズのファイルだけです。圧縮されたア
ーカイブをvisitする際には、解凍のためにファイルサイズの制限はより小さく
なります。


File: efaq.info,  Node: ^M in the shell buffer,  Next: Problems with Shell Mode,  Prev: Problems with very large files,  Up: Bugs and problems

6.2 How do I get rid of ‘^M’ or echoed commands in my shell buffer?
===================================================================

それらを取り除くには‘M-x comint-strip-ctrl-m <RET>’を試してください。こ
れが機能しない場合には、いくつかのオプションがあります。

   ‘tcsh’では以下を‘.cshrc’ (または‘.tcshrc’)ファイルに記述してください:

     if ($?INSIDE_EMACS && $?tcsh)
         unset edit
         stty -icrnl -onlcr -echo susp ^Z
     endif

   あるいは以下をファイル‘.emacs_tcsh’または‘~/.emacs.d/init_tcsh.sh’に
記述してください:

     unset edit
     stty -icrnl -onlcr -echo susp ^Z

   Shellバッファーで‘tcsh’のかわりに‘csh’を使用してください。1つ目の方法
は:

     (setq explicit-shell-file-name "/bin/csh")

別の方法としては‘.cshrc’ (または‘.tcshrc’)ファイルでこれを行う方法です:

     setenv ESHELL /bin/csh

(これが効果をもつように環境変数を正しくセットした後にEmacsを再起動しなけ
ればなりません。)

   以下のLispフォームでEmacs Lispにより‘ESHELL’環境変数をセットすること
もできます:

     (setenv "ESHELL" "/bin/csh")

   上記の解決策は最初にシェルが‘^M’文字を生成するのを防ぐ試みです。これ
が不可能(たとえばWindowsシェルを使用している)なら、‘.emacs’に追加するこ
とによって、Emacsにそれらの文字をバッファーから削除させることができます
。

     (add-hook 'comint-output-filter-functions #'comint-strip-ctrl-m)

   関連する注意: あなたのシェルが入力行をShellバッファーでエンコードする
場合には、Shellバッファーで‘comint-process-echoes’変数をカスタマイズする
か、あるいはシェルの起動ファイルで以下のコマンドの実行を試みたいと思うか
もしれません:

     stty -icrnl -onlcr -echo susp ^Z


File: efaq.info,  Node: Problems with Shell Mode,  Next: Termcap/Terminfo entries for Emacs,  Prev: ^M in the shell buffer,  Up: Bugs and problems

6.3 Why do I get an error message when I try to run ‘M-x shell’?
================================================================

これはEmacsが間違った場所でシェルを探そうとして起こるかもしれません。シ
ェル実行形式の場所をあなたが知っていたら、‘.emacs’ファイルで変数
‘explicit-shell-file-name’がそのフルファイル名を指し示すようにセットして
ください。

   MS-Windows上のShellモードで差し出がましいアンチウイルスソフトウェアに
よりトラブルに遭う人がいます。このようなケースでは常駐アンチウイルスプロ
グラムを無効にすると問題は解決するでしょう。


File: efaq.info,  Node: Termcap/Terminfo entries for Emacs,  Next: Errors with init files,  Prev: Problems with Shell Mode,  Up: Bugs and problems

6.4 Where is the termcap/terminfo entry for terminal type ‘emacs’?
==================================================================

ターミナルタイプ‘emacs’にたいするtermcapエントリーは、通常はサブシェルの
環境変数‘TERMCAP’にセットされます。これは特定の状況下(たとえばShellバッ
ファーからのrlogin)において、システムワイドなtermcapファイルにエントリー
を追加する助けになるかもしれません。以下は‘emacs’にたいする正しい
termcapエントリーです:

     emacs:tc=unknown:

   ‘emacs’にたいするterminfoエントリーを作成するには‘tic’または
‘captoinfo’を使用します。‘/usr/lib/terminfo/e/emacs’を生成する必要があり
ますが、これは単に‘/usr/lib/terminfo/d/dumb’を
‘/usr/lib/terminfo/e/emacs’にコピーすれば大丈夫です。

   termcap/terminfoエントリーがあってもShellバッファーでのフルスクリーン
プログラムの使用は有効になりません。かわりに‘M-x term’を使用してください
。

   termcap/terminfo欠落による問題を回避するためには、シェルのスタートア
ップファイルで端末タイプを‘emacs’から‘dumb’か‘unknown’に変更します。
‘csh’ユーザーは以下を‘.cshrc’ファイルに記述できます:

     if ("$term" == emacs) set term=dumb


File: efaq.info,  Node: Errors with init files,  Next: Emacs ignores X resources,  Prev: Termcap/Terminfo entries for Emacs,  Up: Bugs and problems

6.5 Why does Emacs say ‘Error in init file’?
============================================

あなたの‘.emacs’ファイル、あるいはシステムワイドファイル
‘site-lisp/default.el’のロード中にエラーが発生したためです。Emacs 21.1以
降では‘*Messages*’バッファーがポップアップして、そこにデバッグ用のヒント
を与えるためのエラーに関する追加情報を書き込みます。

   あなたの‘.emacs’ファイルをデバッグする方法については*note Debugging a
customization file::を参照してください。

   まず何らかのパッケージのロードが必要だったり、そあるいはパッケージの
ロード後に評価されるフックを使用したのかもしれません。これのよくあるケー
スについては*note Terminal setup code works after Emacs has begun::に記
述があります。


File: efaq.info,  Node: Emacs ignores X resources,  Next: Emacs ignores frame parameters,  Prev: Errors with init files,  Up: Bugs and problems

6.6 Why does Emacs ignore my X resources (my .Xdefaults file)?
==============================================================

Emacsは以下の環境変数が指定するファイルからXリソースを検索します。

   • ‘XFILESEARCHPATH’
   • ‘XUSERFILESEARCHPATH’
   • ‘XAPPLRESDIR’

   これはXツールキットを使用して記述されたプログラムが提供する機能をエミ
ュレートします。

   ‘XFILESEARCHPATH’と‘XUSERFILESEARCHPATH’はコロンで区切られたファイル
名のリスト、‘XAPPLRESDIR’はコロンで区切られたディレクトリーのリストです
。

   Emacsは以下のようにXリソースを検索します:

  1. コマンドラインで‘-xrm RESOURCESTRING’オプションによって指定された値

  2. 環境変数‘XENVIRONMENT’の値

        − これがセットされていなければ、‘~/.Xdefaults-HOSTNAME’という名
          前のファイルがあればその中から(HOSTNAMEはEmacsが実行中のマシン
          の名前)

  3. サーバーが提供するスクリーン固有のシステムワイドなリソースプロパテ
     ィ

        − これがセットされていなければ、‘~/.Xdefaults’という名前のファイ
          ルがあればその中から

  4. ‘XUSERFILESEARCHPATH’にリストされたファイル

        − 環境変数‘LANG’がセットされていれば‘XAPPLRESDIR’にリストされた
          ディレクトリーにある‘LANG/Emacs’という名前のファイルの中から
          (LANGは環境変数‘LANG’の値)
        − ‘XAPPLRESDIR’にリストされたディレクトリーにあるEmacsという名前
          のファイルの中から
        − (環境変数‘LANG’がセットされていれば) ‘~/LANG/Emacs’の中から
        − ‘~/Emacs’の中から

  5. ‘XFILESEARCHPATH’にリストされたファイルの中から


File: efaq.info,  Node: Emacs ignores frame parameters,  Next: Editing files with $ in the name,  Prev: Emacs ignores X resources,  Up: Bugs and problems

6.7 Why don’t my customizations of the frame parameters work?
=============================================================

これが発生したのは恐らく変数‘initial-frame-alist’でフレームパラメーター
をセットしたからです。この変数にはEmacs起動時に作成された最初のフレーム
に使用されたパラメーターだけが保持されています。すべてのフレームのパラメ
ーターをカスタマイズするためには、かわりに‘default-frame-alist’を変更し
てください。

   これらの2つの変数が存在するのは、多くのユーザーが特別な方法で初期フレ
ームをカスタマイズするからです。たとえば初期フレームの位置とサイズを判断
することができ、かつ他のフレームについてはそれぞれを個別に配置してジオメ
トリを制御したいような場合です。


File: efaq.info,  Node: Editing files with $ in the name,  Next: Shell mode loses the current directory,  Prev: Emacs ignores frame parameters,  Up: Bugs and problems

6.8 How do I edit a file with a ‘$’ in its name?
================================================

ミニバッファーでファイル名を入力する際には、単語の前に‘$’があるとEmacsは
環境変数としてそれの展開を試みます。この挙動を抑止するには、かわりに
‘$$’とタイプしてください。


File: efaq.info,  Node: Shell mode loses the current directory,  Next: Security risks with Emacs,  Prev: Editing files with $ in the name,  Up: Bugs and problems

6.9 Why does shell mode lose track of the shell’s current directory?
====================================================================

Emacsには実際にシェルが自身のディレクトリーを変更したタイミングを知る手
段がありません。これはUnixに内在する制限です。そのためにEmacsは‘cd’コマ
ンドを識別して推測を試みます。変数リファレンスを含むディレクトリーが後に
続く‘cd’ (‘cd $HOME/bin’)やシェルのメタ文字を含むディレクトリー(‘cd
../lib*’)をタイプすると、Emacsはシェルの新たなカレントディレクトリーの正
確な推測に失敗するでしょう。Shellモードにおけるこの問題を処理するために
、膨大な数の様々な訂正および改善が記述されてきました(*note Finding a
package with particular functionality::を参照)。

   コマンド‘M-x dirs’でシェルのカレントディレクトリーをEmacsに伝えること
ができます。


File: efaq.info,  Node: Security risks with Emacs,  Next: Dired claims that no file is on this line,  Prev: Shell mode loses the current directory,  Up: Bugs and problems

6.10 Are there any security risks in Emacs?
===========================================

   • サードパーティのパッケージ。

     Emacsにインストールされた任意のパッケージはEmacs自身のプロセスと同
     じ権限で任意のコードを実行できる。サードパーティのアーカイブをパッ
     ケージシステム(‘M-x list-packages’など)で使用する際には注意を要する
     。信頼可能なサードパーティだけを使用すること!

   • ‘file-local-variable’機能(危険ではあるが容易に変更できる)。

     Emacsにはファイル終端付近に特別にフォーマットされたテキストを含むフ
     ァイルを編集する際に、変数にたいするローカル値のセットを許す機能が
     ある。この機能にはファイルをvisitする際に任意のEmacs Lispコードを評
     価する能力も含まれる。当然、トロイの木馬がこの機能を悪用する可能性
     がある。

     Emacsにはバージョン22の時点において、セットしても安全だと判っている
     ローカル変数のリストがある。このリスト以外の変数のセットをファイル
     が試みると、その変数をセットするべきかどうかユーザーに確認を求める
     。変数‘enable-local-eval’をセットすることにより、ファイル下部で見つ
     けたEmacs Lispコードの評価を許すか否かを▽えまに伝えることもできる。

     *note (emacs)File Variables::を参照のこと。

   • 合成Xイベント(危険であり‘MIT-MAGIC-COOKIE-1’以上を使用すること)。

     Emacsは‘SendEvent’リクエストが生成した合成Xイベント(synthetic X
     event)が通常イベントであるかのように受け入れる。結果として簡単なホ
     ストベースの認証を使用していると、XワークステーションへのX接続をオ
     ープン可能な他のユーザーは、Emacsプロセスに(特権での他プロセス実行
     を含む)何でも実行させることができる。

     他のユーザーによるX接続のオープンができないように防ぐことが、これに
     たいする唯一の修整である。‘MIT-MAGIC-COOKIE-1’のような本物の認証メ
     カニズムを使用することが、これを防ぐ標準的な方法である。‘xauth’プロ
     グラムの使用に何らかの効果があるなら、恐らく‘MIT-MAGIC-COOKIE-1’を
     使用しているだろう。あなたのサイトは上位の認証方式を使用しているか
     もしれない。システム管理者に尋ねてみて欲しい。

     本物の認証が利用できなければ、Xプログラム起動中の短い時間内だけホス
     トへのアクセスを許可して、その後にアクセスを削除することで満足でき
     るかもしれない。これは敵対的ユーザーがアクセス可能な時間枠が縮小さ
     れるのでリスクは幾分低減するものの、_排除はされていない_。

     UnixおよびXを実行中のコンピューターのほとんどでは‘xhost’コマンドを
     使用してアクセスを有効または無効にできる。すべてのホストにXサーバー
     へのアクセスを許可するには、

          xhost +

     をシェルプロンプトで使用する。これは(少なくともHPマシンでは)以下の
     メッセージを生成する:

          access control disabled, clients can connect from any host

     (名前により明示的に許可されたホストを除き)すべてのホストにたいして
     Xサーバーへのアクセスを拒絶するには以下を使用する

          xhost -

     HPのテスト機では、このコマンドは以下のメッセージを生成した:

          access control enabled, only authorized clients can connect


File: efaq.info,  Node: Dired claims that no file is on this line,  Prev: Security risks with Emacs,  Up: Bugs and problems

6.11 Dired says, ‘no file on this line’ when I try to do something.
===================================================================

Diredはファイル名の先頭を見つけるために正規表現を使用します。Unix形式の
長いディレクトリーリスト(‘ls -l’)では、ファイル名は日時の後で始まります
。したがってこのregexpは日時を探すように記述されています。デフォルトでは
言語に関わらず日付と時刻を認識して然るべきですが、あなたのディレクトリー
リストが通常のフォーマットでなければDiredが混乱するかもしれません。

   これを解決するには2つのアプローチがあります。1つ目には‘ls -l’の出力が
より標準的なフォーマットになるように設定を行うことです。詳細はあなたの
OSのマニュアルを参照してください。

   2つ目のアプローチはDiredが使用する正規表現
‘directory-listing-before-filename-regexp’を変更することです。


File: efaq.info,  Node: Compiling and installing Emacs,  Next: Finding Emacs and related packages,  Prev: Bugs and problems,  Up: Top

7 Compiling and installing Emacs
********************************

* Menu:

* Installing Emacs::
* Problems building Emacs::


File: efaq.info,  Node: Installing Emacs,  Next: Problems building Emacs,  Up: Compiling and installing Emacs

7.1 How do I install Emacs?
===========================

この回答はUnixおよびUnix風システムを使用するユーザーを意図しています。他
のオペレーティングシステムのユーザーは*note Emacs for MS-DOS::で始まる一
連の問いを確認する必要があります。これらにはUnix以外のソースおよびバイナ
リーを取得する場所、それらのシステムでEmacsをインストールする方法が記さ
れています。

   GNU/Linuxディストリビューションのほとんどでは、事前ビルドされた
Emacsパッケージが提供されています。Emacsがすでにインストール済みでなけれ
ば‘dnf install emacs’ (Red Hatとその派生物の場合。古いディストリビューシ
ョンは‘yum’を使用)、または‘apt-get install emacs’ (Debianとその派生物の
場合)のようなコマンドを(rootとして)実行することでインストールできます。

   自分でEmacsをコンパイルしたい場合には、ソースディストリビューションの
ファイル‘INSTALL’を読んでください。要約すると:

   • まずEmacsのソースをダウンロードする。ダウンロードできるサイトのリス
     トは*note Current GNU distributions::を参照のこと。GNUディストリビ
     ューションのメインサイト<https://ftp.gnu.org>では以下からダウンロー
     ド可能

     <https://ftp.gnu.org/pub/gnu/emacs/emacs-VERSION.tar.gz>

     (‘VERSION’は‘23.1’のように適切なバージョン番号に置き換えること。)

   • 次にソースファイルを解凍、抽出する。これには標準ユーティリティー
     ‘gzip’および‘tar’が必要。これらがシステムになければ
     <https://ftp.gnu.org>からダウンロードできる。

     GNU ‘tar’なら一度に解凍抽出ができる:

          tar -zxvf emacs-VERSION.tar.gz

   • この時点でEmacsのソースファイルは‘emacs-VERSION’というディレクトリ
     ーにあるはず。UnixおよびUnix風システムのほとんどでは、以下のコマン
     ドでEmacsをコンパイルできるだろう。

          cd emacs-VERSION
          ./configure         # 特定システム向けにEmacsをconfigure
          make                # Makefileを使ってコンポーネントをビルド、Emacsを使用する

     ‘make’が正常に完了したら、ビルドがうまくいった公算はかなり高い(不成
     功なら*note Problems building Emacs::を参照)。

   • デフォルトではEmacsは‘/usr/local’にインストールされる。実際にファイ
     ルをインストールするには特権ユーザーになって以下をタイプする

          make install

     ‘make install’によって‘/usr/local/bin/emacs’、および
     ‘/usr/local/share/info/’にあるかもしれないEmacs Infoファイルは上書
     きされることに注意。


File: efaq.info,  Node: Problems building Emacs,  Prev: Installing Emacs,  Up: Compiling and installing Emacs

7.2 What should I do if I have trouble building Emacs?
======================================================

まずはあなたの問題にたいする解決策があるかを確認するために、(Emacsソース
を解凍した場所にある)ファイル‘etc/PROBLEMS’調べてください。次にこのFAQか
らEmacsのインストールやコンパイルの問題に関連する他の問答を探してくださ
い。

   あなたの問題を誰かに見てもらって解決の助けとしたいなら、*note Help
installing Emacs::を参照してください。

   ドキュメントから解決策が見つからない場合には、どうかその問題をレポー
トしてください(*note Reporting bugs::を参照)。


File: efaq.info,  Node: Finding Emacs and related packages,  Next: Key bindings,  Prev: Compiling and installing Emacs,  Up: Top

8 Finding Emacs and related packages
************************************

* Menu:

* Finding Emacs on the Internet::
* Finding a package with particular functionality::
* Packages that do not come with Emacs::
* Spell-checkers::
* Current GNU distributions::
* Difference between Emacs and XEmacs::
* Emacs for minimalists::
* Emacs for MS-DOS::
* Emacs for MS-Windows::
* Emacs for GNUstep::
* Emacs for macOS::


File: efaq.info,  Node: Finding Emacs on the Internet,  Next: Finding a package with particular functionality,  Up: Finding Emacs and related packages

8.1 Where can I get Emacs on the net?
=====================================

Emacsのダウンロードに関する情報はthe Emacs home-page
(https://www.gnu.org/software/emacs/)で利用可能です。

   Emacsの入手およびEmacs最新バージョンをビルドする方法については*note
Installing Emacs::、GNUソフトウェアが利用可能なアーカイブサイトのリスト
は*note Current GNU distributions::を参照してください。


File: efaq.info,  Node: Finding a package with particular functionality,  Next: Packages that do not come with Emacs,  Prev: Finding Emacs on the Internet,  Up: Finding Emacs and related packages

8.2 How do I find an Emacs Lisp package that does XXX?
======================================================

何よりまずはパッケージが本当にまだ利用できないか確認しましょう。たとえば
‘M-x apropos <RET> python <RET>’とタイプすれば、文字列‘python’を含むすべ
ての関数と変数が一覧されます。

   パッケージはシステム上にあってもロードされていない可能性もあります。
ロード用に利用できるパッケージを確認するために、あなたのコンピューターの
lispディレクトリーを見てみましょう(*note File-name conventions::を参照
)。ほとんどのパッケージのLispソースには、それらをどのようにロード、呼び
出し、設定するべきかに関する短い説明が含まれているので、作成者がソースコ
ード内でヒントを提供していたら、Lispパッケージの使用や変更を行う前に確認
しましょう。

   コマンド‘C-h p’ (‘finder-by-keyword’)でEmacsのパッケージ構成をブラウ
ズできます。

   Emacsの一部ではない追加パッケージを探す方法についての助言は*note
Packages that do not come with Emacs::を参照してください。


File: efaq.info,  Node: Packages that do not come with Emacs,  Next: Spell-checkers,  Prev: Finding a package with particular functionality,  Up: Finding Emacs and related packages

8.3 Where can I get Emacs Lisp packages that don’t come with Emacs?
===================================================================

あなたのEmacsに更に機能を追加するには、コマンド‘M-x list-packages’を使用
するのがもっとも簡単な方法です。これはGNU ELPA (https://elpa.gnu.org)
(“Emacs Lisp Package Archive”)サーバーに接続して、それが提案する追加パッ
ケージのリストを取得します。これらはEmacsでの使用が可能ですが、スペース
等の理由によりEmacs自体とは別に配布されているGNUパッケージです。コマンド
の結果ト得られた‘*Packages*’を閲覧して何が利用可能なのか確認して、それか
らあなたが選択したパッケージのダウンロードとインストールを自動的に行いま
す。*note (emacs)Packages::を参照してください。

   Emacs Lispパッケージアーカイブは他にもあります。追加アーカイブを使用
するには変数‘package-archives’をカスタマイズしてください。これらのアーカ
イブはGNU Emacsとは提携しておらず、わたしたちはそれらがどのように保守さ
れているかを監視していません。彼らはコードの正確さち安全性に最新の注意を
払うかもしれないし、あるいはぞんざいに注意するだけかもしれません。

   更にこれらの他のアーカイブでホストされるパッケージは、他の非フリーな
プログラムのインストールや使用を推奨、あるいは必須としているかもしれませ
ん。パッケージがフリーソフトウェアであり、非フリーなソフトウェアをインス
トールせずに機能するか検証できないのであれば、あなたの自由を危うくしない
ために近寄らないことを推奨します。

   Emacs sources newsgroup (news:gnu.emacs.sources)にゲートウェイされて
いるGNU Emacs sources mailing list
(https://lists.gnu.org/mailman/listinfo/gnu-emacs-sources)は、(たとえ2点
間の通信が不確かであっても)人々が彼らのEmacs拡張をアナウンスする公の場で
す。

   Emacs Wiki (https://emacswiki.org)にはいくつかの追加拡張への指標が含
まれています。WikEmacs (https://wikemacs.org)はEmacs用の代替えwikiです。

   The Emacs Lisp List (ELL)
(http://www.damtp.cam.ac.uk/user/sje30/emacs/ell.html)には多くのEmacs
Lispファイルへの指標がありますが、これを記述している時点ではすでに更新さ
れていません。

   Emacs Lispパッケージを提供するすべてのサイトをここで一覧することは、
わたしたちには不可能です。もしも特定の機能に興味があるならEmacs自身とGNU
ELPAをチェックした後は、ウェブ検索が結果を見い出す最良の手段であることが
多々あります。


File: efaq.info,  Node: Spell-checkers,  Next: Current GNU distributions,  Prev: Packages that do not come with Emacs,  Up: Finding Emacs and related packages

8.4 Spell-checkers
==================

以下を含む様々なスペルチェッカーはEmacsと互換性があります:

Hunspell
     <http://hunspell.sourceforge.net/>

GNU Aspell
     <http://aspell.net/>

Ispell
     <http://fmg-www.cs.ucla.edu/geoff/ispell.html>

Enchant
     <https://abiword.github.io/enchant/>


File: efaq.info,  Node: Current GNU distributions,  Next: Difference between Emacs and XEmacs,  Prev: Spell-checkers,  Up: Finding Emacs and related packages

8.5 Where can I get other up-to-date GNU stuff?
===============================================

GNU公式ソフトウェアのほとんどは通常は以下に保持されています

   <https://ftp.gnu.org/pub/gnu>

   ‘ftp.gnu.org’のミラーサイト一覧は以下で見つけられます

   <https://www.gnu.org/prep/ftp>


File: efaq.info,  Node: Difference between Emacs and XEmacs,  Next: Emacs for minimalists,  Prev: Current GNU distributions,  Up: Finding Emacs and related packages

8.6 What is the difference between Emacs and XEmacs (formerly Lucid Emacs)?
===========================================================================

XEmacsとはもはや活発に開発されなくなったEmacsのブランチバージョンです。
当初XEmacsはLucid Emacsと呼ばれており、初版はEmacs 19のプレリリースバー
ジョンから派生しました。このFAQでは公式バージョンにたいしてのみ“Emacs”と
いう名前を使用します。

   XEmacsは2009年1月30にリリースされた新バージョンが最新であり、それには
Emacsに存在する多くの重要な機能が欠落していました。過去においては、
EmacsパッケージにXEmacsとの互換性のためのコードを含めるのは珍しいことで
はありませんでした。現在ではたとえそのような互換性コードをまだ保守してい
るパッケージがあったとしても、より人気のあるビルトインおよびサードパーテ
ィーのパッケージのいくつかはXEmacsのサポートを止めるか、あるいはEmacs専
用に開発されています。

   いくつかのXEmacsコードはEmacsに提供されており、他の部分についてもわた
したちは使用したいと考えていまづが、初期のXEmacsメンテナーは提供されたコ
ードの作成者を常に追跡はしておらず、FSFがそのコードにたいする署名済みの
コピーライトペーパーを取得することを不可能にしています(FSFは個別の身元を
保つEmacsのコードに正しく統合されていない汎用Cサポートパッケージは除き。
Emacsリリースに含まれるすべてのコードにたいしてこれらのペーパーを要求し
ている)。

   これらの2つのバージョンを区別して議論をする場合には、どうかそれらを
“Emacs”および“XEmacs”と呼ぶようにしてください。XEmacsもまたGNUプロジェク
トの作業を元としているので、“XEmacs”と“GNU Emacs”の対比は誤解を招きかね
ません。“Emacsen”や“(X)Emacs”のような用語も悪くはありませんが、非常に明
快とは言えないので“Emacs and XEmacs”と記述するほうが良いでしょう。


File: efaq.info,  Node: Emacs for minimalists,  Next: Emacs for MS-DOS,  Prev: Difference between Emacs and XEmacs,  Up: Finding Emacs and related packages

8.7 I don’t have enough disk space to install Emacs
===================================================

GNU ZileはEmacsの軽量クローンです。Zileは‘Zile Is Lossy Emacs’を短縮した
ものです。これにはEmacsの基本的な編集機能すべてが含まれています。Zileの
バイナリーは通常は約130kBのサイズなので、非常にスペースに制限がある環境
で有用かもしれません。詳細は以下で理由できます

   <https://www.gnu.org/software/zile/>


File: efaq.info,  Node: Emacs for MS-DOS,  Next: Emacs for MS-Windows,  Prev: Emacs for minimalists,  Up: Finding Emacs and related packages

8.8 Where can I get Emacs for MS-DOS?
=====================================

MS-DOS用のEmacsをソースからビルドするには、ディストリビューションに同梱
のファイル‘msdos/INSTALL’の手順を参照してください。DOSポートはプレーン
DOS、更にWindows XPとVistaを含むバージョン3.X以降のすべてのバージョンの
MS-Windowsでビルド、実行されています。

   ファイル‘etc/PROBLEMS’にはMS-DOS下のEmacsに関する追加情報が含まれてい
ます。

   Emacs 24の事前ビルドされたバイナリーの配布は以下から利用できます

   <http://www.delorie.com/pub/djgpp/current/v2gnu/emacs.README>

   Emacs(およびEmacs類似物)のその他のMS-DOS実装については、以下で利用可
能な“Emacs implementations and literature,”のリストを参照してください。

   <http://www.finseth.com/emacs.html>

   これらのプログラムの多くはEmacsと同じように見えますが、それらには
Emacs Lisp拡張言語のような特定の機能が欠落していることが多々あります。


File: efaq.info,  Node: Emacs for MS-Windows,  Next: Emacs for GNUstep,  Prev: Emacs for MS-DOS,  Up: Finding Emacs and related packages

8.9 Where can I get Emacs for Microsoft Windows?
================================================

MS-WindowsでのEmacsには別個にFAQがあります。*note (efaq-w32)Top::を参照
してください。MS-DOSの場合には*note Emacs for MS-DOS::を参照してください
。


File: efaq.info,  Node: Emacs for GNUstep,  Next: Emacs for macOS,  Prev: Emacs for MS-Windows,  Up: Finding Emacs and related packages

8.10 Where can I get Emacs for GNUstep?
=======================================

バージョン23.1からEmacsはGNUstepをネイティブでサポートしています。ディス
トリビューション内のファイル‘nextstep/INSTALL’を参照してください。


File: efaq.info,  Node: Emacs for macOS,  Prev: Emacs for GNUstep,  Up: Finding Emacs and related packages

8.11 Where can I get Emacs for macOS?
=====================================

バージョン22.1からEmacsはmacOSをネイティブでサポートしています。ディスト
リビューション内のファイル‘nextstep/INSTALL’を参照してください。


File: efaq.info,  Node: Key bindings,  Next: Alternate character sets,  Prev: Finding Emacs and related packages,  Up: Top

9 Key bindings
**************

* Menu:

* Binding keys to commands::
* Invalid prefix characters::
* Terminal setup code works after Emacs has begun::
* Working with function and arrow keys::
* X key translations for Emacs::
* Backspace invokes help::
* Swapping keys::
* Producing C-XXX with the keyboard::
* No Meta key::
* No Escape key::
* Compose Character::
* Binding combinations of modifiers and function keys::
* Meta key does not work in xterm::
* ExtendChar key does not work as Meta::
* SPC no longer completes file names::


File: efaq.info,  Node: Binding keys to commands,  Next: Invalid prefix characters,  Up: Key bindings

9.1 How do I bind keys (including function keys) to commands?
=============================================================

対話的、または‘.emacs’ファイルでキーをコマンドにバインドできます。すべて
のモードにたいしてキーを対話的にバインドするには、‘M-x global-set-key
<RET> KEY CMD <RET>’とタイプします。

   カレントのメジャーモードだけでキーをバインドするには‘M-x
local-set-key <RET> KEY CMD <RET>’とタイプします。

   *note (emacs)Key Bindings::を参照してください。

   対話的にキーをバインドするプログレを容易にするために、次の“trick”を使
用できます:
まず対話的にキーをバインドしてからすぐに‘C-x <ESC> <ESC> C-a C-k C-g’と
タイプ、
これでキーバインドを要するコマンドがkillリングに取り込まれたので
‘.emacs’ファイルにyankできるようになった。

グローバルなキーバインディングの場合には、コマンドの変更は不要です。たと
えば、

     (global-set-key [f1] 'help-for-help)

これは‘.emacs’ファイルに直後記述できます。ローカルなキーバインディングの
場合には、、コマンドは‘add-hook’関数と組み合わせて使用されます。たとえば
TeXモードでのローカルバインディングは以下のようになるでしょう

     (add-hook 'tex-mode-hook
       (lambda ()
        (local-set-key [f1] 'help-for-help)))

   • killリングからyankしたキーシーケンス内でのコントロール文字の形式は
     グラフィック形式 — つまり<CTRL>は‘^’、<TAB>はいくつかのスペース(通
     常は8)で示されるでしょう。これらをベクターや文字列形式に変換したい
     と思うかもしれません。

   • プレフィクスキーとしてある文字シーケンスをバインドする場合に、それ
     がすでにコンプリートキーワードとしてバインドされていたら、新しいバ
     インディングの前にコンプリートキーのバインドを解除しなければならな
     い。たとえば‘ESC {’がバインド済みなら:

          (global-unset-key [?\e ?{])   ;; または
          (local-unset-key [?\e ?{])

   • コマンドや“lambdaリスト”は別として、ベクターや文字列もキーにバイン
     ドできるのでマクロとして扱うことができる。たとえば:

          (global-set-key [f10] [?\C-x?\e?\e?\C-a?\C-k?\C-g])  ;; または
          (global-set-key [f10] "\C-x\e\e\C-a\C-k\C-g")


File: efaq.info,  Node: Invalid prefix characters,  Next: Terminal setup code works after Emacs has begun,  Prev: Binding keys to commands,  Up: Key bindings

9.2 Why does Emacs say ‘Key sequence XXX uses invalid prefix characters’?
=========================================================================

通常は2つのうちいずれかが発生したからです。1つ目はキーシーケンス内のコン
トロール文字の指定誤りです(Lisp式で‘\C-f’のかわりに‘C-f’を使用した)。2つ
目はバインドを試みているキーストロークシーケンス内の“プレフィクスキー
(prefix key)”がすでに“コンプリートキー(complete key)”としてバインドされ
ているからです。歴史的な理由により‘ESC [’は通常は問題になります。この場
合にはキーシーケンスのバインドを試みる前に、以下のフォームのいずれかを評
価する必要があります:

     (global-unset-key [?\e ?[])  ;; または
     (global-unset-key "\e[")


File: efaq.info,  Node: Terminal setup code works after Emacs has begun,  Next: Working with function and arrow keys,  Prev: Invalid prefix characters,  Up: Key bindings

9.3 Why doesn’t this [terminal or window-system setup] code work in my ‘.emacs’ file, but it works just fine after Emacs starts up?
===================================================================================================================================

スタートアップの間、Emacsは与えられたコード/ファイルの順番に応じて自身を
初期化します。‘.emacs’ファイルの中のあるコードを、端末またはウィンドウシ
ステムのセットアップコードが実行されるまで延期する必要があるのにセットア
ップが終わっていないと、この問題を体験することになるでしょう(このコード
/ファイルの実行順はスタートアップ後は強制されない)。

   端末またはウィンドウシステムのセットアップ後までEmacs Lispコードの実
行を延期するには、コードを“lambdaリスト(lambda list)”として
‘emacs-startup-hook’ (またはEmacs 24.4は‘tty-setup-hook’)に追加してくだ
さい。たとえば、

     (add-hook 'emacs-startup-hook
               (lambda ()
                (when (string-match "\\`vt220" (or (getenv "TERM") ""))
                  ;; vt220の"Do"キーをM-xのように振る舞わせる:
                  (global-set-key [do] 'execute-extended-command))))

   起動のたびにEmacsが何を行っているかについては‘lisp/startup.el’を参照
してください。


File: efaq.info,  Node: Working with function and arrow keys,  Next: X key translations for Emacs,  Prev: Terminal setup code works after Emacs has begun,  Up: Key bindings

9.4 How do I tell what characters or symbols my function or arrow keys emit?
============================================================================

‘C-h c’の後にファンクションキーか矢印キーをタイプしてください。コマンド
はファンクションキーシンボルか文字シーケンスをリターンするでしょう(説明
はEmacsドキュメントを参照)。これは他のキーでも同様に機能します。


File: efaq.info,  Node: X key translations for Emacs,  Next: Backspace invokes help,  Prev: Working with function and arrow keys,  Up: Key bindings

9.5 How do I set the X key “translations” for Emacs?
====================================================

EmacsはデフォルトではXtライブラリーを使用するようには記述されていないの
で、何の“変換(translation)”もセットされていません(XtとともにEmacsをビル
ドした場合にそのような変換をどのようにセットするかわたしたちには定かでは
ないので、これを行うことができたらどうか知らせてください!)。

   Emacs内でのキーの挙動に影響を与えるには‘xmodmap’ (Emacs外部)、あるい
は‘define-key’ (Emacs内部)を通じて行う方法だけです。‘define-key’コマンド
は‘local-function-key-map’と組み合わせて使用する必要があります。たとえば
、

     (define-key function-key-map [M-<TAB>] [?\M-\t])

これはキーシーケンス‘M-<TAB>’を定義します。


File: efaq.info,  Node: Backspace invokes help,  Next: Swapping keys,  Prev: X key translations for Emacs,  Up: Key bindings

9.6 Why does the <Backspace> key invoke help?
=============================================

(ほとんどのキーボードでは)<Backspace>キーはASCIIコードの8を生成します。
‘C-h’が送信するコードも同じです。Emacsではデフォルトでは‘C-h’は
help-commandを呼び出します。これは‘help’の最初の文字が‘h’なので簡単に覚
えられることを意図したものです。この問題のもっとも簡単な解決策はヘルプに
は‘C-h’ (と<Backspace>)を使い、前の文字の削除には<DEL>(<Delete>キー)を使
うことです。

   多くの人たちにとって、この解決策は問題があるかもしれません:

   • 彼らはEmacs外部では前の文字の削除に通常は<Backspace>を使用する。こ
     れはEmacs外部で前の文字を削除するコマンドを<DEL>にすれば解決できる
     。多くのUnixシステムでは、以下のコマンドは<DEL>をリマップするだろう
     :

          stty erase '^?'

   • ユーザーはキーボード上でより使いやすい位置にある、あるいは別個に
     <Delete>キーがないという理由によって、前の文字の削除に<Backspace>キ
     ーを使うことを好むかもしれない。この場合には<Backspace>キーに
     <Delete>のように振る舞わせる必要がある。いくつかの方法がある。

        − いくつかの端末(例: VT3##端末)や端末エミュレータ(例: TeraTerm)で
          は、セットアップメニューから<Backspace>キーが生成する文字を変
          更できる。

        − 完全にプログラム可能なキーボードや、任意のキーから別の任意のキ
          ーへのリマップをサポートする端末エミュレータを入手できるかもし
          れない。

        − Emacs 21.1以降ではオプション‘normal-erase-is-backspace-mode’の
          カスタマイズ、または‘M-x normal-erase-is-backspace’呼び出しに
          より、ダム端末およびウィンドウ化されたディスプレーの両方におい
          て、<Backspace>キーおよび<Delete>キーの効果を制御できる。詳細
          についてはこれらのシンボルのドキュメントについては、*note
          Emacs Lisp documentation::を参照のこと。

        − Emacs内部では<Backspace>キーと<DEL>キーを交換できる:

               (keyboard-translate ?\C-h ?\C-?)

          これはたとえ<DEL>を‘delete-backward-char’以外の何かにバインド
          するモードでも機能するので、<Backspace>を<DEL>のように動作させ
          る際の推奨方法である。

          同じように<DEL>が‘C-d’ (デフォルトでは前方に削除)のように振る
          舞うようにリマップできる:

               (keyboard-translate ?\C-? ?\C-d)

          ‘keyboard-translate’についての詳細は*note Swapping keys::を参
          照のこと。

        − 別のアプローチとしてはキーバインディングを切り替えて、かわりに
          ‘C-x h’をヘルプにする:

               (global-set-key "\C-h" 'delete-backward-char)

               ;; mark-whole-bufferをオーバーライドする
               (global-set-key "\C-xh" 'help-command)

          とはいえこの手法は推奨しない。これは<DEL>を
          ‘delete-backward-char’にバインドするモードにたいしてのみ問題を
          解決する。‘view-mode’モードのように<DEL>を別の何かにバインドす
          るモードは、<Backspace>キーを押下した際に期待通り動作しないだ
          ろう。この理由により、えわたしたちは上述した
          ‘keyboard-translate’手法をお勧めする。

          ヘルプ用として他に人気のあるキーバインディングは‘M-?’と‘C-x
          ?’である。

     <DEL>にたいしてローカルバインディングをもちモードが多数あり、それら
     と干渉するかもしれないので、<DEL>に‘help-command’をバインドしようと
     してはならない。

   ウィンドウ化されたディスプレーでEmacs 21以降を実行する場合には、これ
らのシステムでのキーボード操作とEmacsの矛盾が少なくなるように、
<Delete>をポイント位置の文字を削除するコマンドにバインドします。

   この問題の解決についての詳細は*note If <DEL> Fails to Delete:
(emacs)DEL Does Not Delete.を参照してください。


File: efaq.info,  Node: Swapping keys,  Next: Producing C-XXX with the keyboard,  Prev: Backspace invokes help,  Up: Key bindings

9.7 How do I swap two keys?
===========================

‘keyboard-translate’を使用して2つのキー(またはキーシーケンス)を交換でき
ます。たとえば‘C-h’を<DEL>、<DEL>を‘C-h’にするには、

     (keyboard-translate ?\C-h ?\C-?)  ; 'C-h'をDELに変換
     (keyboard-translate ?\C-? ?\C-h)  ; DELを'C-h'に変換

関数の後のキーシーケンスの1つ目はキーボードが何を生成するかを識別、2つ目
はキーマップでそれが何にマッチするかを指定します。

   しかし‘C-h’と<DEL>の特別なケースにおいては、‘keyboard-translate’呼び
出しではなく‘normal-erase-is-backspace-mode’を切り替えるべきです。*note
(emacs)DEL Does Not Delete::を参照してください。

   キーボードの変換(translation)はキーマップのキーバインディングと同じで
はありません。Emacsには異なる状況に適用するために数々のキーマップがあり
ますが、キーボード変換は1セットしかなく、Emacsが端末から文字を読み取るた
びにそれが適用されます。キーボード変換は入力プロセスのもっとも低いレベル
で行われます。キーマップに照合される文字にはキーボード変換された結果の文
字が含まれています。


File: efaq.info,  Node: Producing C-XXX with the keyboard,  Next: No Meta key,  Prev: Swapping keys,  Up: Key bindings

9.8 How do I produce C-XXX with my keyboard?
============================================

(X配下ではない)端末で一般的ないくつかの“エイリアス”です:

‘C-2’や‘C-<SPC>’
     ‘C-@’

‘C-6’
     ‘C-^’

‘C-7’や ‘C-S--’
     ‘C-_’

‘C-4’
     ‘C-\’

‘C-5’
     ‘C-]’

‘C-/’
     ‘C-?’

   多くの場合は他にもエイリアスが存在します。あなたのキーボードで‘C-h
c’コマンドを使って、<CTRL>とすべての数字を試して何が生成されるか確認して
みてください。コマンド名が判っていれば‘C-h w’コマンドを試してみることも
できます。


File: efaq.info,  Node: No Meta key,  Next: No Escape key,  Prev: Producing C-XXX with the keyboard,  Up: Key bindings

9.9 What if I don’t have a <Meta> key?
======================================

多くのキーボードでは、<Alt>キーは<Meta>のように振る舞うので試してみてく
ださい。

   ‘M-a’のかわりに‘<ESC> a’とタイプすることができます。実際のところ、い
ずれにせよEmacsｈｓ内部で‘M-a’を‘<ESC> a’に変換しています
(‘meta-prefix-char’の値による)。<Meta>と‘a’は一緒に押しますが、<ESC>の場
合には<ESC>を押して、離した後に‘a’を押下することに注意してください。


File: efaq.info,  Node: No Escape key,  Next: Compose Character,  Prev: No Meta key,  Up: Key bindings

9.10 What if I don’t have an <Escape> key?
==========================================

かわりに‘C-[’をタイプしてください。これはエスケープキーのようにASCIIコー
ドの27を送信するはずです。‘C-3’でも機能する端末もあります(X配下でないこ
と)。多くの端末(特にDEC)では、<F11>が<ESC>を生成します。そうでなければ、
以下のフォームを使用してこれをバインドできます:

     ;; DEC端末ではF11はESCの置き換えとドキュメントされている
     (define-key function-key-map [f11] [?\e])


File: efaq.info,  Node: Compose Character,  Next: Binding combinations of modifiers and function keys,  Prev: No Escape key,  Up: Key bindings

9.11 Can I make my <Compose Character> key behave like a <Meta> key?
====================================================================

VT220のようなダム端末ではできません。噂では特定のVT220クローンは、この方
法で設定することによって独自に<Compose>キーをもてるようです。Xを使用して
いれば、‘xmodmap’コマンドでこれを行うことができるかもしれません。


File: efaq.info,  Node: Binding combinations of modifiers and function keys,  Next: Meta key does not work in xterm,  Prev: Compose Character,  Up: Key bindings

9.12 How do I bind a combination of modifier key and function key?
==================================================================

ファンクションキーのシンボルにプレフィクスを追加することによって、ベクタ
ーフォーマットで修飾されたファンクションキーを表すことができます。たとえ
ば(Emacsドキュメントより):

     (global-set-key [?\C-x right] 'forward-page)

ここで‘?\C-x’は文字‘C-x’にたいするLisp文字定数です。

   ファンクションキーとともに<Control>、<Meta>、<Hyper>、<Super>、
<Alt>、<Shift>の修飾キーが使用できます。これらの修飾キーを表現するにはシ
ンボル名の前に‘C-’、‘M-’、‘H-’、‘s-’、‘A-’‘S-’を前置します。以下は
‘H-M-RIGHT’を単語1つ前方に移動にする方法です:

     (global-set-key [H-M-right] 'forward-word)

   • すべての修飾キーがどんな状況でも許されている訳ではありません。
     Unix文字端末では<Hyper>、<Super>、<Alt>は利用できません。この種の状
     況下では非ASCIIキーとマウスイベント(たとえば‘C-=’や‘mouse-1’)も失敗
     します。

   キーバインディングについての一般的な説明については*note Binding keys
to commands::を参照してください。


File: efaq.info,  Node: Meta key does not work in xterm,  Next: ExtendChar key does not work as Meta,  Prev: Binding combinations of modifiers and function keys,  Up: Key bindings

9.13 Why doesn’t my <Meta> key work in an ‘xterm’ window?
=========================================================

*note Single-Byte Character Set Support: (emacs)Unibyte Mode.を参照して
ください。

   Emacsマニュアルのアドバイスが失敗した場合には、更なる助けを求める前に
以下の方法すべてを試してみてください:

   • ウィンドウマネージャーに‘mwm’を使用することによって大きな問題を抱え
     ているのかもしれない(‘mwm’のEmacsで<Meta>キーが使用できるようにする
     汎用的で優れた解決策を知る人は居ないだろうか?)。

   • X11ではそれが本当に<Meta>キーなのか確認してほしい。あなたの<Meta>キ
     ーがどんなを生成するかを確認するには‘xev’を使用する。‘Meta_L’か
     ‘Meta_R’のいずれかのはずだが、もし違うならこの状況を修整するために
     ‘xmodmap’を使用できる。<Meta>は‘Meta_L’や‘Meta_R’を生成しないものの
     ‘M-x’は非ASCII文字を生成するようなら、以下を‘~/.Xdefaults’ファイル
     に記述する:

           XTerm*eightBitInput:   false
           XTerm*eightBitOutput:  true

   • ‘xterm’が使用している‘pty’は8ビット文字を通すか確認すること。‘stty
     -a’ (あるいは‘stty everything’)がどこかに‘cs8’と表示するはずである
     。かわりに‘cs7’が表示されたら、これを修整するために‘stty cs8
     -istrip’ (あるいは‘stty pass8’)を使用する。

   • ‘xterm’とEmacsの間に‘rlogin’接続が存在する場合には、各文字の8ビット
     目をすべて渡すように、rloginに‘-8’引数を与える必要があるかもしれな
     い。

   • UltrixでEmacsを実行しているなら、‘(set-input-mode t nil)’の評価が助
     けになると報告されている。

   • 他のすべてが失敗したら、‘M-W’のタイプ時に‘xterm’に‘<ESC> W’を生成さ
     せることができる。これはいずれにせよ‘M-W’を受け取ったときにEmacsが
     行うであろう変換と同じである。X11R4では以下のリソース仕様でこれを行
     うことができるだろう:

          XTerm.VT100.EightBitInput: false

     (これは‘insert-eight-bit’アクションの振る舞いを変更する。)

     古い‘xterm’ではtranslationでこの挙動を指定できる:

          XTerm.VT100.Translations: #override \
            Meta<KeyPress>: string(0x1b) insert()

     ‘Meta’を‘Alt’に置き換える必要があるかもしれない。


File: efaq.info,  Node: ExtendChar key does not work as Meta,  Next: SPC no longer completes file names,  Prev: Meta key does not work in xterm,  Up: Key bindings

9.14 Why doesn’t my <ExtendChar> key work as a <Meta> key under HP-UX 8.0 and 9.x?
==================================================================================

これはX11R4における国際家拡張の結果であるとともに、HPが現在はこの拡張を
使用しているという事実を示しています。Emacsは<Meta>キーの状態に関わらず
‘XLookupString’関数が同じ結果をリターンするという、もはや必ずしも真とは
言えない前提にもとづいています。Emacsが修整されるまでは、その場しのぎの
一時的な修整ですがXサーバー起動後に毎回、できればxtermクライアント開始前
に以下のコマンドを実行してください:

     xmodmap -e 'remove mod1 = Mode_switch'

   これはシステムワイドで追加のkeysymを無効にします。これはあなたが実際
にそれらを使用つもりなら不本意かもしれません。


File: efaq.info,  Node: SPC no longer completes file names,  Prev: ExtendChar key does not work as Meta,  Up: Key bindings

9.15 Why doesn’t <SPC> complete file names anymore?
===================================================

Emacs 22.1から‘SPC’はミニバッファーでファイル名の補完を行わなくなったの
で、スペースが埋め込まれたファイル名のタイプにおいてスペースをクォートす
る必要がなくなりました。

   以下のようにミニバッファーで‘SPC’を‘minibuffer-complete-word’にバイン
ドすることによって古い挙動を取り戻すことができます:

     (define-key minibuffer-local-filename-completion-map (kbd "SPC")
       'minibuffer-complete-word)

     (define-key minibuffer-local-must-match-filename-map (kbd "SPC")
       'minibuffer-complete-word)


File: efaq.info,  Node: Alternate character sets,  Next: Mail and news,  Prev: Key bindings,  Up: Top

10 Alternate character sets
***************************

* Menu:

* Emacs does not display 8-bit characters::
* Inputting eight-bit characters::
* Right-to-left alphabets::
* How to add fonts::


File: efaq.info,  Node: Emacs does not display 8-bit characters,  Next: Inputting eight-bit characters,  Up: Alternate character sets

10.1 How do I make Emacs display 8-bit characters?
==================================================

*note Single-byte Character Set Support: (emacs)Unibyte Mode.を参照して
ください。Unixのテキストのみの端末ディスプレー、あるいは‘emacs -nw’呼び
出しでEmacsを実行する際には、たとえ言語環境を設定後であっても、通常は
‘set-terminal-coding-system’を使用してその端末で表示可能なものをEmacsに
伝える必要があります。さもないと非ASCII文字は‘?’と表示されるでしょう。他
のMS-DOSやMS-Windowsのようなオペレーティングシステムでは、ディスプレーが
サポートする文字についてEmacsがOSに問い合わせて、必要となる端末コーディ
ングシステムを自動的にセットアップします。


File: efaq.info,  Node: Inputting eight-bit characters,  Next: Right-to-left alphabets,  Prev: Emacs does not display 8-bit characters,  Up: Alternate character sets

10.2 How do I input eight-bit characters?
=========================================

8ビット文字の入力には様々なメソッドが利用できます。*note Single-byte
Character Set Support: (emacs)Unibyte Mode.を参照してください。より洗練
されたメソッドについては*note (emacs)Input Methods::を参照してください。


File: efaq.info,  Node: Right-to-left alphabets,  Next: How to add fonts,  Prev: Inputting eight-bit characters,  Up: Alternate character sets

10.3 Where is an Emacs that can handle Semitic (right-to-left) alphabets?
=========================================================================

バージョン24.1以降のEmacsではアラビア語、ペルシア語、ヘブライ語のような
双方向スクリプト(bidirectional script)の表示と編集がサポートされています
。*note bidirectional display: New in Emacs 24.を参照してください。


File: efaq.info,  Node: How to add fonts,  Prev: Right-to-left alphabets,  Up: Alternate character sets

10.4 How do I add fonts for use with Emacs?
===========================================

まずBDFフォントファイル、およびそれらが必要とするすべての補助パッケージ
をダウンロードしてインストールしてください。GNU Intlfontsディストリビュ
ーションはthe GNU Software Directory Web site
(https://directory.fsf.org/localization/intlfonts.html)で見つけることが
できます。

   次にXウィンドウシステムの場合には、シェルプロンプトから以下の2つのコ
マンドを実行してください:

       xset +fp /usr/local/share/emacs/fonts
       xset fp rehash

(‘/usr/local/share/emacs/fonts’以外の場所にフォントをインストールしてい
たら1つ目のコマンドは変更が必要。) たとえば‘~/.xsessionrc’や
‘~/.gnomerc’のようなウィンドウシステムのスタートアップファイルに追加する
等、ログイン時いつでもこれら2つのコマンドが実行されるようにアレンジも必
要でしょう。

   それでは以下の行をinitファイル‘~/.emacs’に追加してください:

       (add-to-list 'bdf-directory-list "/usr/share/emacs/fonts/bdf")

(繰り返しになるが、別の場所にフォントをインストールしていたらファイル名
は変更すること。)

   最後に‘ps-print’でインストール済みフォントを使用したければ、以下の行
を‘~/.emacs’に追加してください:

       (setq ps-multibyte-buffer 'bdf-font-except-latin)

   MS-Windowsでは追加でいくつかのステップが必要です。以下にリストします
。

   まずBDFフォントファイルがある_すべて_のディレクトリーが
‘bdf-directory-list’に記述されていることを確認してください。Unixおよび
GNU/Linuxシステムでは同一ディレクトリーにBDFフォントをインストールするた
めに‘make install’を実行します。それとは対照的にWindowsユーザーは通常は
Intlfontsインストールコマンドは実行せずに、どこかのディレクトリーにディ
ストリビューションを解凍してください。このディレクトリーにはBDFフォント
があるサブディレクトリーが含まれています。たとえば‘C:/Intlfonts’に
Intlfontsを解凍したとすると、以下のように‘bdf-directory-list’をセットす
る必要があります:

       (setq bdf-directory-list
         '("C:/Intlfonts/Asian"
           "C:/Intlfonts/Chinese" "C:/Intlfonts/Chinese.X"
           "C:/Intlfonts/Chinese.BIG" "C:/Intlfonts/Ethiopic"
           "C:/Intlfonts/European" "C:/Intlfonts/European.BIG"
           "C:/Intlfonts/Japanese" "C:/Intlfonts/Japanese.X"
           "C:/Intlfonts/Japanese.BIG" "C:/Intlfonts/Korean.X"
           "C:/Intlfonts/Misc"))

   次は変数‘w32-bdf-filename-alist’にBDFフォントのエイリアスとそれらに応
じたファイル名をセットする必要があります。BDFフォントファイルのすべての
ディレクトリーを‘bdf-directory-list’にセットしたとすると、以下のLispコー
ドで‘w32-bdf-filename-alist’がセットアップされるはずです:

       (setq w32-bdf-filename-alist
          (w32-find-bdf-fonts bdf-directory-list))

   今度はBDFフォント用にフォントセットを作成します:

       (create-fontset-from-fontset-spec
        "-*-fixed-medium-r-normal-*-16-*-*-*-c-*-fontset-bdf,
        japanese-jisx0208:-*-*-medium-r-normal-*-16-*-*-*-c-*-jisx0208.1983-*,
        katakana-jisx0201:-*-*-medium-r-normal-*-16-*-*-*-c-*-jisx0201*-*,
        latin-jisx0201:-*-*-medium-r-normal-*-16-*-*-*-c-*-jisx0201*-*,
        japanese-jisx0208-1978:-*-*-medium-r-normal-*-16-*-*-*-c-*-jisx0208.1978-*,
        thai-tis620:-misc-fixed-medium-r-normal--16-160-72-72-m-80-tis620.2529-1,
        lao:-misc-fixed-medium-r-normal--16-160-72-72-m-80-MuleLao-1,
        tibetan-1-column:-TibMdXA-fixed-medium-r-normal--16-160-72-72-m-80-MuleTibetan-1,
        ethiopic:-Admas-Ethiomx16f-Medium-R-Normal--16-150-100-100-M-160-Ethiopic-Unicode,
        tibetan:-TibMdXA-fixed-medium-r-normal--16-160-72-72-m-160-MuleTibetan-0")

   Intlfontsの国際化BDFフォントの多くはタイプ0なので、
font-encoding-alistに追加する必要があります:

       (setq font-encoding-alist
             (append '(("MuleTibetan-0" (tibetan . 0))
                       ("GB2312"        (chinese-gb2312 . 0))
                       ("JISX0208"      (japanese-jisx0208 . 0))
                       ("JISX0212"      (japanese-jisx0212 . 0))
                       ("VISCII"        (vietnamese-viscii-lower . 0))
                       ("KSC5601"       (korean-ksc5601 . 0))
                       ("MuleArabic-0"  (arabic-digit . 0))
                       ("MuleArabic-1"  (arabic-1-column . 0))
                       ("MuleArabic-2"  (arabic-2-column . 0)))
                     font-encoding-alist))

   これでEmacsのフォントメニュー、あるいは‘~/.emacs’でデフォルトフォント
を設定することにより、‘bdf: 16-dot medium’の選択ができるようになりました
。

       (set-frame-font "fontset-bdf")


File: efaq.info,  Node: Mail and news,  Next: Concept index,  Prev: Alternate character sets,  Up: Top

11 Mail and news
****************

* Menu:

* Changing the included text prefix::
* Saving a copy of outgoing mail::
* Expanding aliases when sending mail::
* Sorting the messages in an Rmail folder::
* Rmail writes to /var/spool/mail::
* Replying to the sender of a message::
* Automatically starting a mail or news reader::
* Reading news with Emacs::
* Making Gnus faster::
* Catching up in all newsgroups::


File: efaq.info,  Node: Changing the included text prefix,  Next: Saving a copy of outgoing mail,  Up: Mail and news

11.1 How do I change the included text prefix in mail/news followups?
=====================================================================

メールをRmailで読んでいる場合には変数‘mail-yank-prefix’、Gnusなら
‘message-yank-prefix’、VMなら‘vm-included-text-prefix’、mh-eなら
‘mh-ins-buf-prefix’をセットしてください。

   より装飾的に引用を制御するにはSupercite(*note the Supercite Manual:
(sc)Top.を参照)を使用してください。

   Emacsが返信先メッセージの様々なヘッダーを含めないようにするには、
‘mail-yank-ignored-headers’の値に適切な正規表現をセットしてください。


File: efaq.info,  Node: Saving a copy of outgoing mail,  Next: Expanding aliases when sending mail,  Prev: Changing the included text prefix,  Up: Mail and news

11.2 How do I save a copy of outgoing mail?
===========================================

メールメッセージの‘BCC’ヘッダーに自分を含めて自分にコピーをメールしたり
、あるいは‘FCC’ヘッダーにファイルを含めてメッセージのコピーを直接保存で
きます。

   標準的なメールを使用しているなら、以下を‘.emacs’ファイル記述して自分
への‘BCC’を自動的に作成できます。

     (setq mail-self-blind t)

以下のような行を‘.emacs’ファイルに記述すれば、自動的に‘FCC’フィールドを
含めることができます:

     (setq mail-archive-file-name (expand-file-name "~/outgoing"))

   出力ファイルは Unixのメール形式になります。

   ‘mh-e’を使用しているなら‘FCC’と‘BCC’のフィールドをコンポーネントファ
イルに加えてください。

   ‘.mailrc’に‘set record filename’を記述しても機能しません。


File: efaq.info,  Node: Expanding aliases when sending mail,  Next: Sorting the messages in an Rmail folder,  Prev: Saving a copy of outgoing mail,  Up: Mail and news

11.3 Why doesn’t Emacs expand my aliases when sending mail?
===========================================================

*note The Emacs Manual: (emacs)Mail Aliases.を参照してください。

   • Emacsは通常はメール送信の際にエイリアスを展開する。送信前に展開する
     には‘M-x expand-mail-aliases’を使用する。

   • Emacsは通常はセッションごとに1回、最初のメールメッセージを作成する
     ときしか‘.mailrc’ファイルを読み込まない。その後にファイルを編集した
     ら‘M-x build-mail-aliases’を使用してEmacsに再読み込みさせることがで
     きる。これはEmacs 24.1以前は対話的なコマンドではないので、かわりに
     ‘M-: (build-mail-aliases) <RET>’とタイプしなければならない。

   • もしも望むならabbrevとしてタイプすればすぐにメールエイリアスを展開
     できる。この機能を有効にするには以下を実行する:

          (add-hook 'mail-mode-hook 'mail-abbrevs-setup)

     エイリアスは単語区切り文字(<RET>や‘,’)をタイプした後でのみ自動的に
     展開される。エイリアス終端にポイントを移動して‘C-x a e’ (‘M-x
     expand-abbrev’)をタイプして強制的に展開させることができる。


File: efaq.info,  Node: Sorting the messages in an Rmail folder,  Next: Rmail writes to /var/spool/mail,  Prev: Expanding aliases when sending mail,  Up: Mail and news

11.4 How can I sort the messages in my Rmail folder?
====================================================

Rmailでソート関数とそれらのキーバインディングのリストを得るには‘C-c C-s
C-h’とタイプします。


File: efaq.info,  Node: Rmail writes to /var/spool/mail,  Next: Replying to the sender of a message,  Prev: Sorting the messages in an Rmail folder,  Up: Mail and news

11.5 Why does Rmail need to write to ‘/var/spool/mail’?
=======================================================

これはRmailが使用する‘movemail’プログラムの振る舞いです。これは
‘movemail’がロックファイルを使うように設定されていることを示しています。

   RMSは記しています:

     特定のシステムではメールファイルへのアクセスをインターロックするた
     めにロックファイルが必要です。これらのシステムでは‘movemail’はロッ
     クファイルに書き込まなければなりません。さもないとメールを失うリス
     クがあるからです。あなたはただ‘movemail’にロックファイルを書き込ま
     せるようアレンジしなければなりません。

     他のシステムではインターロックアクセスのために‘flock’システムコール
     を使用します。これらのシステムでは‘flock’を使用するように
     ‘movemail’を設定するべきです。


File: efaq.info,  Node: Replying to the sender of a message,  Next: Automatically starting a mail or news reader,  Prev: Rmail writes to /var/spool/mail,  Up: Mail and news

11.6 How can I force Rmail to reply to the sender of a message, but not the other recipients?
=============================================================================================

Ron Isaacsonは述べています: Rmailで返信するために‘r’をタイプすると、デフ
ォルトでは元の受信者すべて(元の‘To’と‘CC’のリスト全員)にCCされます。
(‘r’の前に‘C-u’をタイプして)プレフィクス引数を指定すると、送信者だけに返
信します。とはいえ返信したいときに全体を通して‘C-u’作業を行うのは苦痛で
す。以下はわたしがこれに対処した中では最良の修整です。

     (defun rmail-reply-t ()
       "カレントメッセージの送信者だけに返信する(rmail-replyを参照)"
       (interactive)
       (rmail-reply t))

     (add-hook 'rmail-mode-hook
       (lambda ()
         (define-key rmail-mode-map "r" 'rmail-reply-t)
         (define-key rmail-mode-map "R" 'rmail-reply)))


File: efaq.info,  Node: Automatically starting a mail or news reader,  Next: Reading news with Emacs,  Prev: Replying to the sender of a message,  Up: Mail and news

11.7 How do I make Emacs automatically start my mail/news reader?
=================================================================

EmacsをGnusで開始するには:

     emacs -f gnus

Rmailでは:

     emacs -f rmail

   Gnusでより便利に開始するには:

     alias gnus 'emacs -f gnus'
     gnus

   ‘.emacs’ファイルから自動的にメールやニュースを開始するのは、恐らく賢
明ではないでしょう。これは同時に2つのEmacsを実行する必要がある場合には問
題を起こすかもしれません。更に必要な際に素早くEmacsを開始するのが困難に
なるかもしれません。


File: efaq.info,  Node: Reading news with Emacs,  Next: Making Gnus faster,  Prev: Automatically starting a mail or news reader,  Up: Mail and news

11.8 How do I read news under Emacs?
====================================

‘M-x gnus’を使用します。*note the Gnus FAQ: (gnus)Frequently Asked
Questions.に含まれている*note the Gnus Manual: (gnus)Top.を参照してくだ
さい。


File: efaq.info,  Node: Making Gnus faster,  Next: Catching up in all newsgroups,  Prev: Reading news with Emacs,  Up: Mail and news

11.9 How do I make Gnus faster?
===============================

Gnus FAQ(*note Reading news with Emacs::を参照)から引用します:

     古いマシンの場合、あるいは実際にじれったいだけなら、Gnusの実行を高
     速にするためにできることがあります。

     起動をより高速にするためには‘gnus-check-new-newsgroups’と
     ‘gnus-check-bogus-newsgroups’に‘nil’をセットしてください。

     summaryバッファーへの出入りをより高速にするために
     ‘gnus-show-threads’、‘gnus-nov-is-evil’、
     ‘gnus-use-cross-reference’に‘nil’をセットしてください。


File: efaq.info,  Node: Catching up in all newsgroups,  Prev: Making Gnus faster,  Up: Mail and news

11.10 How do I catch up all newsgroups in Gnus?
===============================================

‘*Newsgroup*’バッファーで‘M-< C-x ( c y C-x ) M-0 C-x e’とタイプします。

   ‘*Newsgroup*’バッファーのポイント位置からバッファー終端までを確認した
いだけなら、先頭の‘M-<’は省略してください。


File: efaq.info,  Node: Concept index,  Prev: Mail and news,  Up: Top

Concept Index
*************

 [index ]
* Menu:

* #ifdef, selective display of:          Hiding #ifdef lines.  (line  6)
* $ in file names:                       Editing files with $ in the name.
                                                               (line  6)
* -debug-init option:                    Debugging a customization file.
                                                               (line  6)
* ., equivalent to vi command:           Repeating commands.   (line  6)
* .emacs debugging:                      Debugging a customization file.
                                                               (line  6)
* .emacs file, errors in:                Errors with init files.
                                                               (line  6)
* .emacs file, locating:                 Setting up a customization file.
                                                               (line  6)
* .emacs file, setting up:               Setting up a customization file.
                                                               (line  6)
* .Xdefaults:                            Emacs ignores X resources.
                                                               (line  6)
* /var/spool/mail and Rmail:             Rmail writes to /var/spool/mail.
                                                               (line  6)
* 24-bit direct color mode:              Colors on a TTY.      (line 43)
* Abbrevs, turning on by default:        Turning on abbrevs by default.
                                                               (line  6)
* Acronyms, definitions for:             Common acronyms.      (line  6)
* add fonts for use with Emacs:          How to add fonts.     (line  6)
* Adding to load-path:                   Changing load-path.   (line  6)
* Alternate character sets:              Alternate character sets.
                                                               (line  6)
* Alternative Info file viewers:         Viewing Info files outside of Emacs.
                                                               (line  6)
* Anti-aliased fonts:                    New in Emacs 23.      (line  6)
* Antivirus programs, and Shell Mode:    Problems with Shell Mode.
                                                               (line 11)
* Apple computers, Emacs for:            Emacs for macOS.      (line  6)
* Apropos:                               Learning how to do something.
                                                               (line 20)
* Arabic:                                Right-to-left alphabets.
                                                               (line  6)
* Archived postings from gnu.emacs.help: Newsgroup archives.   (line  6)
* Arrow keys, symbols generated by:      Working with function and arrow keys.
                                                               (line  6)
* Aspell:                                Spell-checkers.       (line  6)
* Associating modes with files:          Associating modes with files.
                                                               (line  6)
* auto-fill-mode, activating automatically: Turning on auto-fill by default.
                                                               (line  6)
* auto-fill-mode, introduction to:       Wrapping words automatically.
                                                               (line  6)
* auto-mode-alist, modifying:            Associating modes with files.
                                                               (line  6)
* Auto-saving:                           Disabling auto-save-mode.
                                                               (line  6)
* automatic display of Lisp APIs:        New in Emacs 25.      (line 17)
* Automatic entry to auto-fill-mode:     Turning on auto-fill by default.
                                                               (line  6)
* Automatic filing of outgoing mail:     Saving a copy of outgoing mail.
                                                               (line  6)
* <Backspace> key invokes help:          Backspace invokes help.
                                                               (line  6)
* Backup files in a single directory:    Disabling backups.    (line 36)
* Backups, disabling:                    Disabling backups.    (line  6)
* Basic editing with Emacs:              Basic editing.        (line  6)
* Basic keys:                            Basic keys.           (line  6)
* Bazaar repository, Emacs:              Latest version of Emacs.
                                                               (line  6)
* Beeping, turning off:                  Turning off beeping.  (line  6)
* Beginning editing:                     Basic editing.        (line  6)
* Bell, visible:                         Turning off beeping.  (line  6)
* Bell, volume of:                       Turning the volume down.
                                                               (line  6)
* bidirectional display:                 New in Emacs 24.      (line 20)
* bidirectional editing:                 New in Emacs 25.      (line 28)
* bidirectional scripts:                 Right-to-left alphabets.
                                                               (line  6)
* bignum support:                        New in Emacs 27.      (line  6)
* Binding keys to commands:              Binding keys to commands.
                                                               (line  6)
* Binding modifiers and function keys:   Binding combinations of modifiers and function keys.
                                                               (line  6)
* bracketed paste mode:                  New in Emacs 25.      (line 21)
* Bug reporting:                         Reporting bugs.       (line  6)
* Bugs and problems:                     Bugs and problems.    (line  6)
* Building Emacs from source:            Installing Emacs.     (line  6)
* C-h, definition of:                    Basic keys.           (line  6)
* C-M-h, definition of:                  Basic keys.           (line  6)
* Case sensitivity in replacements:      Controlling case sensitivity.
                                                               (line 12)
* Case sensitivity of searches:          Controlling case sensitivity.
                                                               (line  6)
* case-fold-search:                      Controlling case sensitivity.
                                                               (line  6)
* case-replace:                          Controlling case sensitivity.
                                                               (line 12)
* Catching up all newsgroups in Gnus:    Catching up in all newsgroups.
                                                               (line  6)
* character folding in searches:         New in Emacs 25.      (line 31)
* Character sets:                        New in Emacs 23.      (line 11)
* Checking spelling:                     Spell-checkers.       (line  6)
* Colorizing text:                       Turning on syntax highlighting.
                                                               (line  6)
* Colors on a TTY:                       Colors on a TTY.      (line  6)
* Colors on text-only terminals:         New in Emacs 21.      (line 14)
* Column, displaying the current:        Displaying the current line or column.
                                                               (line  6)
* Command description in the manual:     Learning how to do something.
                                                               (line 23)
* Commands, binding keys to:             Binding keys to commands.
                                                               (line  6)
* Commands, extended:                    Extended commands.    (line  6)
* Commands, repeating many times:        Repeating commands.   (line  6)
* Common acronyms, definitions for:      Common acronyms.      (line  6)
* Common requests:                       Common requests.      (line  6)
* Compilation error messages:            Going to a line by number.
                                                               (line  6)
* Compiler error messages, recognizing:  Compiler error messages.
                                                               (line  6)
* Compiling and installing Emacs:        Compiling and installing Emacs.
                                                               (line  6)
* Compiling Emacs for DOS:               Emacs for MS-DOS.     (line  6)
* <Compose Character> key, using as <Meta>: Compose Character. (line  6)
* Console, colors:                       Colors on a TTY.      (line  6)
* Contracting the FSF:                   Contacting the FSF.   (line  6)
* Control characters, generating:        Producing C-XXX with the keyboard.
                                                               (line  6)
* Control characters, working with:      Working with unprintable characters.
                                                               (line  6)
* Control key, notation for:             Basic keys.           (line  6)
* Control-Meta characters, notation for: Basic keys.           (line  6)
* Conventions for file names:            File-name conventions.
                                                               (line  6)
* Copying outgoing mail to a file:       Saving a copy of outgoing mail.
                                                               (line  6)
* COPYING, description of file:          Informational files for Emacs.
                                                               (line  6)
* Copyleft, real meaning of:             Real meaning of copyleft.
                                                               (line  6)
* Creating new menu options:             Modifying pull-down menus.
                                                               (line  6)
* Crosspostings make Gnus catching up slow: Making Gnus faster.
                                                               (line  6)
* Current directory and shell-mode:      Shell mode loses the current directory.
                                                               (line  6)
* Current GNU distributions:             Current GNU distributions.
                                                               (line  6)
* Customization file, setting up:        Setting up a customization file.
                                                               (line  6)
* Customize groups:                      Using Customize.      (line  6)
* Customize indentation:                 Customizing C and C++ indentation.
                                                               (line  6)
* Customizing faces:                     Using Customize.      (line  6)
* Customizing variables:                 Using Customize.      (line  6)
* Daemon mode:                           New in Emacs 23.      (line 17)
* Debugging .emacs file:                 Debugging a customization file.
                                                               (line  6)
* Debugging .emacs file <1>:             Errors with init files.
                                                               (line  6)
* Decoration level, in font-lock-mode:   Turning on syntax highlighting.
                                                               (line 36)
* <DEL> key does not delete:             Backspace invokes help.
                                                               (line  6)
* <DEL>, definition of:                  Basic keys.           (line  6)
* delete-selection-mode:                 Replacing highlighted text.
                                                               (line  6)
* Deleting menus and menu options:       Deleting menus and menu options.
                                                               (line  6)
* Development, Emacs:                    Latest version of Emacs.
                                                               (line  6)
* Difference Emacs and XEmacs:           Difference between Emacs and XEmacs.
                                                               (line  6)
* Differences between Emacs 19 and Emacs 20: New in Emacs 20.  (line  6)
* Differences between Emacs 20 and Emacs 21: New in Emacs 21.  (line  6)
* Differences between Emacs 21 and Emacs 22: New in Emacs 22.  (line  6)
* Differences between Emacs 22 and Emacs 23: New in Emacs 23.  (line  6)
* Differences between Emacs 23 and Emacs 24: New in Emacs 24.  (line  6)
* Differences between Emacs 24 and Emacs 25: New in Emacs 25.  (line  6)
* Differences between Emacs 25 and Emacs 26: New in Emacs 26.  (line  6)
* Differences between Emacs 26 and Emacs 27: New in Emacs 27.  (line  6)
* Differences between Unix and Emacs regexps: Using regular expressions.
                                                               (line  6)
* direct color in terminals:             Colors on a TTY.      (line 20)
* Directories and files that come with Emacs: File-name conventions.
                                                               (line  6)
* Directory, current in shell-mode:      Shell mode loses the current directory.
                                                               (line  6)
* Directory-local variables:             New in Emacs 23.      (line 23)
* Dired does not see a file:             Dired claims that no file is on this line.
                                                               (line  6)
* Disabling auto-save-mode:              Disabling auto-save-mode.
                                                               (line  6)
* Disabling backups:                     Disabling backups.    (line  6)
* Discussion of the GPL:                 Real meaning of copyleft.
                                                               (line  6)
* Displaying eight-bit characters:       Emacs does not display 8-bit characters.
                                                               (line  6)
* Displaying the current line or column: Displaying the current line or column.
                                                               (line  6)
* DISTRIB, description of file:          Informational files for Emacs.
                                                               (line  6)
* <Do> key:                              Extended commands.    (line 16)
* Documentation:                         New in Emacs 22.      (line 66)
* Documentation for etags:               Documentation for etags.
                                                               (line  6)
* Documentation on Emacs Lisp:           Emacs Lisp documentation.
                                                               (line  6)
* Documentation, installing new Texinfo files: Installing Texinfo documentation.
                                                               (line  6)
* DOS, Emacs for:                        Emacs for MS-DOS.     (line  6)
* double-buffering:                      New in Emacs 26.      (line 16)
* Downloading and installing Emacs:      Installing Emacs.     (line  6)
* Downloading Emacs:                     Finding Emacs on the Internet.
                                                               (line  6)
* Drag-and-drop:                         New in Emacs 22.      (line  6)
* early init file:                       New in Emacs 27.      (line 28)
* Echoed commands in shell-mode:         ^M in the shell buffer.
                                                               (line  6)
* Editing files with $ in the name:      Editing files with $ in the name.
                                                               (line  6)
* Editing MS-DOS files:                  Editing MS-DOS files. (line  6)
* Eight-bit characters, displaying:      Emacs does not display 8-bit characters.
                                                               (line  6)
* Eight-bit characters, entering:        Inputting eight-bit characters.
                                                               (line  6)
* Eight-bit characters, working with:    Working with unprintable characters.
                                                               (line  6)
* Emacs 20, new features in:             New in Emacs 20.      (line  6)
* Emacs 21, new features in:             New in Emacs 21.      (line  6)
* Emacs 22, new features in:             New in Emacs 22.      (line  6)
* Emacs 23, new features in:             New in Emacs 23.      (line  6)
* Emacs 24, new features in:             New in Emacs 24.      (line  6)
* Emacs 25, new features in:             New in Emacs 25.      (line  6)
* Emacs 26, new features in:             New in Emacs 26.      (line  6)
* Emacs 27, new features in:             New in Emacs 27.      (line  6)
* Emacs entries for termcap/terminfo:    Termcap/Terminfo entries for Emacs.
                                                               (line  6)
* Emacs for MS-DOS:                      Emacs for MS-DOS.     (line  6)
* Emacs for MS-Windows:                  Emacs for MS-Windows. (line  6)
* Emacs Lisp Archive:                    Packages that do not come with Emacs.
                                                               (line  6)
* Emacs Lisp List:                       Packages that do not come with Emacs.
                                                               (line  6)
* Emacs Lisp Manual:                     New in Emacs 22.      (line 66)
* Emacs Lisp Reference Manual:           Emacs Lisp documentation.
                                                               (line  6)
* Emacs manual, obtaining a printed or HTML copy of: Getting a printed manual.
                                                               (line  6)
* Emacs manual, reading topics in:       Emacs manual.         (line  6)
* Emacs name origin:                     Origin of the term Emacs.
                                                               (line  6)
* Emacs server functions:                Using an already running Emacs process.
                                                               (line  6)
* emacsclient:                           Using an already running Emacs process.
                                                               (line  6)
* Enchant:                               Spell-checkers.       (line  6)
* Enchant support:                       New in Emacs 26.      (line 35)
* Entering eight-bit characters:         Inputting eight-bit characters.
                                                               (line  6)
* Epoch:                                 Difference between Emacs and XEmacs.
                                                               (line  6)
* Error in .emacs:                       Errors with init files.
                                                               (line  6)
* Error in init file:                    Errors with init files.
                                                               (line  6)
* Errors when building Emacs:            Problems building Emacs.
                                                               (line  6)
* Errors, recognizing compiler:          Compiler error messages.
                                                               (line  6)
* <ESC>, definition of:                  Basic keys.           (line  6)
* Escape key, lacking:                   No Escape key.        (line  6)
* Escape sequences in ls output:         Escape sequences in shell output.
                                                               (line  6)
* etags, documentation for:              Documentation for etags.
                                                               (line  6)
* Evaluating Lisp code:                  Evaluating Emacs Lisp code.
                                                               (line  6)
* eww:                                   New in Emacs 25.      (line 37)
* Expanding aliases when sending mail:   Expanding aliases when sending mail.
                                                               (line  6)
* explicit-shell-file-name:              Problems with Shell Mode.
                                                               (line  6)
* <ExtendChar> key as <Meta>:            ExtendChar key does not work as Meta.
                                                               (line  6)
* Extended commands:                     Extended commands.    (line  6)
* FAQ for Emacs on MS-Windows:           Emacs for MS-Windows. (line  6)
* FAQ for Gnus:                          Reading news with Emacs.
                                                               (line  6)
* FAQ notation:                          FAQ notation.         (line  6)
* FAQ, font-lock-mode:                   Turning on syntax highlighting.
                                                               (line  6)
* FAQ, obtaining the:                    Obtaining the FAQ.    (line  6)
* Farsi:                                 Right-to-left alphabets.
                                                               (line  6)
* Faster, starting Gnus:                 Making Gnus faster.   (line  6)
* File extensions and modes:             Associating modes with files.
                                                               (line  6)
* File name, displaying in the titlebar: Displaying the current file name in the titlebar.
                                                               (line  6)
* File names containing $, editing:      Editing files with $ in the name.
                                                               (line  6)
* file-local-variable and security:      Security risks with Emacs.
                                                               (line  6)
* File-name conventions:                 File-name conventions.
                                                               (line  6)
* Files included with Emacs:             Informational files for Emacs.
                                                               (line  6)
* Files, maximum size:                   Problems with very large files.
                                                               (line  6)
* Files, replacing strings across multiple: Replacing text across multiple files.
                                                               (line  6)
* Filing outgoing mail:                  Saving a copy of outgoing mail.
                                                               (line  6)
* Fill prefix:                           Automatic indentation.
                                                               (line 13)
* fill-column, default value:            Wrapping words automatically.
                                                               (line  6)
* Filling automatically:                 Turning on auto-fill by default.
                                                               (line  6)
* Finding an Emacs Lisp package:         Finding a package with particular functionality.
                                                               (line  6)
* Finding commands and variables:        Learning how to do something.
                                                               (line 27)
* Finding current GNU software:          Current GNU distributions.
                                                               (line  6)
* Finding Emacs and related packages:    Finding Emacs and related packages.
                                                               (line  6)
* Finding Emacs on the Internet:         Finding Emacs on the Internet.
                                                               (line  6)
* Finding other packages:                Packages that do not come with Emacs.
                                                               (line  6)
* Finding topics in the Emacs manual:    Emacs manual.         (line  6)
* Folder, sorting messages in an Rmail:  Sorting the messages in an Rmail folder.
                                                               (line  6)
* font-lock-mode:                        Turning on syntax highlighting.
                                                               (line  6)
* Frame parameters:                      Emacs ignores frame parameters.
                                                               (line  6)
* frame-title-format:                    Displaying the current file name in the titlebar.
                                                               (line  6)
* Free Software Foundation, contacting:  Contacting the FSF.   (line  6)
* Freetype fonts:                        New in Emacs 23.      (line  6)
* FSF, definition of:                    Common acronyms.      (line  6)
* Fullscreen mode:                       Fullscreen mode on MS-Windows.
                                                               (line  6)
* Function documentation:                Emacs Lisp documentation.
                                                               (line  6)
* Function keys and modifiers:           Binding combinations of modifiers and function keys.
                                                               (line  6)
* Function keys, symbols generated by:   Working with function and arrow keys.
                                                               (line  6)
* Functionality, finding a particular package: Finding a package with particular functionality.
                                                               (line  6)
* General Public License, real meaning of: Real meaning of copyleft.
                                                               (line  6)
* General questions:                     General questions.    (line  6)
* Generating control characters:         Producing C-XXX with the keyboard.
                                                               (line  6)
* Getting help:                          Getting help.         (line  6)
* GNU mailing lists:                     Guidelines for newsgroup postings.
                                                               (line  6)
* GNU newsgroups, appropriate messages for: Guidelines for newsgroup postings.
                                                               (line  6)
* GNU, definition of:                    Common acronyms.      (line  6)
* Gnus FAQ:                              Reading news with Emacs.
                                                               (line  6)
* Gnus is slow when catching up:         Making Gnus faster.   (line  6)
* Gnus newsreader:                       Reading news with Emacs.
                                                               (line  6)
* Gnus, Catching up all newsgroups in:   Catching up in all newsgroups.
                                                               (line  6)
* Gnus, starting faster:                 Making Gnus faster.   (line  6)
* GNUstep port:                          New in Emacs 23.      (line 19)
* GNUstep, Emacs for:                    Emacs for GNUstep.    (line  6)
* Going to a line by number:             Going to a line by number.
                                                               (line  6)
* Good bug reports:                      Reporting bugs.       (line  6)
* GPL, definition of:                    Common acronyms.      (line  6)
* GPL, real meaning of:                  Real meaning of copyleft.
                                                               (line  6)
* GTK+ Toolkit:                          New in Emacs 22.      (line  6)
* HarfBuzz:                              New in Emacs 27.      (line 13)
* Hebrew, handling with Emacs:           Right-to-left alphabets.
                                                               (line  6)
* Help for Emacs:                        Learning how to do something.
                                                               (line  6)
* Help installing Emacs:                 Help installing Emacs.
                                                               (line  6)
* Help invoked by <Backspace>:           Backspace invokes help.
                                                               (line  6)
* Help system, entering the:             Basic editing.        (line  6)
* hide-ifdef, C/C++ expressions in macros: New in Emacs 25.    (line 47)
* hide-ifdef-mode:                       Hiding #ifdef lines.  (line  6)
* Hiding #ifdef text:                    Hiding #ifdef lines.  (line  6)
* Highlighting and replacing text:       Replacing highlighted text.
                                                               (line  6)
* Highlighting based on syntax:          Turning on syntax highlighting.
                                                               (line  6)
* Highlighting matching parentheses:     Matching parentheses. (line  6)
* horizontal scroll bars:                New in Emacs 25.      (line 62)
* horizontal scrolling of current line:  New in Emacs 26.      (line 27)
* How to submit a bug report:            Reporting bugs.       (line  6)
* HP-UX, the <ExtendChar> key:           ExtendChar key does not work as Meta.
                                                               (line  6)
* Hunspell:                              Spell-checkers.       (line  6)
* Iconification under the X Window System: Forcing Emacs to iconify itself.
                                                               (line  6)
* Ignored X resources:                   Emacs ignores X resources.
                                                               (line  6)
* Ignoring case in searches:             Controlling case sensitivity.
                                                               (line  6)
* Included text prefix, changing:        Changing the included text prefix.
                                                               (line  6)
* Indentation, how to customize:         Customizing C and C++ indentation.
                                                               (line  6)
* Indenting new lines:                   Automatic indentation.
                                                               (line  6)
* Indenting of switch:                   Indenting switch statements.
                                                               (line  6)
* Index search in a manual:              Learning how to do something.
                                                               (line 13)
* Info file viewers:                     Viewing Info files outside of Emacs.
                                                               (line  6)
* Info files, how to install:            Installing Texinfo documentation.
                                                               (line  6)
* Info, finding topics in:               Emacs manual.         (line  6)
* Informational files included with Emacs: Informational files for Emacs.
                                                               (line  6)
* Init file debugging:                   Debugging a customization file.
                                                               (line  6)
* Init file, errors in:                  Errors with init files.
                                                               (line  6)
* Init file, setting up:                 Setting up a customization file.
                                                               (line  6)
* Input, 8-bit characters:               Inputting eight-bit characters.
                                                               (line  6)
* <Insert>:                              Overwrite mode.       (line  6)
* Installation help:                     Help installing Emacs.
                                                               (line  6)
* Installing Emacs:                      Installing Emacs.     (line  6)
* Installing Texinfo documentation:      Installing Texinfo documentation.
                                                               (line  6)
* intlfonts:                             How to add fonts.     (line  6)
* Invalid prefix characters:             Invalid prefix characters.
                                                               (line  6)
* isearch yanking:                       Yanking text in isearch.
                                                               (line  6)
* Ispell:                                Spell-checkers.       (line  6)
* JSON, native parsing:                  New in Emacs 27.      (line 16)
* Just-In-Time syntax highlighting:      Turning on syntax highlighting.
                                                               (line 27)
* Key bindings:                          Key bindings.         (line  6)
* Key translations under X:              X key translations for Emacs.
                                                               (line  6)
* keyboard-translate:                    Swapping keys.        (line  6)
* Keymaps and menus:                     Modifying pull-down menus.
                                                               (line  6)
* Keys, binding to commands:             Binding keys to commands.
                                                               (line  6)
* Keys, swapping:                        Swapping keys.        (line  6)
* Lacking an Escape key:                 No Escape key.        (line  6)
* Large files, opening:                  Problems with very large files.
                                                               (line  6)
* Latest FAQ version, obtaining the:     Obtaining the FAQ.    (line  6)
* Latest version of Emacs:               Latest version of Emacs.
                                                               (line  6)
* Learning more about Gnus:              Reading news with Emacs.
                                                               (line  6)
* Learning to do something in Emacs:     Learning how to do something.
                                                               (line  6)
* Length of tab character:               Changing the length of a Tab.
                                                               (line  6)
* Levels of syntax highlighting:         Turning on syntax highlighting.
                                                               (line 36)
* lexical binding:                       New in Emacs 24.      (line 10)
* <LFD>, definition of:                  Basic keys.           (line  6)
* line number display:                   New in Emacs 26.      (line 22)
* Line number, displaying the current:   Displaying the current line or column.
                                                               (line  6)
* Line wrap:                             Wrapping words automatically.
                                                               (line  6)
* line-number-mode:                      Displaying the current line or column.
                                                               (line  6)
* Lisp forms, evaluating:                Evaluating Emacs Lisp code.
                                                               (line  6)
* Lisp packages that do not come with Emacs: Packages that do not come with Emacs.
                                                               (line  6)
* load-path, modifying:                  Changing load-path.   (line  6)
* loadable modules:                      New in Emacs 25.      (line 11)
* Lookup a subject in a manual:          Learning how to do something.
                                                               (line 13)
* ls in Shell mode:                      Escape sequences in shell output.
                                                               (line  6)
* Lucid Emacs:                           Difference between Emacs and XEmacs.
                                                               (line  6)
* M-x, meaning of:                       Extended commands.    (line  6)
* MACHINES, description of file:         Informational files for Emacs.
                                                               (line  6)
* Macintosh, Emacs for:                  Emacs for macOS.      (line  6)
* macOS Cocoa:                           New in Emacs 23.      (line 19)
* macOS, Emacs for:                      Emacs for macOS.      (line  6)
* Mail alias expansion:                  Expanding aliases when sending mail.
                                                               (line  6)
* Mail and news:                         Mail and news.        (line  6)
* Mail reader, starting automatically:   Automatically starting a mail or news reader.
                                                               (line  6)
* Mail replies, inserting a prefix character: Inserting text at the beginning of each line.
                                                               (line  6)
* Mail, saving outgoing automatically:   Saving a copy of outgoing mail.
                                                               (line  6)
* mail-yank-prefix:                      Inserting text at the beginning of each line.
                                                               (line  6)
* Mailing lists, appropriate messages for: Guidelines for newsgroup postings.
                                                               (line  6)
* Major mode for shell scripts:          Associating modes with files.
                                                               (line 16)
* Manual, obtaining a printed or HTML copy of: Getting a printed manual.
                                                               (line  6)
* Matching parentheses:                  Matching parentheses. (line  6)
* Maximize frame:                        Fullscreen mode on MS-Windows.
                                                               (line  6)
* Maximum file size:                     Problems with very large files.
                                                               (line  6)
* Maximum line width, default value:     Wrapping words automatically.
                                                               (line  6)
* Menus and keymaps:                     Modifying pull-down menus.
                                                               (line  6)
* Menus, creating or modifying:          Modifying pull-down menus.
                                                               (line  6)
* Menus, deleting:                       Deleting menus and menu options.
                                                               (line  6)
* <Meta> key and xterm:                  Meta key does not work in xterm.
                                                               (line  6)
* <Meta> key, notation for:              Basic keys.           (line  6)
* <Meta> key, what to do if you lack it: No Meta key.          (line  6)
* <Meta>, using <Compose Character> for: Compose Character.    (line  6)
* <Meta>, using <ExtendChar> for:        ExtendChar key does not work as Meta.
                                                               (line  6)
* Microsoft files, editing:              Editing MS-DOS files. (line  6)
* Microsoft Windows, Emacs for:          Emacs for MS-Windows. (line  6)
* Misspecified key sequences:            Invalid prefix characters.
                                                               (line  6)
* mode-line-format:                      Displaying the current line or column.
                                                               (line  6)
* Modes, associating with file extensions: Associating modes with files.
                                                               (line  6)
* Modifiers and function keys:           Binding combinations of modifiers and function keys.
                                                               (line  6)
* Modifying load-path:                   Changing load-path.   (line  6)
* Modifying pull-down menus:             Modifying pull-down menus.
                                                               (line  6)
* Mouse wheel:                           New in Emacs 22.      (line 23)
* movemail and security:                 Security risks with Emacs.
                                                               (line  6)
* MS-DOS files, editing:                 Editing MS-DOS files. (line  6)
* MS-DOS, Emacs for:                     Emacs for MS-DOS.     (line  6)
* Multi-tty support:                     New in Emacs 23.      (line 14)
* Multilingual Environment:              New in Emacs 22.      (line 52)
* Multiple files, replacing across:      Replacing text across multiple files.
                                                               (line  6)
* New lines, indenting of:               Automatic indentation.
                                                               (line  6)
* New modes:                             New in Emacs 22.      (line 47)
* New Texinfo files, installing:         Installing Texinfo documentation.
                                                               (line  6)
* News reader, starting automatically:   Automatically starting a mail or news reader.
                                                               (line  6)
* News replies, inserting a prefix character: Inserting text at the beginning of each line.
                                                               (line  6)
* NEWS, description of file:             Informational files for Emacs.
                                                               (line  6)
* Newsgroups, appropriate messages for:  Guidelines for newsgroup postings.
                                                               (line  6)
* NeXTstep port:                         New in Emacs 23.      (line 19)
* No Escape key:                         No Escape key.        (line  6)
* No <Meta> key:                         No Meta key.          (line  6)
* Not enough disk space to install Emacs: Emacs for minimalists.
                                                               (line  6)
* Notation for keys:                     Basic keys.           (line  6)
* Official GNU software sites:           Current GNU distributions.
                                                               (line  6)
* Old Usenet postings for GNU groups:    Newsgroup archives.   (line  6)
* One space following periods:           Filling paragraphs with a single space.
                                                               (line  6)
* Opening very large files:              Problems with very large files.
                                                               (line  6)
* Ordering GNU software:                 Contacting the FSF.   (line 10)
* Origin of the term “Emacs”:            Origin of the term Emacs.
                                                               (line  6)
* Original version of Emacs:             Origin of the term Emacs.
                                                               (line  6)
* Overview of help systems:              Learning how to do something.
                                                               (line  6)
* overwrite-mode:                        Overwrite mode.       (line  6)
* Overwriting existing text:             Overwrite mode.       (line  6)
* Package, finding:                      Finding a package with particular functionality.
                                                               (line  6)
* packages, installing more:             New in Emacs 24.      (line  6)
* Packages, those that do not come with Emacs: Packages that do not come with Emacs.
                                                               (line  6)
* Pairs of parentheses, highlighting:    Matching parentheses. (line  6)
* paren.el:                              Matching parentheses. (line  6)
* Parentheses, matching:                 Matching parentheses. (line  6)
* pasting text on text terminals:        New in Emacs 25.      (line 21)
* Periods, one space following:          Filling paragraphs with a single space.
                                                               (line  6)
* picture-mode:                          Forcing the cursor to remain in the same column.
                                                               (line  6)
* portable dumper:                       New in Emacs 27.      (line 20)
* Posting messages to newsgroups:        Guidelines for newsgroup postings.
                                                               (line  6)
* Prefix character, inserting in mail/news replies: Inserting text at the beginning of each line.
                                                               (line  6)
* Prefix characters, invalid:            Invalid prefix characters.
                                                               (line  6)
* Prefix in mail/news followups, changing: Changing the included text prefix.
                                                               (line  6)
* Prefixing a region with some text:     Inserting text at the beginning of each line.
                                                               (line  6)
* Prefixing lines:                       Automatic indentation.
                                                               (line 13)
* Previous line, indenting according to: Automatic indentation.
                                                               (line  6)
* Printed Emacs manual, obtaining:       Getting a printed manual.
                                                               (line  6)
* Printing a Texinfo file:               Printing a Texinfo file.
                                                               (line  6)
* Printing documentation:                Printing a Texinfo file.
                                                               (line  6)
* Problems building Emacs:               Problems building Emacs.
                                                               (line  6)
* Producing control characters:          Producing C-XXX with the keyboard.
                                                               (line  6)
* project:                               New in Emacs 25.      (line 59)
* Pull-down menus, creating or modifying: Modifying pull-down menus.
                                                               (line  6)
* Quoting in mail messages:              Changing the included text prefix.
                                                               (line  6)
* Reading news under Emacs:              Reading news with Emacs.
                                                               (line  6)
* Reading the Emacs manual:              Learning how to do something.
                                                               (line  8)
* Reading topics in the Emacs manual:    Emacs manual.         (line  6)
* Recognizing non-standard compiler errors: Compiler error messages.
                                                               (line  6)
* Recompilation:                         Going to a line by number.
                                                               (line  6)
* Recursive search/replace operations:   Replacing text across multiple files.
                                                               (line  6)
* Reducing the increment when scrolling: Scrolling only one line.
                                                               (line  6)
* Reference card for Emacs:              Learning how to do something.
                                                               (line  6)
* Reference cards, in other languages:   Learning how to do something.
                                                               (line 36)
* Reference manual for Emacs Lisp:       Emacs Lisp documentation.
                                                               (line  6)
* Regexps:                               Using regular expressions.
                                                               (line  6)
* Regexps and unprintable characters:    Working with unprintable characters.
                                                               (line  6)
* Regexps for recognizing compiler errors: Compiler error messages.
                                                               (line  6)
* Regular expressions:                   Using regular expressions.
                                                               (line  6)
* Remaining in the same column, regardless of contents: Forcing the cursor to remain in the same column.
                                                               (line  6)
* Removing yourself from GNU mailing lists: Unsubscribing from Emacs lists.
                                                               (line  6)
* Repeating commands many times:         Repeating commands.   (line  6)
* Replacing highlighted text:            Replacing highlighted text.
                                                               (line  6)
* Replacing newlines:                    Searching for/replacing newlines.
                                                               (line  6)
* Replacing strings across files:        Replacing text across multiple files.
                                                               (line  6)
* Replacing, and case sensitivity:       Controlling case sensitivity.
                                                               (line 12)
* Replies to mail/news, inserting a prefix character: Inserting text at the beginning of each line.
                                                               (line  6)
* Replying only to the sender of a message: Replying to the sender of a message.
                                                               (line  6)
* Reporting bugs:                        Reporting bugs.       (line  6)
* Repository, Emacs:                     Latest version of Emacs.
                                                               (line  6)
* Resources, X:                          Valid X resources.    (line  6)
* <RET>, definition of:                  Basic keys.           (line  6)
* Richard Stallman, acronym for:         Common acronyms.      (line  6)
* Right-to-left alphabets:               Right-to-left alphabets.
                                                               (line  6)
* right-to-left languages:               New in Emacs 24.      (line 20)
* Rmail and /var/spool/mail:             Rmail writes to /var/spool/mail.
                                                               (line  6)
* rmail, and HTML mails:                 New in Emacs 25.      (line 40)
* Rmail, replying to the sender of a message in: Replying to the sender of a message.
                                                               (line  6)
* Rmail, sorting messages in:            Sorting the messages in an Rmail folder.
                                                               (line  6)
* RMS, definition of:                    Common acronyms.      (line  6)
* Saving a copy of outgoing mail:        Saving a copy of outgoing mail.
                                                               (line  6)
* Saving at frequent intervals:          Disabling auto-save-mode.
                                                               (line  6)
* Scrolling only one line:               Scrolling only one line.
                                                               (line  6)
* Searching for newlines:                Searching for/replacing newlines.
                                                               (line  6)
* Searching for unprintable characters:  Working with unprintable characters.
                                                               (line  6)
* Searching without case sensitivity:    Controlling case sensitivity.
                                                               (line  6)
* Security with Emacs:                   Security risks with Emacs.
                                                               (line  6)
* Selectively displaying #ifdef code:    Hiding #ifdef lines.  (line  6)
* Self-paced tutorial, invoking the:     Basic editing.        (line  6)
* Semitic alphabets:                     Right-to-left alphabets.
                                                               (line  6)
* Sender, replying only to:              Replying to the sender of a message.
                                                               (line  6)
* Sending mail with aliases:             Expanding aliases when sending mail.
                                                               (line  6)
* Set number capability in vi emulators: Displaying the current line or column.
                                                               (line 24)
* Setting the included text character:   Changing the included text prefix.
                                                               (line  6)
* Setting X resources:                   Valid X resources.    (line  6)
* Shell buffer, echoed commands and ^M in: ^M in the shell buffer.
                                                               (line  6)
* Shell Mode, problems:                  Problems with Shell Mode.
                                                               (line  6)
* shell-mode and current directory:      Shell mode loses the current directory.
                                                               (line  6)
* Show matching paren as in vi:          Matching parentheses. (line 25)
* Single space following periods:        Filling paragraphs with a single space.
                                                               (line  6)
* Slow catch up in Gnus:                 Making Gnus faster.   (line  6)
* Sorting messages in an Rmail folder:   Sorting the messages in an Rmail folder.
                                                               (line  6)
* Source code, building Emacs from:      Installing Emacs.     (line  6)
* Sources for current GNU distributions: Current GNU distributions.
                                                               (line  6)
* SPC file name completion:              SPC no longer completes file names.
                                                               (line  6)
* <SPC>, definition of:                  Basic keys.           (line  6)
* Spell-checker:                         Spell-checkers.       (line  6)
* Stallman, Richard, acronym for:        Common acronyms.      (line  6)
* Starting Gnus faster:                  Making Gnus faster.   (line  6)
* Starting mail/news reader automatically: Automatically starting a mail or news reader.
                                                               (line  6)
* Status of Emacs:                       Status of Emacs.      (line  6)
* Stuff, current GNU:                    Current GNU distributions.
                                                               (line  6)
* support for push commands in VC:       New in Emacs 25.      (line 44)
* Supported systems:                     New in Emacs 22.      (line  9)
* Suspending Emacs:                      Forcing Emacs to iconify itself.
                                                               (line  6)
* Swapping keys:                         Swapping keys.        (line  6)
* switch, indenting:                     Indenting switch statements.
                                                               (line  6)
* Symbols generated by function keys:    Working with function and arrow keys.
                                                               (line  6)
* Syntax highlighting:                   Turning on syntax highlighting.
                                                               (line  6)
* Syntax highlighting on a TTY:          Colors on a TTY.      (line  6)
* Synthetic X events and security:       Security risks with Emacs.
                                                               (line  6)
* systemd support:                       New in Emacs 26.      (line  8)
* Tab length:                            Changing the length of a Tab.
                                                               (line  6)
* <TAB>, definition of:                  Basic keys.           (line  6)
* tabs:                                  New in Emacs 27.      (line 33)
* TECO:                                  Origin of the term Emacs.
                                                               (line  6)
* Termcap:                               Termcap/Terminfo entries for Emacs.
                                                               (line  6)
* Terminal setup code in .emacs:         Terminal setup code works after Emacs has begun.
                                                               (line  6)
* Terminfo:                              Termcap/Terminfo entries for Emacs.
                                                               (line  6)
* Texinfo documentation, installing:     Installing Texinfo documentation.
                                                               (line  6)
* Texinfo file, printing:                Printing a Texinfo file.
                                                               (line  6)
* Text indentation:                      Automatic indentation.
                                                               (line  6)
* Text strings, putting regexps in:      Using regular expressions.
                                                               (line  6)
* themes:                                New in Emacs 24.      (line 28)
* threads:                               New in Emacs 26.      (line  6)
* Titlebar, displaying the current file name in: Displaying the current file name in the titlebar.
                                                               (line  6)
* Toggling overwrite-mode:               Overwrite mode.       (line  6)
* Toolbar support:                       New in Emacs 21.      (line  6)
* Translations for keys under X:         X key translations for Emacs.
                                                               (line  6)
* TTY colors:                            New in Emacs 21.      (line 14)
* Tutorial, invoking the:                Basic editing.        (line  6)
* Unbundled packages:                    Packages that do not come with Emacs.
                                                               (line  6)
* Unicode:                               New in Emacs 23.      (line 11)
* Unicode 11.0.0:                        New in Emacs 26.      (line 49)
* Unicode 9.0.0:                         New in Emacs 25.      (line 25)
* Unicode characters, typing easily:     New in Emacs 25.      (line 14)
* Unix regexps, differences from Emacs:  Using regular expressions.
                                                               (line  6)
* Unix systems, installing Emacs on:     Installing Emacs.     (line  6)
* Unprintable characters, working with:  Working with unprintable characters.
                                                               (line  6)
* Unsubscribing from GNU mailing lists:  Unsubscribing from Emacs lists.
                                                               (line  6)
* Up-to-date GNU stuff:                  Current GNU distributions.
                                                               (line  6)
* Usenet archives for GNU groups:        Newsgroup archives.   (line  6)
* Usenet groups, appropriate messages for: Guidelines for newsgroup postings.
                                                               (line  6)
* Usenet reader in Emacs:                Reading news with Emacs.
                                                               (line  6)
* Using an existing Emacs process:       Using an already running Emacs process.
                                                               (line  6)
* Variable documentation:                Emacs Lisp documentation.
                                                               (line  6)
* Variable-size fonts:                   New in Emacs 21.      (line  6)
* Version, latest:                       Latest version of Emacs.
                                                               (line  6)
* Vertical movement in empty documents:  Forcing the cursor to remain in the same column.
                                                               (line  6)
* Very large files, opening:             Problems with very large files.
                                                               (line  6)
* Viewing Info files:                    Viewing Info files outside of Emacs.
                                                               (line  6)
* Visible bell:                          Turning off beeping.  (line  6)
* Volume of bell:                        Turning the volume down.
                                                               (line  6)
* w32-bdf-filename-alist:                How to add fonts.     (line 58)
* w32-find-bdf-fonts:                    How to add fonts.     (line 58)
* Why Emacs?:                            Origin of the term Emacs.
                                                               (line 22)
* Windows files, editing:                Editing MS-DOS files. (line  6)
* Working with arrow keys:               Working with function and arrow keys.
                                                               (line  6)
* Working with function keys:            Working with function and arrow keys.
                                                               (line  6)
* Working with unprintable characters:   Working with unprintable characters.
                                                               (line  6)
* Wrapping lines:                        Wrapping words automatically.
                                                               (line  6)
* Wrapping word automatically:           Wrapping words automatically.
                                                               (line  6)
* X and tty displays:                    New in Emacs 23.      (line 14)
* X events and security:                 Security risks with Emacs.
                                                               (line  6)
* X key translations:                    X key translations for Emacs.
                                                               (line  6)
* X resources:                           Valid X resources.    (line  6)
* X resources being ignored:             Emacs ignores X resources.
                                                               (line  6)
* X Window System and iconification:     Forcing Emacs to iconify itself.
                                                               (line  6)
* XDG convention:                        New in Emacs 27.      (line 26)
* XEmacs:                                Difference between Emacs and XEmacs.
                                                               (line  6)
* xref:                                  New in Emacs 25.      (line 51)
* Xterm and <Meta> key:                  Meta key does not work in xterm.
                                                               (line  6)
* xwidgets:                              New in Emacs 25.      (line  6)
* Yanking text into the search string:   Yanking text in isearch.
                                                               (line  6)
* Zile:                                  Emacs for minimalists.
                                                               (line  6)



Tag Table:
Node: Top1370
Node: FAQ notation4218
Node: Basic keys4762
Ref: Basic keys-Footnote-17221
Node: Extended commands7326
Node: Emacs manual8716
Node: File-name conventions10094
Node: Common acronyms11983
Node: General questions12991
Node: Real meaning of copyleft13454
Node: Guidelines for newsgroup postings15206
Node: Newsgroup archives17238
Node: Reporting bugs18018
Node: Unsubscribing from Emacs lists20983
Node: Contacting the FSF21649
Node: Getting help22130
Node: Basic editing22669
Node: Learning how to do something24457
Node: Getting a printed manual27727
Node: Emacs Lisp documentation28811
Node: Installing Texinfo documentation29754
Node: Printing a Texinfo file34868
Node: Viewing Info files outside of Emacs36680
Node: Informational files for Emacs37408
Node: Help installing Emacs38851
Node: Obtaining the FAQ39554
Node: Status of Emacs40214
Node: Origin of the term Emacs40713
Node: Latest version of Emacs42323
Node: New in Emacs 2744060
Node: New in Emacs 2646307
Node: New in Emacs 2549545
Node: New in Emacs 2453661
Node: New in Emacs 2356712
Node: New in Emacs 2258493
Node: New in Emacs 2162386
Node: New in Emacs 2063544
Node: Common requests64410
Node: Setting up a customization file66075
Node: Using Customize67743
Node: Colors on a TTY68795
Node: Debugging a customization file73018
Node: Displaying the current line or column74111
Node: Displaying the current file name in the titlebar76528
Node: Turning on abbrevs by default77938
Node: Associating modes with files78875
Node: Replacing highlighted text80051
Node: Controlling case sensitivity81181
Node: Working with unprintable characters82216
Node: Searching for/replacing newlines84196
Node: Yanking text in isearch84627
Node: Wrapping words automatically85014
Node: Turning on auto-fill by default85615
Node: Changing load-path86581
Node: Using an already running Emacs process87158
Node: Compiler error messages89705
Node: Indenting switch statements90122
Node: Customizing C and C++ indentation90769
Node: Overwrite mode94222
Node: Turning off beeping94798
Node: Turning the volume down95556
Node: Automatic indentation96318
Node: Matching parentheses98760
Node: Hiding #ifdef lines100712
Node: Repeating commands101162
Node: Valid X resources102633
Node: Evaluating Emacs Lisp code103173
Node: Changing the length of a Tab105156
Node: Inserting text at the beginning of each line105985
Node: Forcing the cursor to remain in the same column107421
Node: Forcing Emacs to iconify itself108118
Node: Using regular expressions108550
Node: Replacing text across multiple files109770
Node: Documentation for etags111407
Node: Disabling backups111867
Node: Disabling auto-save-mode114284
Node: Going to a line by number115529
Node: Modifying pull-down menus117467
Node: Deleting menus and menu options121686
Node: Turning on syntax highlighting122633
Node: Scrolling only one line126530
Node: Editing MS-DOS files127308
Node: Filling paragraphs with a single space128244
Node: Escape sequences in shell output128683
Node: Fullscreen mode on MS-Windows129720
Node: Bugs and problems130995
Node: Problems with very large files132270
Node: ^M in the shell buffer133524
Node: Problems with Shell Mode135732
Node: Termcap/Terminfo entries for Emacs136613
Node: Errors with init files138226
Node: Emacs ignores X resources139310
Node: Emacs ignores frame parameters141455
Node: Editing files with $ in the name142550
Node: Shell mode loses the current directory143078
Node: Security risks with Emacs144284
Node: Dired claims that no file is on this line148490
Node: Compiling and installing Emacs149690
Node: Installing Emacs149953
Node: Problems building Emacs153126
Node: Finding Emacs and related packages153986
Node: Finding Emacs on the Internet154533
Node: Finding a package with particular functionality155156
Node: Packages that do not come with Emacs156646
Node: Spell-checkers159809
Node: Current GNU distributions160295
Node: Difference between Emacs and XEmacs160793
Node: Emacs for minimalists163275
Node: Emacs for MS-DOS163955
Node: Emacs for MS-Windows165234
Node: Emacs for GNUstep165660
Node: Emacs for macOS166077
Node: Key bindings166459
Node: Binding keys to commands167122
Node: Invalid prefix characters169922
Node: Terminal setup code works after Emacs has begun170985
Node: Working with function and arrow keys172642
Node: X key translations for Emacs173283
Node: Backspace invokes help174376
Node: Swapping keys179233
Node: Producing C-XXX with the keyboard180725
Node: No Meta key181547
Node: No Escape key182262
Node: Compose Character182977
Node: Binding combinations of modifiers and function keys183569
Node: Meta key does not work in xterm185130
Node: ExtendChar key does not work as Meta188076
Node: SPC no longer completes file names189205
Node: Alternate character sets190077
Node: Emacs does not display 8-bit characters190377
Node: Inputting eight-bit characters191374
Node: Right-to-left alphabets191904
Node: How to add fonts192480
Node: Mail and news197896
Node: Changing the included text prefix198414
Node: Saving a copy of outgoing mail199232
Node: Expanding aliases when sending mail200414
Node: Sorting the messages in an Rmail folder201969
Node: Rmail writes to /var/spool/mail202382
Node: Replying to the sender of a message203633
Node: Automatically starting a mail or news reader204839
Node: Reading news with Emacs205669
Node: Making Gnus faster206070
Node: Catching up in all newsgroups206891
Node: Concept index207361

End Tag Table


Local Variables:
coding: utf-8
End:
